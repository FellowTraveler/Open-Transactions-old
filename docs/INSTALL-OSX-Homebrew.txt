#########################################################################
#									#
#									#
#		##	INSTALL - OSX Homebrew		##		#
#									#
#									#
#########################################################################




#############

##   ALL   ##

# Go to the APP STORE (or otherwise) and install XCODE
# Load XCODE and Open Preferences; under download, install �Command Line Tools�

# Tell xcode-select where the installed xcode is:
$ sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer

# install brew:
$ ruby -e "$(curl -fsSkL raw.github.com/mxcl/homebrew/go)"

# add dupes and versions to homebrew:
$ brew tap homebrew/dupes
$ brew tap homebrew/versions

# update:
$ brew update


#############

# use CLANG by default (add to your profile)

$ echo 'export CPP=cpp; export CC=clang; export CXX=clang++' >> ~/.profile
$ source ~/.profile

# Since we are using the 2.xx branch of zmq, we need to checkout an older zeromq formular:

$ cd $HOMEBREW_PREFIX
$ git checkout 6a2e6ef Library/Formula/zeromq.rb
$ cd ~

$ brew install --use-clang cmake protobuf msgpack zeromq boost git automake autoconf libtool


#############

##   ALL   ##


# Get the Homebew-Prefix loacation from brew, and sets it in $HOMEBREW_PREFIX
# (We use the "$HOMEBREW_PREFIX" for where to install OpenSSL and OT):
$ echo "export $(brew --config | grep HOMEBREW_PREFIX | sed 's/: /=/')" >> ~/.profile
$ source ~/.profile


## OPTIONAL -  ONLY FOR NON-GLOBAL INSTALLS) ##

# if your $HOMEBREW_PREFIX is not standard (eg /usr/local) you need to add it to the aclocal dirlist:
$ sudo bash -c 'echo '$HOMEBREW_PREFIX/share/aclocal' >> `aclocal --print-ac-dir`/dirlist'
# and set a path to your homebrew prefix
$ export PATH=$PATH:$HOMEBREW_PREFIX/bin


#############

##   ALL   ##

## OPENSSL ##

# homebrew doesn't pack openssl 1.0 yet
$ mkdir -p ~/Scratch/Sources; cd ~/Scratch/Sources
$ curl -O http://www.openssl.org/source/openssl-1.0.1c.tar.gz
$ tar xf openssl-1.0.1c.tar.gz
$ cd openssl-1.0.1c

(for a x64)
$ ./Configure darwin64-x86_64-cc shared -DPURIFY --prefix=$HOMEBREW_PREFIX

(for a x32)
$ ./Configure shared -DPURIFY --prefix=$HOMEBREW_PREFIX

(Using DPURIFY so that we don't get false positives in Valgrind, from OpenSSL.)

$ make
$ make tests
# may need root, depending on where $HOMEBREW_PREFIX points
$ make install


## CHAISCRIPT ##

# fetch chaiscript
$ mkdir -p ~/Scratch/Sources; cd ~/Scratch/Sources
$ git clone git://github.com/ChaiScript/ChaiScript.git

# build chaiscript
$ cd ChaiScript
$ cmake . -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_PREFIX=$HOMEBREW_PREFIX 
$ make
$ make test
$ make install
$ cd ..



## OPEN TRANSACTIONS ##

# fetch Open Transactions and prepare your copy for build

$ export PKG_CONFIG_PATH=$HOMEBREW_PREFIX/lib/pkgconfig

$ mkdir -p ~/Scratch/Sources; cd ~/Scratch/Sources
$ git clone git://github.com/FellowTraveler/Open-Transactions.git
$ cd Open-Transactions

$ autoreconf -vif -Wall


########################################

# if we are using java... test-run java (it will be installed if missing)
$ javac

(for a x64)
$ ./configure --build=x86_64-apple-darwin11 --host=x86_64-apple-darwin11 --target=x86_64-apple-darwin11 \
--prefix=$HOMEBREW_PREFIX --with-java

(for a x32)
$ ./configure --build=i686-apple-darwin11 --host=i686-apple-darwin11 --target=i686-apple-darwin11 \
--prefix=$HOMEBREW_PREFIX --with-java

(NB: Default without the "--prefix=" installs sytem-wide to /usr/local 
and will require admin privileges for "$ sudo make install" step below.
Also, for MoneyChanger support "--with-java" flag is needed)


#########   Configure Options:   #########
Enable Configuration in Release Mode:
--enable-release

Enable extra (noisy) warnings with compile:
--enable-warnings

Enable the signal handling for catching segmentation fault's (debug only):
--enable-sighandler

Enable system keyring storage of OT passwords:
--with-keyring=ARG
(ARG can be one of gnome, kwallet, windows, mac.)

# Swig API support options: #

Enable Configuration for SWIG Java Support:
--with-java

Enable Configuration for SWIG Perl 5 Support:
--with-perl5

Enable Configuration for SWIG PHP Support:
--with-php

Enable Configuration for SWIG Python Support:
--with-python

Enable Configuration for SWIG Ruby Support:
--with-ruby

##########################################


$ make uninstall (if you have ever installed anything)

$ make -j2

Build Multithreaded, need about 1gb of ram per thread.
-j (int, mutiple of of 2)   EXAMPLE: make -j4

DO NOT do just -j (no number) as that will use an unlimited
number of threads and crash your system.

$ make install


==============================
###  Miscellaneous Notes:  ###

# Create a wallet data folder (will reset everything):

$ mkdir -p ~/.ot && cp -R sample-data/ot-sample-data/* ~/.ot

# add to ~/.profile

export PKG_CONFIG_PATH=$HOMEBREW_PREFIX/lib/pkgconfig

# set PATH so it includes user's .local root bin if it exists
if [ -d "$HOMEBREW_PREFIX/bin" ] ; then
    PATH="$HOMEBREW_PREFIX/bin:$PATH"
fi

# to avoid logging out and then logging back in again, just do ...
$ source ~/.profile

# to run otserver
$ otserver

# for python client api support export env variable
$ export PYTHON_PATH=$HOMEBREW_PREFIX/lib:$PYTHON_PATH

==============================
