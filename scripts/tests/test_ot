#!/bin/bash

# Todo:  Script to run all the various tests in this folder.



#OPTIONS="start quit"
#select opt in $OPTIONS; do
#   if [ "$opt" = "quit" ]; then
#    echo done
#    exit
#   elif [ "$opt" = "start" ]; then
#    break
#   else
#    clear
#    echo bad option
#   fi
#done



FTNYM="T1Q3wZWgeTUoaUvn9m1lzIK5tn5wITlzxzrGNI8qtaV"
BOBNYM="SP8rPHc6GMRPL517UL5J8RK2yOiToyVqMaj3PUHvLzM"

FTACCT="eMldMMiKfJRO8B8yJjzcezs9xvSt7dkdlWt50e8CDxn"
BOBACCT="batXTEEvqN3WNimaFfgXEBNrBJRthkktKI7XwMHVwH1"

SILVERPURSE="CvHGtfOOKzQKL5hFL7J4iF5yAodVKhS1rxPzME5R9XA"
TOKENSPURSE="ttHGviJ9hRcijEvWT4f9KpqVcZ7c0UqXYNslvSEa6gJ"

SERVER="tBy5mL14qSQXCJK7Uz3WlTOKRP9M0JZksA3Eg7EnnQ1"



function test_command {
    THE_COMMAND=$1
    THE_OUTPUT=`$2`
    RETURN_VAL=$?
    THE_RESULT=$( printf '%03d' $RETURN_VAL )
    if [ "$RETURN_VAL" = "0" ]; then
       echo "$THE_COMMAND returned zero. (Success.)"
    else
       echo "$THE_COMMAND returned: $RETURN_VAL   (0 is success)"
    fi

    echo "-----------------------------------------"
    echo "Output:"
    echo "$THE_OUTPUT"
    echo ""
    echo "(Finished $THE_COMMAND) Press enter to continue..."
    read CONTINUE
}  




#showaccounts	show the asset accounts in the wallet.

test_command "showaccounts" "opentxs showaccounts"



#showservers	show the server contracts in the wallet.

test_command "showservers" "opentxs showservers"



#showassets     show the currency contracts in the wallet.

test_command "showassets" "opentxs showassets"



#checknym       download a nym's public key based on his ID.
COMPLEX_COMMAND="opentxs checknym --mynym $FTNYM --hisnym $BOBNYM"
test_command "checknym" "$COMPLEX_COMMAND"


#shownyms       show the nyms in the wallet.

test_command "shownyms" "opentxs shownyms"




#stat           display wallet contents.

test_command "stat" "opentxs stat"



#shownym		show the statistics for a specific nym.

test_command "shownym" "opentxs shownym --mynym $FTNYM"





#getmarkets     download the list of markets.
#showmarkets        display the list of markets on a particular server.
test_command "getmarkets" "opentxs getmarkets --mynym $FTNYM --server $SERVER"
test_command "showmarkets" "opentxs showmarkets --mynym $FTNYM --server $SERVER"




#showacct       show account stats for a single account.

test_command "showacct" "opentxs showacct --myacct $FTACCT"



#balance		display balance for a specific account.

test_command "balance" "opentxs balance --myacct $FTACCT"



#inbox          display inbox of a particular account.

test_command "inbox" "opentxs inbox --myacct $FTACCT"


#outbox         display outbox of a particular account.

test_command "outbox" "opentxs outbox --myacct $FTACCT"


#refresh		performs both refreshnym and refreshacct.
#refreshacct	download latest intermediary files for myacct.
#refreshnym     download latest intermediary files for mynym.

test_command "refresh" "opentxs refresh --server $SERVER --mynym $FTNYM --myacct $FTACCT"




#withdraw       withdraw cash. (From acct on server into local purse.)
COMPLEX_COMMAND="opentxs withdraw --myacct $FTACCT"
test_command "withdraw" "$COMPLEX_COMMAND"

#showpurse      show contents of cash purse.
test_command "showpurse" "opentxs showpurse --mynym $FTNYM --server $SERVER --mypurse $SILVERPURSE"

#deposit		deposit cash, cheque, voucher, or tokens.
opentxs deposit --myacct $FTACCT --args "indices all"

    echo ""
    echo "(Finished deposit cash from purse) Press enter to continue..."
    read CONTINUE

#showpurse      show contents of cash purse.
test_command "showpurse" "opentxs showpurse --mynym $FTNYM --server $SERVER --mypurse $SILVERPURSE"





#transfer       send a transfer from myacct to hisacct.




#acceptall          accept all receipts, invoices, payments, and transfers.
#acceptreceipts     accept all receipts in myacct's inbox.
#acceptinvoices     accept all invoices in mynym's payments inbox.
#accepttransfers    accept all incoming transfers for myacct.
#acceptinbox        accept all incoming transfers and receipts in myacct's inbox.
#acceptpayments     accept all incoming payments for mynym.
#acceptmoney        accept all incoming payments and transfers for mynym and myacct.






#sendmsg		send a message to another nym's in-mail.
#outmail		display out-mail for a particular nym.
#mail           display in-mail for a particular nym.
#delmail		delete an in-mail item.
#deloutmail     delete an out-mail item.
#sendcheque     write a cheque and then send it to the recipient.
#sendinvoice	write an invoice and then send it to the recipient.
#sendvoucher	withdraw a voucher and then send it to the recipient.
#outpayment     display contents of outgoing payments box.
#payments       display contents of incoming payments box.
#showpayment	show the details of an incoming payment in the payments inbox.
#payinvoice     pay an invoice.
#
# Financial instruments:
#exportcash     export a cash purse.
#importcash     import a cash purse.
#discard		discard/cancel a not-yet-cashed, outgoing instrument.















# Advanced utilities:
#encode         OT-base64-encode into armor.
#decode         OT-base64-decode out of armor.
#encrypt		encrypt plaintext to a nym's public key.
#decrypt		decrypt ciphertext using nym's private key.
#newkey         create a new symmetric key.
#pass_decrypt	password-decrypt a ciphertext using a symmetric key.
#pass_encrypt	password-encrypt a plaintext using a symmetric key.
#showmint       show a mint file for specific asset ID. Download if necessary.

#register       register a nym onto an OT server.
#sign           sign a contract, releasing all other signatures first.
#verifysig      verify a signature on a contract.
#addsignature	add a signature to a contract without releasing others.
#exchange       exchange in/out of a basket currency.
#getboxreceipt	downloads a box receipt based on transaction ID.
#getcontract	download an asset or server contract by its ID.
#newserver      create a new server contract.
#issueasset     issue a currency contract onto an OT server.
#newasset       create a new asset contract.
#newbasket      create a new basket currency.
#showbaskets	show basket currencies issued on a particular server.
#
# The user wallet:
#exportcert     export the OpenSSL cert (only) for a specific Nym.
#exportnym      export an OT Nym as a single importable file.
#importcert     import an OpenSSL cert and create a Nym based on it.
#importnym      import an OT Nym that was previously exported.
#verifyreceipt	verify your intermediary files against the last signed receipt.

#addasset       paste an existing asset contract, import it into your wallet.
#addserver      paste an existing server contract, import it into your wallet.
#changepw       change the master passphrase for the wallet.
#editacct       edit an asset account's label, as it appears in your wallet.
#editasset      edit a currency contract's label, as it appears in your wallet.
#editnym		edit the nym's label, as it appears in your wallet.
#editserver     edit a server contract's label, as it appears in your wallet.
#newnym         create a new nym.
#
# Misc:
#clearrecords	clear all the records out of the recordbox.
#records		display contents of record box.
#
# Markets (bid/ask):
#newoffer       create a new market offer.
#getoffers      download the list of market offers.
#showoffers     show all offers on a particular server and market.
#getmyoffers	download mynym's list of market offers.
#showmyoffers	show mynym's offers on a particular server and market.
#canceloffer	cancel a still-running, recurring market offer.
#paydividend	dividend payout, sent to all shareholders (in voucher form.)
#
# Asset accounts:
#newacct		create a new asset account.
#

#confirm		confirm your agreement to a smart contract or payment plan.
#activate       activate a smart contract or payment plan.
#trigger		trigger a clause on a running smart contract.
#cancelplan     cancel a still-running, recurring payment plan.


