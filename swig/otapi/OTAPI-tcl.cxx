/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGTCL


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



#include <stdio.h>
#include <tcl.h>
#include <errno.h>
#include <stdlib.h>
#include <stdarg.h>
#include <ctype.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.
  
  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The SWIG conversion methods, as ConvertPtr, return an integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* 
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGINTERN const char*
SWIG_Tcl_ErrorType(int code) {
  const char* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = "MemoryError";
    break;
  case SWIG_IOError:
    type = "IOError";
    break;
  case SWIG_RuntimeError:
    type = "RuntimeError";
    break;
  case SWIG_IndexError:
    type = "IndexError";
    break;
  case SWIG_TypeError:
    type = "TypeError";
    break;
  case SWIG_DivisionByZero:
    type = "ZeroDivisionError";
    break;
  case SWIG_OverflowError:
    type = "OverflowError";
    break;
  case SWIG_SyntaxError:
    type = "SyntaxError";
    break;
  case SWIG_ValueError:
    type = "ValueError";
    break;
  case SWIG_SystemError:
    type = "SystemError";
    break;
  case SWIG_AttributeError:
    type = "AttributeError";
    break;
  default:
    type = "RuntimeError";
  }
  return type;
}


SWIGINTERN void
SWIG_Tcl_SetErrorObj(Tcl_Interp *interp, const char *ctype, Tcl_Obj *obj)
{
  Tcl_ResetResult(interp);
  Tcl_SetObjResult(interp, obj);
  Tcl_SetErrorCode(interp, "SWIG", ctype, NULL);
}

SWIGINTERN void
SWIG_Tcl_SetErrorMsg(Tcl_Interp *interp, const char *ctype, const char *mesg)
{
  Tcl_ResetResult(interp);
  Tcl_SetErrorCode(interp, "SWIG", ctype, NULL);
  Tcl_AppendResult(interp, ctype, " ", mesg, NULL);
  /*
  Tcl_AddErrorInfo(interp, ctype);
  Tcl_AddErrorInfo(interp, " ");
  Tcl_AddErrorInfo(interp, mesg);
  */
}

SWIGINTERNINLINE void
SWIG_Tcl_AddErrorMsg(Tcl_Interp *interp, const char* mesg)
{
  Tcl_AddErrorInfo(interp, mesg);
}



/* -----------------------------------------------------------------------------
 * SWIG API. Portion that goes into the runtime
 * ----------------------------------------------------------------------------- */
#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_TCL_POINTER 4
#define SWIG_TCL_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

typedef int   (*swig_wrapper)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
typedef int   (*swig_wrapper_func)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
typedef char *(*swig_variable_func)(ClientData, Tcl_Interp *, char *, char *, int);
typedef void  (*swig_delete_func)(ClientData);

typedef struct swig_method {
  const char     *name;
  swig_wrapper   method;
} swig_method;

typedef struct swig_attribute {
  const char     *name;
  swig_wrapper   getmethod;
  swig_wrapper   setmethod;
} swig_attribute;

typedef struct swig_class {
  const char         *name;
  swig_type_info   **type;
  swig_wrapper       constructor;
  void              (*destructor)(void *);
  swig_method        *methods;
  swig_attribute     *attributes;
  struct swig_class **bases;
  const char              **base_names;
  swig_module_info   *module;
  Tcl_HashTable       hashtable;
} swig_class;

typedef struct swig_instance {
  Tcl_Obj       *thisptr;
  void          *thisvalue;
  swig_class   *classptr;
  int            destroy;
  Tcl_Command    cmdtok;
} swig_instance;

/* Structure for command table */
typedef struct {
  const char *name;
  int       (*wrapper)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
  ClientData  clientdata;
} swig_command_info;

/* Structure for variable linking table */
typedef struct {
  const char *name;
  void *addr;
  char * (*get)(ClientData, Tcl_Interp *, char *, char *, int);
  char * (*set)(ClientData, Tcl_Interp *, char *, char *, int);
} swig_var_info;


/* -----------------------------------------------------------------------------*
 *  Install a constant object 
 * -----------------------------------------------------------------------------*/

static Tcl_HashTable   swigconstTable;
static int             swigconstTableinit = 0;

SWIGINTERN void
SWIG_Tcl_SetConstantObj(Tcl_Interp *interp, const char* name, Tcl_Obj *obj) {
  int newobj;
  Tcl_ObjSetVar2(interp,Tcl_NewStringObj(name,-1), NULL, obj, TCL_GLOBAL_ONLY);
  Tcl_SetHashValue(Tcl_CreateHashEntry(&swigconstTable, name, &newobj), (ClientData) obj);
}

SWIGINTERN Tcl_Obj *
SWIG_Tcl_GetConstantObj(const char *key) {
  Tcl_HashEntry *entryPtr;
  if (!swigconstTableinit) return 0;
  entryPtr = Tcl_FindHashEntry(&swigconstTable, key);
  if (entryPtr) {
    return (Tcl_Obj *) Tcl_GetHashValue(entryPtr);
  }
  return 0;
}

#ifdef __cplusplus
}
#endif



/* -----------------------------------------------------------------------------
 * tclrun.swg
 *
 * This file contains the runtime support for Tcl modules and includes
 * code for managing global variables and pointer type checking.
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_ConvertPtr(oc, ptr, ty, flags)             SWIG_Tcl_ConvertPtr(interp, oc, ptr, ty, flags)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Tcl_NewPointerObj(ptr, type, flags)

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Tcl_ConvertPacked(interp, obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Tcl_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_Tcl_ConvertPtr(interp, obj, pptr, type, flags)
#define SWIG_NewInstanceObj(thisvalue, type, flags)     SWIG_Tcl_NewInstanceObj(interp, thisvalue, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Tcl_ConvertPtr(interp, obj, pptr, type, 0)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Tcl_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Tcl_ConvertPacked(interp,obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Tcl_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Tcl_GetModule((Tcl_Interp *) (clientdata))	     
#define SWIG_SetModule(clientdata, pointer)          	SWIG_Tcl_SetModule((Tcl_Interp *) (clientdata), pointer)


/* Error manipulation */

#define SWIG_ErrorType(code)                            SWIG_Tcl_ErrorType(code)                                      
#define SWIG_Error(code, msg)            		SWIG_Tcl_SetErrorMsg(interp, SWIG_Tcl_ErrorType(code), msg)
#define SWIG_fail                        		goto fail						    


/* Tcl-specific SWIG API */

#define SWIG_Acquire(ptr)                               SWIG_Tcl_Acquire(ptr)                                     
#define SWIG_MethodCommand                           	SWIG_Tcl_MethodCommand				       
#define SWIG_Disown(ptr)                             	SWIG_Tcl_Disown(ptr)				       
#define SWIG_ConvertPtrFromString(c, ptr, ty, flags) 	SWIG_Tcl_ConvertPtrFromString(interp, c, ptr, ty, flags)  
#define SWIG_MakePtr(c, ptr, ty, flags)              	SWIG_Tcl_MakePtr(c, ptr, ty, flags)		       
#define SWIG_PointerTypeFromString(c)                	SWIG_Tcl_PointerTypeFromString(c)			       
#define SWIG_GetArgs                                 	SWIG_Tcl_GetArgs					       
#define SWIG_GetConstantObj(key)                     	SWIG_Tcl_GetConstantObj(key)			       
#define SWIG_ObjectConstructor                       	SWIG_Tcl_ObjectConstructor				       
#define SWIG_Thisown(ptr)                            	SWIG_Tcl_Thisown(ptr)				       
#define SWIG_ObjectDelete                            	SWIG_Tcl_ObjectDelete				       


#define SWIG_TCL_DECL_ARGS_2(arg1, arg2)                (Tcl_Interp *interp SWIGUNUSED, arg1, arg2)
#define SWIG_TCL_CALL_ARGS_2(arg1, arg2)                (interp, arg1, arg2)
/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

/* For backward compatibility only */
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_GetConstant        SWIG_GetConstantObj
#define SWIG_Tcl_GetConstant    SWIG_Tcl_GetConstantObj

#include "assert.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Object support */

SWIGRUNTIME Tcl_HashTable*
SWIG_Tcl_ObjectTable(void) {
  static Tcl_HashTable  swigobjectTable;
  static int            swigobjectTableinit = 0;
  if (!swigobjectTableinit) {
    Tcl_InitHashTable(&swigobjectTable, TCL_ONE_WORD_KEYS);
    swigobjectTableinit = 1;
  }
  return &swigobjectTable;
}

/* Acquire ownership of a pointer */
SWIGRUNTIME void
SWIG_Tcl_Acquire(void *ptr) {
  int newobj;
  Tcl_CreateHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr, &newobj);
}

SWIGRUNTIME int
SWIG_Tcl_Thisown(void *ptr) {
  if (Tcl_FindHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr)) {
    return 1;
  }
  return 0;
}

/* Disown a pointer.  Returns 1 if we owned it to begin with */
SWIGRUNTIME int
SWIG_Tcl_Disown(void *ptr) {
  Tcl_HashEntry *entryPtr = Tcl_FindHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr);
  if (entryPtr) {
    Tcl_DeleteHashEntry(entryPtr);
    return 1;
  }
  return 0;
}

/* Convert a pointer value */
SWIGRUNTIME int
SWIG_Tcl_ConvertPtrFromString(Tcl_Interp *interp, const char *c, void **ptr, swig_type_info *ty, int flags) {
  swig_cast_info *tc;
  /* Pointer values must start with leading underscore */
  while (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) return SWIG_OK;

    /* Empty string: not a pointer */
    if (*c == 0) return SWIG_ERROR; 

    /* Hmmm. It could be an object name. */

    /* Check if this is a command at all. Prevents <c> cget -this         */
    /* from being called when c is not a command, firing the unknown proc */
    if (Tcl_VarEval(interp,"info commands ", c, (char *) NULL) == TCL_OK) {
      Tcl_Obj *result = Tcl_GetObjResult(interp);
      if (*(Tcl_GetStringFromObj(result, NULL)) == 0) {
        /* It's not a command, so it can't be a pointer */
        Tcl_ResetResult(interp);
        return SWIG_ERROR;
      }
    } else {
      /* This will only fail if the argument is multiple words. */
      /* Multiple words are also not commands.                  */
      Tcl_ResetResult(interp);
      return SWIG_ERROR;
    }

    /* Check if this is really a SWIG pointer */
    if (Tcl_VarEval(interp,c," cget -this", (char *) NULL) != TCL_OK) {
      Tcl_ResetResult(interp);
      return SWIG_ERROR;
    }

    c = Tcl_GetStringFromObj(Tcl_GetObjResult(interp), NULL);
  }

  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (ty) {
    tc = c ? SWIG_TypeCheck(c,ty) : 0;
    if (!tc) {
      return SWIG_ERROR;
    }
    if (flags & SWIG_POINTER_DISOWN) {
      SWIG_Disown((void *) *ptr);
    }
    {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,(void *) *ptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    }
  }
  return SWIG_OK;
}

/* Convert a pointer value */
SWIGRUNTIMEINLINE int
SWIG_Tcl_ConvertPtr(Tcl_Interp *interp, Tcl_Obj *oc, void **ptr, swig_type_info *ty, int flags) {
  return SWIG_Tcl_ConvertPtrFromString(interp, Tcl_GetStringFromObj(oc,NULL), ptr, ty, flags);
}

/* Convert a pointer value */
SWIGRUNTIME char *
SWIG_Tcl_PointerTypeFromString(char *c) {
  char d;
  /* Pointer values must start with leading underscore. NULL has no type */
  if (*c != '_') {
    return 0;
  }
  c++;
  /* Extract hex value from pointer */
  while ((d = *c)) {
    if (!(((d >= '0') && (d <= '9')) || ((d >= 'a') && (d <= 'f')))) break;
    c++;
  }
  return c;
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Tcl_ConvertPacked(Tcl_Interp *SWIGUNUSEDPARM(interp) , Tcl_Obj *obj, void *ptr, int sz, swig_type_info *ty) {
  swig_cast_info *tc;
  const char  *c;

  if (!obj) goto type_error;
  c = Tcl_GetStringFromObj(obj,NULL);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return SWIG_OK;

 type_error:

  return SWIG_ERROR;
}


/* Take a pointer and convert it to a string */
SWIGRUNTIME void
SWIG_Tcl_MakePtr(char *c, void *ptr, swig_type_info *ty, int flags) {
  if (ptr) {
    *(c++) = '_';
    c = SWIG_PackData(c,&ptr,sizeof(void *));
    strcpy(c,ty->name);
  } else {
    strcpy(c,(char *)"NULL");
  }
  flags = 0;
}

/* Create a new pointer object */
SWIGRUNTIMEINLINE Tcl_Obj *
SWIG_Tcl_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  Tcl_Obj *robj;
  char result[SWIG_BUFFER_SIZE];
  SWIG_MakePtr(result,ptr,type,flags);
  robj = Tcl_NewStringObj(result,-1);
  return robj;
}

SWIGRUNTIME Tcl_Obj *
SWIG_Tcl_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return Tcl_NewStringObj(result,-1);
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

SWIGRUNTIME swig_module_info * 
SWIG_Tcl_GetModule(Tcl_Interp *interp) {
  const char *data;
  swig_module_info *ret = 0;
  
  /* first check if pointer already created */
  data = Tcl_GetVar(interp, (char *)"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, TCL_GLOBAL_ONLY);
  if (data) {
    SWIG_UnpackData(data, &ret, sizeof(swig_type_info **));
  }

  return ret;
}

SWIGRUNTIME void
SWIG_Tcl_SetModule(Tcl_Interp *interp, swig_module_info *module) {
  char buf[SWIG_BUFFER_SIZE];
  char *data;

  /* create a new pointer */
  data = SWIG_PackData(buf, &module, sizeof(swig_type_info **));
  *data = 0;
  Tcl_SetVar(interp, (char *)"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, buf, TCL_GLOBAL_ONLY);
}

/* -----------------------------------------------------------------------------*
 *  Object auxiliars
 * -----------------------------------------------------------------------------*/


SWIGRUNTIME void
SWIG_Tcl_ObjectDelete(ClientData clientData) {
  swig_instance *si = (swig_instance *) clientData;
  if ((si) && (si->destroy) && (SWIG_Disown(si->thisvalue))) {
    if (si->classptr->destructor) {
      (si->classptr->destructor)(si->thisvalue);
    }
  }
  Tcl_DecrRefCount(si->thisptr);
  free(si);
}

/* Function to invoke object methods given an instance */
SWIGRUNTIME int
SWIG_Tcl_MethodCommand(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST _objv[]) {
  char *method,   *attrname;
  swig_instance   *inst = (swig_instance *) clientData;
  swig_method     *meth;
  swig_attribute  *attr;
  Tcl_Obj         *oldarg;
  Tcl_Obj         **objv;
  int              rcode;
  swig_class      *cls;
  swig_class      *cls_stack[64];
  int              cls_stack_bi[64];
  int              cls_stack_top = 0;
  int              numconf = 2;
  int              bi;

  objv = (Tcl_Obj **) _objv;
  if (objc < 2) {
    Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
    return TCL_ERROR;
  }
  method = Tcl_GetStringFromObj(objv[1],NULL);
  if (strcmp(method,"-acquire") == 0) {
    inst->destroy = 1;
    SWIG_Acquire(inst->thisvalue);
    return TCL_OK;
  }
  if (strcmp(method,"-disown") == 0) {
    if (inst->destroy) {
      SWIG_Disown(inst->thisvalue);
    }
    inst->destroy = 0;
    return TCL_OK;
  }
  if (strcmp(method,"-delete") == 0) {
    Tcl_DeleteCommandFromToken(interp,inst->cmdtok);
    return TCL_OK;
  }
  cls_stack[cls_stack_top] = inst->classptr;
  cls_stack_bi[cls_stack_top] = -1;
  cls = inst->classptr;
  while (1) {
    Tcl_HashEntry* hashentry;
    bi = cls_stack_bi[cls_stack_top];
    cls = cls_stack[cls_stack_top];
    if (bi != -1) {
      if (!cls->bases[bi] && cls->base_names[bi]) {
        /* lookup and cache the base class */
	swig_type_info *info = SWIG_TypeQueryModule(cls->module, cls->module, cls->base_names[bi]);
	if (info) cls->bases[bi] = (swig_class *) info->clientdata;
      }
      cls = cls->bases[bi];
      if (cls) {
        cls_stack_bi[cls_stack_top]++;
        cls_stack_top++;
        cls_stack[cls_stack_top] = cls;
        cls_stack_bi[cls_stack_top] = -1;
        continue;
      }
    }
    if (!cls) {
      cls_stack_top--;
      if (cls_stack_top < 0) break;
      else continue;
    }
    cls_stack_bi[cls_stack_top]++;

    hashentry = Tcl_FindHashEntry(&(cls->hashtable), method);
    if (hashentry) {
        ClientData cd = Tcl_GetHashValue(hashentry);
        swig_wrapper method_wrapper = (swig_wrapper)cd;
        oldarg = objv[1];
        objv[1] = inst->thisptr;
        Tcl_IncrRefCount(inst->thisptr);
        rcode = (method_wrapper)(clientData,interp,objc,objv);
        objv[1] = oldarg;
        Tcl_DecrRefCount(inst->thisptr);
        return rcode;
    }
    /* Check class methods for a match */
    if (strcmp(method,"cget") == 0) {
      if (objc < 3) {
        Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
        return TCL_ERROR;
      }
      attrname = Tcl_GetStringFromObj(objv[2],NULL);
      attr = cls->attributes;
      while (attr && attr->name) {
        if ((strcmp(attr->name, attrname) == 0) && (attr->getmethod)) {
          oldarg = objv[1];
          objv[1] = inst->thisptr;
          Tcl_IncrRefCount(inst->thisptr);
          rcode = (*attr->getmethod)(clientData,interp,2, objv);
          objv[1] = oldarg;
          Tcl_DecrRefCount(inst->thisptr);
          return rcode;
        }
        attr++;
      }
      if (strcmp(attrname, "-this") == 0) {
        Tcl_SetObjResult(interp, Tcl_DuplicateObj(inst->thisptr));
        return TCL_OK;
      }
      if (strcmp(attrname, "-thisown") == 0) {
        if (SWIG_Thisown(inst->thisvalue)) {
          Tcl_SetResult(interp,(char*)"1",TCL_STATIC);
        } else {
          Tcl_SetResult(interp,(char*)"0",TCL_STATIC);
        }
        return TCL_OK;
      }
    } else if (strcmp(method, "configure") == 0) {
      int i;
      if (objc < 4) {
        Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
        return TCL_ERROR;
      }
      i = 2;
      while (i < objc) {
        attrname = Tcl_GetStringFromObj(objv[i],NULL);
        attr = cls->attributes;
        while (attr && attr->name) {
          if ((strcmp(attr->name, attrname) == 0) && (attr->setmethod)) {
            oldarg = objv[i];
            objv[i] = inst->thisptr;
            Tcl_IncrRefCount(inst->thisptr);
            rcode = (*attr->setmethod)(clientData,interp,3, &objv[i-1]);
            objv[i] = oldarg;
            Tcl_DecrRefCount(inst->thisptr);
            if (rcode != TCL_OK) return rcode;
            numconf += 2;
          }
          attr++;
        }
        i+=2;
      }
    }
  }
  if (strcmp(method,"configure") == 0) {
    if (numconf >= objc) {
      return TCL_OK;
    } else {
      Tcl_SetResult(interp,(char *) "Invalid attribute name.", TCL_STATIC);
      return TCL_ERROR;
    }
  }
  if (strcmp(method,"cget") == 0) {
    Tcl_SetResult(interp,(char *) "Invalid attribute name.", TCL_STATIC);
    return TCL_ERROR;
  }
  Tcl_SetResult(interp, (char *) "Invalid method. Must be one of: configure cget -acquire -disown -delete", TCL_STATIC);
  cls = inst->classptr;
  bi = 0;
  while (cls) {
    meth = cls->methods;
    while (meth && meth->name) {
      char *cr = (char *) Tcl_GetStringResult(interp);
      size_t meth_len = strlen(meth->name);
      char* where = strchr(cr,':');
      while(where) {
        where = strstr(where, meth->name);
        if(where) {
          if(where[-1] == ' ' && (where[meth_len] == ' ' || where[meth_len]==0)) {
            break;
          } else {
            where++;
          }
        }
      }

      if (!where)
        Tcl_AppendElement(interp, (char *) meth->name);
      meth++;
    }
    cls = inst->classptr->bases[bi++];
  }
  return TCL_ERROR;
}

/* This function takes the current result and turns it into an object command */
SWIGRUNTIME Tcl_Obj *
SWIG_Tcl_NewInstanceObj(Tcl_Interp *interp, void *thisvalue, swig_type_info *type, int flags) {
  Tcl_Obj *robj = SWIG_NewPointerObj(thisvalue, type,0);
  /* Check to see if this pointer belongs to a class or not */
  if (thisvalue && (type->clientdata) && (interp)) {
    Tcl_CmdInfo    ci;
    char          *name;
    name = Tcl_GetStringFromObj(robj,NULL);
    if (!Tcl_GetCommandInfo(interp,name, &ci) || (flags)) {
      swig_instance *newinst = (swig_instance *) malloc(sizeof(swig_instance));
      newinst->thisptr = Tcl_DuplicateObj(robj);
      Tcl_IncrRefCount(newinst->thisptr);
      newinst->thisvalue = thisvalue;
      newinst->classptr = (swig_class *) type->clientdata;
      newinst->destroy = flags;
      newinst->cmdtok = Tcl_CreateObjCommand(interp, Tcl_GetStringFromObj(robj,NULL), (swig_wrapper_func) SWIG_MethodCommand, (ClientData) newinst, (swig_delete_func) SWIG_ObjectDelete);
      if (flags) {
        SWIG_Acquire(thisvalue);
      }
    }
  }
  return robj;
}

/* Function to create objects */
SWIGRUNTIME int
SWIG_Tcl_ObjectConstructor(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj          *newObj = 0;
  void             *thisvalue = 0;
  swig_instance   *newinst = 0;
  swig_class      *classptr = (swig_class *) clientData;
  swig_wrapper     cons = 0;
  char             *name = 0;
  int               firstarg = 0;
  int               thisarg = 0;
  int               destroy = 1;

  if (!classptr) {
    Tcl_SetResult(interp, (char *) "swig: internal runtime error. No class object defined.", TCL_STATIC);
    return TCL_ERROR;
  }
  cons = classptr->constructor;
  if (objc > 1) {
    char *s = Tcl_GetStringFromObj(objv[1],NULL);
    if (strcmp(s,"-this") == 0) {
      thisarg = 2;
      cons = 0;
    } else if (strcmp(s,"-args") == 0) {
      firstarg = 1;
    } else if (objc == 2) {
      firstarg = 1;
      name = s;
    } else if (objc >= 3) {
      char *s1;
      name = s;
      s1 = Tcl_GetStringFromObj(objv[2],NULL);
      if (strcmp(s1,"-this") == 0) {
	thisarg = 3;
	cons = 0;
      } else {
	firstarg = 1;
      }
    }
  }
  if (cons) {
    int result;
    result = (*cons)(0, interp, objc-firstarg, &objv[firstarg]);
    if (result != TCL_OK) {
      return result;
    }
    newObj = Tcl_DuplicateObj(Tcl_GetObjResult(interp));
    if (!name) name = Tcl_GetStringFromObj(newObj,NULL);
  } else if (thisarg > 0) {
    if (thisarg < objc) {
      destroy = 0;
      newObj = Tcl_DuplicateObj(objv[thisarg]);
      if (!name) name = Tcl_GetStringFromObj(newObj,NULL);
    } else {
      Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
      return TCL_ERROR;
    }
  } else {
    Tcl_SetResult(interp, (char *) "No constructor available.", TCL_STATIC);
    return TCL_ERROR;
  }
  if (SWIG_Tcl_ConvertPtr(interp,newObj, (void **) &thisvalue, *(classptr->type), 0) != SWIG_OK) {
    Tcl_DecrRefCount(newObj);
    return TCL_ERROR;
  }
  newinst = (swig_instance *) malloc(sizeof(swig_instance));
  newinst->thisptr = newObj;
  Tcl_IncrRefCount(newObj);
  newinst->thisvalue = thisvalue;
  newinst->classptr = classptr;
  newinst->destroy = destroy;
  if (destroy) {
    SWIG_Acquire(thisvalue);
  }
  newinst->cmdtok = Tcl_CreateObjCommand(interp,name, (swig_wrapper) SWIG_MethodCommand, (ClientData) newinst, (swig_delete_func) SWIG_ObjectDelete);
  return TCL_OK;
}

/* -----------------------------------------------------------------------------*
 *   Get arguments 
 * -----------------------------------------------------------------------------*/
SWIGRUNTIME int
SWIG_Tcl_GetArgs(Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[], const char *fmt, ...) {
  int        argno = 0, opt = 0;
  long       tempi;
  double     tempd;
  const char *c;
  va_list    ap;
  void      *vptr;
  Tcl_Obj   *obj = 0;
  swig_type_info *ty;

  va_start(ap,fmt);
  for (c = fmt; (*c && (*c != ':') && (*c != ';')); c++,argno++) {
    if (*c == '|') {
      opt = 1;
      c++;
    }
    if (argno >= (objc-1)) {
      if (!opt) {
        Tcl_SetResult(interp, (char *) "Wrong number of arguments ", TCL_STATIC);
        goto argerror;
      } else {
        va_end(ap);
        return TCL_OK;
      }
    }

    vptr = va_arg(ap,void *);
    if (vptr) {
      if (isupper(*c)) {
        obj = SWIG_Tcl_GetConstantObj(Tcl_GetStringFromObj(objv[argno+1],0));
        if (!obj) obj = objv[argno+1];
      } else {
        obj = objv[argno+1];
      }
      switch(*c) {
      case 'i': case 'I':
      case 'l': case 'L':
      case 'h': case 'H':
      case 'b': case 'B':
        if (Tcl_GetLongFromObj(interp,obj,&tempi) != TCL_OK) goto argerror;
        if ((*c == 'i') || (*c == 'I')) *((int *)vptr) = (int)tempi;
        else if ((*c == 'l') || (*c == 'L')) *((long *)vptr) = (long)tempi;
        else if ((*c == 'h') || (*c == 'H')) *((short*)vptr) = (short)tempi;
        else if ((*c == 'b') || (*c == 'B')) *((unsigned char *)vptr) = (unsigned char)tempi;
        break;
      case 'f': case 'F':
      case 'd': case 'D':
        if (Tcl_GetDoubleFromObj(interp,obj,&tempd) != TCL_OK) goto argerror;
        if ((*c == 'f') || (*c == 'F')) *((float *) vptr) = (float)tempd;
        else if ((*c == 'd') || (*c == 'D')) *((double*) vptr) = tempd;
        break;
      case 's': case 'S':
        if (*(c+1) == '#') {
          int *vlptr = (int *) va_arg(ap, void *);
          *((char **) vptr) = Tcl_GetStringFromObj(obj, vlptr);
          c++;
        } else {
          *((char **)vptr) = Tcl_GetStringFromObj(obj,NULL);
        }
        break;
      case 'c': case 'C':
        *((char *)vptr) = *(Tcl_GetStringFromObj(obj,NULL));
        break;
      case 'p': case 'P':
        ty = (swig_type_info *) va_arg(ap, void *);
        if (SWIG_Tcl_ConvertPtr(interp, obj, (void **) vptr, ty, 0) != SWIG_OK) goto argerror;
        break;
      case 'o': case 'O':
        *((Tcl_Obj **)vptr) = objv[argno+1];
        break;
      default:
        break;
      }
    }
  }

  if ((*c != ';') && ((objc-1) > argno)) {
    Tcl_SetResult(interp, (char *) "Wrong # args.", TCL_STATIC);
    goto argerror;
  }
  va_end(ap);
  return TCL_OK;

 argerror:
  {
    char temp[32];
    sprintf(temp,"%d", argno+1);
    c = strchr(fmt,':');
    if (!c) c = strchr(fmt,';');
    if (!c) c = (char *)"";
    Tcl_AppendResult(interp,c," argument ", temp, NULL);
    va_end(ap);
    return TCL_ERROR;
  }
}

#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_OTCallback swig_types[0]
#define SWIGTYPE_p_OTCaller swig_types[1]
#define SWIGTYPE_p_OTDB__Acct swig_types[2]
#define SWIGTYPE_p_OTDB__AddressBook swig_types[3]
#define SWIGTYPE_p_OTDB__AskData swig_types[4]
#define SWIGTYPE_p_OTDB__BidData swig_types[5]
#define SWIGTYPE_p_OTDB__BitcoinAcct swig_types[6]
#define SWIGTYPE_p_OTDB__BitcoinServer swig_types[7]
#define SWIGTYPE_p_OTDB__Blob swig_types[8]
#define SWIGTYPE_p_OTDB__Contact swig_types[9]
#define SWIGTYPE_p_OTDB__ContactAcct swig_types[10]
#define SWIGTYPE_p_OTDB__ContactNym swig_types[11]
#define SWIGTYPE_p_OTDB__Displayable swig_types[12]
#define SWIGTYPE_p_OTDB__LoomServer swig_types[13]
#define SWIGTYPE_p_OTDB__MarketData swig_types[14]
#define SWIGTYPE_p_OTDB__MarketList swig_types[15]
#define SWIGTYPE_p_OTDB__OTDBString swig_types[16]
#define SWIGTYPE_p_OTDB__OfferDataMarket swig_types[17]
#define SWIGTYPE_p_OTDB__OfferDataNym swig_types[18]
#define SWIGTYPE_p_OTDB__OfferListMarket swig_types[19]
#define SWIGTYPE_p_OTDB__OfferListNym swig_types[20]
#define SWIGTYPE_p_OTDB__RippleServer swig_types[21]
#define SWIGTYPE_p_OTDB__Server swig_types[22]
#define SWIGTYPE_p_OTDB__ServerInfo swig_types[23]
#define SWIGTYPE_p_OTDB__Storable swig_types[24]
#define SWIGTYPE_p_OTDB__Storage swig_types[25]
#define SWIGTYPE_p_OTDB__StringMap swig_types[26]
#define SWIGTYPE_p_OTDB__TradeDataMarket swig_types[27]
#define SWIGTYPE_p_OTDB__TradeDataNym swig_types[28]
#define SWIGTYPE_p_OTDB__TradeListMarket swig_types[29]
#define SWIGTYPE_p_OTDB__TradeListNym swig_types[30]
#define SWIGTYPE_p_OTDB__WalletData swig_types[31]
#define SWIGTYPE_p_OTPacker swig_types[32]
#define SWIGTYPE_p_OTPassword swig_types[33]
#define SWIGTYPE_p_OTPasswordData swig_types[34]
#define SWIGTYPE_p_OTString swig_types[35]
#define SWIGTYPE_p_char swig_types[36]
#define SWIGTYPE_p_int32_t swig_types[37]
#define SWIGTYPE_p_std__mapT_std__string_std__string_t swig_types[38]
#define SWIGTYPE_p_std__vectorT_unsigned_char_t swig_types[39]
#define SWIGTYPE_p_uint32_t swig_types[40]
#define SWIGTYPE_p_uint8_t swig_types[41]
#define SWIGTYPE_p_void swig_types[42]
static swig_type_info *swig_types[44];
static swig_module_info swig_module = {swig_types, 43, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#define SWIG_init    Otapi_Init
#define SWIG_name    "otapi"
#define SWIG_prefix  ""
#define SWIG_version "0.0"

#define SWIGVERSION 0x020007 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>



#ifdef __cplusplus
extern "C" {
#endif
#ifdef MAC_TCL
#pragma export on
#endif
SWIGEXPORT int SWIG_init(Tcl_Interp *);
#ifdef MAC_TCL
#pragma export off
#endif
#ifdef __cplusplus
}
#endif

/* Compatibility version for TCL stubs */
#ifndef SWIG_TCL_STUBS_VERSION
#define SWIG_TCL_STUBS_VERSION "8.1"
#endif



#include <string>
#include <map>
#include "../../include/otlib/OTAsymmetricKey.h"
#include "../../include/otapi/OTAPI_funcdef.h"
#include "../../include/otlib/OTStorage.h"


#include <string>


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERNINLINE Tcl_Obj* 
SWIG_From_long  (long value)
{
  if (((long) INT_MIN <= value) && (value <= (long) INT_MAX)) {
    return Tcl_NewIntObj(static_cast< int >(value));
  } else {
    return Tcl_NewLongObj(value);
  }
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


  #define SWIG_From_bool   Tcl_NewBooleanObj 


SWIGINTERNINLINE Tcl_Obj *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  return (size < INT_MAX) ? Tcl_NewStringObj(carray, static_cast< int >(size)) : NULL;
}


SWIGINTERNINLINE Tcl_Obj * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsVal_bool SWIG_TCL_DECL_ARGS_2(Tcl_Obj *obj, bool *val)
{
  int v;
  if (Tcl_GetBooleanFromObj(0, obj, &v) == TCL_OK) {
    if (val) *val = v ? true : false;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(Tcl_Obj *obj, char** cptr, size_t* psize, int *alloc)
{ 
  int len = 0;
  char *cstr = Tcl_GetStringFromObj(obj, &len);
  if (cstr) {
    if (cptr)  *cptr = cstr;
    if (psize) *psize = len + 1;
    if (alloc) *alloc = SWIG_OLDOBJ;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string SWIG_TCL_DECL_ARGS_2(Tcl_Obj * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}





SWIGINTERN int
SWIG_AsVal_long SWIG_TCL_DECL_ARGS_2(Tcl_Obj *obj, long* val)
{
  long v;
  if (Tcl_GetLongFromObj(0,obj, &v) == TCL_OK) {
    if (val) *val = (long) v;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int SWIG_TCL_DECL_ARGS_2(Tcl_Obj * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long SWIG_TCL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


#include <stdio.h>
#if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
# ifndef snprintf
#  define snprintf _snprintf
# endif
#endif


SWIGINTERNINLINE Tcl_Obj* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  if (value < (unsigned long) LONG_MAX) {
    return SWIG_From_long  (static_cast< long >(value));
  } else {
    char temp[256]; 
    sprintf(temp, "%lu", value);
    return Tcl_NewStringObj(temp,-1);
  }
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long SWIG_TCL_DECL_ARGS_2(Tcl_Obj *obj, unsigned long *val) {
  long v;
  if (Tcl_GetLongFromObj(0,obj, &v) == TCL_OK) {
    if (v >= 0) {
      if (val) *val = (unsigned long) v;
      return SWIG_OK;
    }
    /* If v is negative, then this could be a negative number, or an
       unsigned value which doesn't fit in a signed long, so try to
       get it as a string so we can distinguish these cases. */
  }
  {
    int len = 0;
    const char *nptr = Tcl_GetStringFromObj(obj, &len);
    if (nptr && len > 0) {
      char *endptr;
      unsigned long v;
      if (*nptr == '-') return SWIG_OverflowError;
      errno = 0;
      v = strtoul(nptr, &endptr,0);
      if (nptr[0] == '\0' || *endptr != '\0')
	return SWIG_TypeError;
      if (v == ULONG_MAX && errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_OK;
	}
      }
    }
  }
  
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t SWIG_TCL_DECL_ARGS_2(Tcl_Obj * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_TCL_CALL_ARGS_2(obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


	using namespace OTDB;
	
#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN int
_wrap_OTPasswordData_isForNormalNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPasswordData *arg1 = (OTPasswordData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPasswordData_isForNormalNym self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPasswordData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPasswordData_isForNormalNym" "', argument " "1"" of type '" "OTPasswordData const *""'"); 
  }
  arg1 = reinterpret_cast< OTPasswordData * >(argp1);
  result = (bool)((OTPasswordData const *)arg1)->isForNormalNym();
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPasswordData_isForMasterKey(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPasswordData *arg1 = (OTPasswordData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPasswordData_isForMasterKey self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPasswordData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPasswordData_isForMasterKey" "', argument " "1"" of type '" "OTPasswordData const *""'"); 
  }
  arg1 = reinterpret_cast< OTPasswordData * >(argp1);
  result = (bool)((OTPasswordData const *)arg1)->isForMasterKey();
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPasswordData_GetDisplayString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPasswordData *arg1 = (OTPasswordData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPasswordData_GetDisplayString self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPasswordData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPasswordData_GetDisplayString" "', argument " "1"" of type '" "OTPasswordData const *""'"); 
  }
  arg1 = reinterpret_cast< OTPasswordData * >(argp1);
  result = (char *)((OTPasswordData const *)arg1)->GetDisplayString();
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPasswordData_isUsingOldSystem(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPasswordData *arg1 = (OTPasswordData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPasswordData_isUsingOldSystem self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPasswordData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPasswordData_isUsingOldSystem" "', argument " "1"" of type '" "OTPasswordData const *""'"); 
  }
  arg1 = reinterpret_cast< OTPasswordData * >(argp1);
  result = (bool)((OTPasswordData const *)arg1)->isUsingOldSystem();
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPasswordData_setUsingOldSystem__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPasswordData *arg1 = (OTPasswordData *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPasswordData_setUsingOldSystem self bUsing ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPasswordData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPasswordData_setUsingOldSystem" "', argument " "1"" of type '" "OTPasswordData *""'"); 
  }
  arg1 = reinterpret_cast< OTPasswordData * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OTPasswordData_setUsingOldSystem" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setUsingOldSystem(arg2);
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPasswordData_setUsingOldSystem__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPasswordData *arg1 = (OTPasswordData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPasswordData_setUsingOldSystem self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPasswordData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPasswordData_setUsingOldSystem" "', argument " "1"" of type '" "OTPasswordData *""'"); 
  }
  arg1 = reinterpret_cast< OTPasswordData * >(argp1);
  (arg1)->setUsingOldSystem();
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPasswordData_setUsingOldSystem(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTPasswordData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_OTPasswordData_setUsingOldSystem__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTPasswordData, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_OTPasswordData_setUsingOldSystem__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'OTPasswordData_setUsingOldSystem'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTPasswordData::setUsingOldSystem(bool)\n"
    "    OTPasswordData::setUsingOldSystem()\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPasswordData_GetMasterPW(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPasswordData *arg1 = (OTPasswordData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTPassword *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPasswordData_GetMasterPW self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPasswordData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPasswordData_GetMasterPW" "', argument " "1"" of type '" "OTPasswordData *""'"); 
  }
  arg1 = reinterpret_cast< OTPasswordData * >(argp1);
  result = (OTPassword *)(arg1)->GetMasterPW();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPassword,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPasswordData__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string *arg1 = 0 ;
  OTPassword *arg2 = (OTPassword *) 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  OTPasswordData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:new_OTPasswordData str_Display pMasterPW ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OTPasswordData" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OTPasswordData" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OTPasswordData" "', argument " "2"" of type '" "OTPassword *""'"); 
  }
  arg2 = reinterpret_cast< OTPassword * >(argp2);
  result = (OTPasswordData *)new OTPasswordData((std::string const &)*arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPasswordData,0));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPasswordData__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  OTPasswordData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_OTPasswordData str_Display ",(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OTPasswordData" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OTPasswordData" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (OTPasswordData *)new OTPasswordData((std::string const &)*arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPasswordData,0));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPasswordData__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTString *arg1 = 0 ;
  OTPassword *arg2 = (OTPassword *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  OTPasswordData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:new_OTPasswordData strDisplay pMasterPW ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_OTString,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OTPasswordData" "', argument " "1"" of type '" "OTString const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OTPasswordData" "', argument " "1"" of type '" "OTString const &""'"); 
  }
  arg1 = reinterpret_cast< OTString * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OTPasswordData" "', argument " "2"" of type '" "OTPassword *""'"); 
  }
  arg2 = reinterpret_cast< OTPassword * >(argp2);
  result = (OTPasswordData *)new OTPasswordData((OTString const &)*arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPasswordData,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPasswordData__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTString *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  OTPasswordData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_OTPasswordData strDisplay ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_OTString,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OTPasswordData" "', argument " "1"" of type '" "OTString const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OTPasswordData" "', argument " "1"" of type '" "OTString const &""'"); 
  }
  arg1 = reinterpret_cast< OTString * >(argp1);
  result = (OTPasswordData *)new OTPasswordData((OTString const &)*arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPasswordData,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPasswordData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTString, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_OTPasswordData__SWIG_3(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_OTPasswordData__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTString, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_OTPassword, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_OTPasswordData__SWIG_2(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_OTPassword, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_OTPasswordData__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'new_OTPasswordData'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTPasswordData::OTPasswordData(std::string const &,OTPassword *)\n"
    "    OTPasswordData::OTPasswordData(std::string const &)\n"
    "    OTPasswordData::OTPasswordData(OTString const &,OTPassword *)\n"
    "    OTPasswordData::OTPasswordData(OTString const &)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_OTPasswordData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPasswordData *arg1 = (OTPasswordData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_OTPasswordData self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPasswordData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OTPasswordData" "', argument " "1"" of type '" "OTPasswordData *""'"); 
  }
  arg1 = reinterpret_cast< OTPasswordData * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_OTPasswordData(void *obj) {
OTPasswordData *arg1 = (OTPasswordData *) obj;
delete arg1;
}
static swig_method swig_OTPasswordData_methods[] = {
    {"isForNormalNym", _wrap_OTPasswordData_isForNormalNym}, 
    {"isForMasterKey", _wrap_OTPasswordData_isForMasterKey}, 
    {"GetDisplayString", _wrap_OTPasswordData_GetDisplayString}, 
    {"isUsingOldSystem", _wrap_OTPasswordData_isUsingOldSystem}, 
    {"setUsingOldSystem", _wrap_OTPasswordData_setUsingOldSystem}, 
    {"GetMasterPW", _wrap_OTPasswordData_GetMasterPW}, 
    {0,0}
};
static swig_attribute swig_OTPasswordData_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTPasswordData_bases[] = {0};
static const char * swig_OTPasswordData_base_names[] = {0};
static swig_class _wrap_class_OTPasswordData = { "OTPasswordData", &SWIGTYPE_p_OTPasswordData,_wrap_new_OTPasswordData, swig_delete_OTPasswordData, swig_OTPasswordData_methods, swig_OTPasswordData_attributes, swig_OTPasswordData_bases,swig_OTPasswordData_base_names, &swig_module };
SWIGINTERN int
_wrap_OTPassword_m_theBlockSize_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTPassword::BlockSize result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_m_theBlockSize_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_m_theBlockSize_get" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (OTPassword::BlockSize)(OTPassword::BlockSize) ((arg1)->m_theBlockSize);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_isPassword(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_isPassword self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_isPassword" "', argument " "1"" of type '" "OTPassword const *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (bool)((OTPassword const *)arg1)->isPassword();
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_getPassword_uint8(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_getPassword_uint8 self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_getPassword_uint8" "', argument " "1"" of type '" "OTPassword const *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (uint8_t *)((OTPassword const *)arg1)->getPassword_uint8();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_getPassword(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_getPassword self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_getPassword" "', argument " "1"" of type '" "OTPassword const *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (char *)((OTPassword const *)arg1)->getPassword();
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_getPasswordWritable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_getPasswordWritable self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_getPasswordWritable" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (uint8_t *)(arg1)->getPasswordWritable();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_getPasswordWritable_char(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_getPasswordWritable_char self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_getPasswordWritable_char" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (char *)(arg1)->getPasswordWritable_char();
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_setPassword(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OTPassword_setPassword self szInput nInputSize ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_setPassword" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_setPassword" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OTPassword_setPassword" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (int)(arg1)->setPassword((char const *)arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_setPassword_uint8(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  uint32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OTPassword_setPassword_uint8 self szInput nInputSize ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_setPassword_uint8" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_setPassword_uint8" "', argument " "2"" of type '" "uint8_t const *""'"); 
  }
  arg2 = reinterpret_cast< uint8_t * >(argp2);
  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OTPassword_setPassword_uint8" "', argument " "3"" of type '" "uint32_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_setPassword_uint8" "', argument " "3"" of type '" "uint32_t""'");
    } else {
      arg3 = *(reinterpret_cast< uint32_t * >(argp3));
    }
  }
  result = (arg1)->setPassword_uint8((uint8_t const *)arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new int32_t(static_cast< const int32_t& >(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_addChar(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPassword_addChar self theChar ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_addChar" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint8_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_addChar" "', argument " "2"" of type '" "uint8_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_addChar" "', argument " "2"" of type '" "uint8_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint8_t * >(argp2));
    }
  }
  result = (bool)(arg1)->addChar(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_randomizePassword__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPassword_randomizePassword self nNewSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_randomizePassword" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_randomizePassword" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_randomizePassword" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  result = (arg1)->randomizePassword(arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new int32_t(static_cast< const int32_t& >(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_randomizePassword__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_randomizePassword self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_randomizePassword" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (arg1)->randomizePassword();
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new int32_t(static_cast< const int32_t& >(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_randomizePassword_uint8(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  uint8_t *arg1 = (uint8_t *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPassword_randomizePassword_uint8 szDestination nNewSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_randomizePassword_uint8" "', argument " "1"" of type '" "uint8_t *""'"); 
  }
  arg1 = reinterpret_cast< uint8_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_randomizePassword_uint8" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_randomizePassword_uint8" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  result = (bool)OTPassword::randomizePassword_uint8(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_randomizePassword__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  uint32_t arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPassword_randomizePassword szDestination nNewSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_randomizePassword" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_randomizePassword" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_randomizePassword" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  result = (bool)OTPassword::randomizePassword(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_randomizePassword(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTPassword, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_OTPassword_randomizePassword__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTPassword, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_OTPassword_randomizePassword__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_OTPassword_randomizePassword__SWIG_2(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'OTPassword_randomizePassword'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTPassword::randomizePassword(uint32_t)\n"
    "    OTPassword::randomizePassword()\n"
    "    OTPassword::randomizePassword(char *,uint32_t)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_isMemory(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_isMemory self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_isMemory" "', argument " "1"" of type '" "OTPassword const *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (bool)((OTPassword const *)arg1)->isMemory();
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_getMemory(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_getMemory self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_getMemory" "', argument " "1"" of type '" "OTPassword const *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (void *)((OTPassword const *)arg1)->getMemory();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_void,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_getMemory_uint8(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_getMemory_uint8 self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_getMemory_uint8" "', argument " "1"" of type '" "OTPassword const *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (uint8_t *)((OTPassword const *)arg1)->getMemory_uint8();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_getMemoryWritable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_getMemoryWritable self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_getMemoryWritable" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (void *)(arg1)->getMemoryWritable();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_void,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_setMemory(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  void *argp3 ;
  int res3 = 0 ;
  int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OTPassword_setMemory self vInput nInputSize ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_setMemory" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_setMemory" "', argument " "2"" of type '" "void const *""'"); 
  }
  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OTPassword_setMemory" "', argument " "3"" of type '" "uint32_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_setMemory" "', argument " "3"" of type '" "uint32_t""'");
    } else {
      arg3 = *(reinterpret_cast< uint32_t * >(argp3));
    }
  }
  result = (arg1)->setMemory((void const *)arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new int32_t(static_cast< const int32_t& >(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_addMemory(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  void *argp3 ;
  int res3 = 0 ;
  int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OTPassword_addMemory self vAppend nAppendSize ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_addMemory" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_addMemory" "', argument " "2"" of type '" "void const *""'"); 
  }
  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OTPassword_addMemory" "', argument " "3"" of type '" "uint32_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_addMemory" "', argument " "3"" of type '" "uint32_t""'");
    } else {
      arg3 = *(reinterpret_cast< uint32_t * >(argp3));
    }
  }
  result = (arg1)->addMemory((void const *)arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new int32_t(static_cast< const int32_t& >(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_randomizeMemory__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPassword_randomizeMemory self nNewSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_randomizeMemory" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_randomizeMemory" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_randomizeMemory" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  result = (arg1)->randomizeMemory(arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new int32_t(static_cast< const int32_t& >(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_randomizeMemory__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_randomizeMemory self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_randomizeMemory" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (arg1)->randomizeMemory();
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new int32_t(static_cast< const int32_t& >(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_randomizeMemory_uint8(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  uint8_t *arg1 = (uint8_t *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPassword_randomizeMemory_uint8 szDestination nNewSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_randomizeMemory_uint8" "', argument " "1"" of type '" "uint8_t *""'"); 
  }
  arg1 = reinterpret_cast< uint8_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_randomizeMemory_uint8" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_randomizeMemory_uint8" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  result = (bool)OTPassword::randomizeMemory_uint8(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_randomizeMemory__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  void *arg1 = (void *) 0 ;
  uint32_t arg2 ;
  int res1 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPassword_randomizeMemory szDestination nNewSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_randomizeMemory" "', argument " "1"" of type '" "void *""'"); 
  }
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_randomizeMemory" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_randomizeMemory" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  result = (bool)OTPassword::randomizeMemory(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_randomizeMemory(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTPassword, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_OTPassword_randomizeMemory__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTPassword, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_OTPassword_randomizeMemory__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *ptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &ptr, 0, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_OTPassword_randomizeMemory__SWIG_2(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'OTPassword_randomizeMemory'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTPassword::randomizeMemory(uint32_t)\n"
    "    OTPassword::randomizeMemory()\n"
    "    OTPassword::randomizeMemory(void *,uint32_t)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_getBlockSize(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_getBlockSize self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_getBlockSize" "', argument " "1"" of type '" "OTPassword const *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = ((OTPassword const *)arg1)->getBlockSize();
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new uint32_t(static_cast< const uint32_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_Compare(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  OTPassword *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPassword_Compare self rhs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_Compare" "', argument " "1"" of type '" "OTPassword const *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTPassword,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_Compare" "', argument " "2"" of type '" "OTPassword &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_Compare" "', argument " "2"" of type '" "OTPassword &""'"); 
  }
  arg2 = reinterpret_cast< OTPassword * >(argp2);
  result = (bool)((OTPassword const *)arg1)->Compare(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_getPasswordSize(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_getPasswordSize self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_getPasswordSize" "', argument " "1"" of type '" "OTPassword const *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = ((OTPassword const *)arg1)->getPasswordSize();
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new uint32_t(static_cast< const uint32_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_getMemorySize(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_getMemorySize self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_getMemorySize" "', argument " "1"" of type '" "OTPassword const *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = ((OTPassword const *)arg1)->getMemorySize();
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new uint32_t(static_cast< const uint32_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_zeroMemory__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTPassword_zeroMemory self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_zeroMemory" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  (arg1)->zeroMemory();
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_zeroMemory__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  uint8_t *arg1 = (uint8_t *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPassword_zeroMemory szMemory theSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_zeroMemory" "', argument " "1"" of type '" "uint8_t *""'"); 
  }
  arg1 = reinterpret_cast< uint8_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_zeroMemory" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_zeroMemory" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  OTPassword::zeroMemory(arg1,arg2);
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_zeroMemory__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  void *arg1 = (void *) 0 ;
  uint32_t arg2 ;
  int res1 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPassword_zeroMemory vMemory theSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_zeroMemory" "', argument " "1"" of type '" "void *""'"); 
  }
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_zeroMemory" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_zeroMemory" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  OTPassword::zeroMemory(arg1,arg2);
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_zeroMemory(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTPassword, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_OTPassword_zeroMemory__SWIG_0(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_uint8_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_OTPassword_zeroMemory__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *ptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &ptr, 0, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_OTPassword_zeroMemory__SWIG_2(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'OTPassword_zeroMemory'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTPassword::zeroMemory()\n"
    "    OTPassword::zeroMemory(uint8_t *,uint32_t)\n"
    "    OTPassword::zeroMemory(void *,uint32_t)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_safe_memcpy__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  void *arg1 = (void *) 0 ;
  uint32_t arg2 ;
  void *arg3 = (void *) 0 ;
  uint32_t arg4 ;
  bool arg5 ;
  int res1 ;
  void *argp2 ;
  int res2 = 0 ;
  int res3 ;
  void *argp4 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OTPassword_safe_memcpy dest dest_size src src_length bZeroSource ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_safe_memcpy" "', argument " "1"" of type '" "void *""'"); 
  }
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_safe_memcpy" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_safe_memcpy" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  res3 = SWIG_ConvertPtr(objv[3],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OTPassword_safe_memcpy" "', argument " "3"" of type '" "void const *""'"); 
  }
  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OTPassword_safe_memcpy" "', argument " "4"" of type '" "uint32_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_safe_memcpy" "', argument " "4"" of type '" "uint32_t""'");
    } else {
      arg4 = *(reinterpret_cast< uint32_t * >(argp4));
    }
  }
  ecode5 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OTPassword_safe_memcpy" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (void *)OTPassword::safe_memcpy(arg1,arg2,(void const *)arg3,arg4,arg5);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_void,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_safe_memcpy__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  void *arg1 = (void *) 0 ;
  uint32_t arg2 ;
  void *arg3 = (void *) 0 ;
  uint32_t arg4 ;
  int res1 ;
  void *argp2 ;
  int res2 = 0 ;
  int res3 ;
  void *argp4 ;
  int res4 = 0 ;
  void *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OTPassword_safe_memcpy dest dest_size src src_length ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_safe_memcpy" "', argument " "1"" of type '" "void *""'"); 
  }
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_safe_memcpy" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_safe_memcpy" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  res3 = SWIG_ConvertPtr(objv[3],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OTPassword_safe_memcpy" "', argument " "3"" of type '" "void const *""'"); 
  }
  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OTPassword_safe_memcpy" "', argument " "4"" of type '" "uint32_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_safe_memcpy" "', argument " "4"" of type '" "uint32_t""'");
    } else {
      arg4 = *(reinterpret_cast< uint32_t * >(argp4));
    }
  }
  result = (void *)OTPassword::safe_memcpy(arg1,arg2,(void const *)arg3,arg4);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_void,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_safe_memcpy(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 4) {
    int _v;
    void *ptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &ptr, 0, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *ptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &ptr, 0, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_uint32_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_OTPassword_safe_memcpy__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *ptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &ptr, 0, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *ptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &ptr, 0, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_uint32_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_OTPassword_safe_memcpy__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'OTPassword_safe_memcpy'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTPassword::safe_memcpy(void *,uint32_t,void const *,uint32_t,bool)\n"
    "    OTPassword::safe_memcpy(void *,uint32_t,void const *,uint32_t)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTPassword_e___(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  OTPassword *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  OTPassword *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTPassword_= self rhs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTPassword_=" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTPassword,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTPassword_=" "', argument " "2"" of type '" "OTPassword const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTPassword_=" "', argument " "2"" of type '" "OTPassword const &""'"); 
  }
  arg2 = reinterpret_cast< OTPassword * >(argp2);
  result = (OTPassword *) &(arg1)->operator =((OTPassword const &)*arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPassword,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPassword__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword::BlockSize arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  OTPassword *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_OTPassword theBlockSize ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OTPassword" "', argument " "1"" of type '" "OTPassword::BlockSize""'");
  } 
  arg1 = static_cast< OTPassword::BlockSize >(val1);
  result = (OTPassword *)new OTPassword(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPassword,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPassword__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_OTPassword ") == TCL_ERROR) SWIG_fail;
  result = (OTPassword *)new OTPassword();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPassword,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPassword__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  OTPassword *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_OTPassword rhs ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_OTPassword,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OTPassword" "', argument " "1"" of type '" "OTPassword const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OTPassword" "', argument " "1"" of type '" "OTPassword const &""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  result = (OTPassword *)new OTPassword((OTPassword const &)*arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPassword,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPassword__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  uint32_t arg2 ;
  OTPassword::BlockSize arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  OTPassword *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:new_OTPassword szInput nInputSize theBlockSize ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OTPassword" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_OTPassword" "', argument " "3"" of type '" "OTPassword::BlockSize""'");
  } 
  arg3 = static_cast< OTPassword::BlockSize >(val3);
  result = (OTPassword *)new OTPassword((char const *)arg1,arg2,arg3);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPassword,0));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPassword__SWIG_4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  uint32_t arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  OTPassword *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:new_OTPassword szInput nInputSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OTPassword" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  result = (OTPassword *)new OTPassword((char const *)arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPassword,0));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPassword__SWIG_5(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  uint8_t *arg1 = (uint8_t *) 0 ;
  uint32_t arg2 ;
  OTPassword::BlockSize arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  OTPassword *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:new_OTPassword szInput nInputSize theBlockSize ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OTPassword" "', argument " "1"" of type '" "uint8_t const *""'"); 
  }
  arg1 = reinterpret_cast< uint8_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_OTPassword" "', argument " "3"" of type '" "OTPassword::BlockSize""'");
  } 
  arg3 = static_cast< OTPassword::BlockSize >(val3);
  result = (OTPassword *)new OTPassword((uint8_t const *)arg1,arg2,arg3);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPassword,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPassword__SWIG_6(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  uint8_t *arg1 = (uint8_t *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  OTPassword *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:new_OTPassword szInput nInputSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OTPassword" "', argument " "1"" of type '" "uint8_t const *""'"); 
  }
  arg1 = reinterpret_cast< uint8_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  result = (OTPassword *)new OTPassword((uint8_t const *)arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPassword,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPassword__SWIG_7(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  void *arg1 = (void *) 0 ;
  uint32_t arg2 ;
  OTPassword::BlockSize arg3 ;
  int res1 ;
  void *argp2 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  OTPassword *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:new_OTPassword vInput nInputSize theBlockSize ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OTPassword" "', argument " "1"" of type '" "void const *""'"); 
  }
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_OTPassword" "', argument " "3"" of type '" "OTPassword::BlockSize""'");
  } 
  arg3 = static_cast< OTPassword::BlockSize >(val3);
  result = (OTPassword *)new OTPassword((void const *)arg1,arg2,arg3);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPassword,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPassword__SWIG_8(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  void *arg1 = (void *) 0 ;
  uint32_t arg2 ;
  int res1 ;
  void *argp2 ;
  int res2 = 0 ;
  OTPassword *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:new_OTPassword vInput nInputSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OTPassword" "', argument " "1"" of type '" "void const *""'"); 
  }
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OTPassword" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  result = (OTPassword *)new OTPassword((void const *)arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPassword,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_OTPassword(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_OTPassword__SWIG_1(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTPassword, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_OTPassword__SWIG_2(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_OTPassword__SWIG_0(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_uint8_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_OTPassword__SWIG_6(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *ptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &ptr, 0, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_OTPassword__SWIG_8(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_OTPassword__SWIG_4(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_uint8_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_OTPassword__SWIG_5(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *ptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &ptr, 0, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_OTPassword__SWIG_7(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_OTPassword__SWIG_3(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'new_OTPassword'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTPassword::OTPassword(OTPassword::BlockSize)\n"
    "    OTPassword::OTPassword()\n"
    "    OTPassword::OTPassword(OTPassword const &)\n"
    "    OTPassword::OTPassword(char const *,uint32_t,OTPassword::BlockSize)\n"
    "    OTPassword::OTPassword(char const *,uint32_t)\n"
    "    OTPassword::OTPassword(uint8_t const *,uint32_t,OTPassword::BlockSize)\n"
    "    OTPassword::OTPassword(uint8_t const *,uint32_t)\n"
    "    OTPassword::OTPassword(void const *,uint32_t,OTPassword::BlockSize)\n"
    "    OTPassword::OTPassword(void const *,uint32_t)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_OTPassword(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTPassword *arg1 = (OTPassword *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_OTPassword self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTPassword, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OTPassword" "', argument " "1"" of type '" "OTPassword *""'"); 
  }
  arg1 = reinterpret_cast< OTPassword * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_OTPassword(void *obj) {
OTPassword *arg1 = (OTPassword *) obj;
delete arg1;
}
static swig_method swig_OTPassword_methods[] = {
    {"isPassword", _wrap_OTPassword_isPassword}, 
    {"getPassword_uint8", _wrap_OTPassword_getPassword_uint8}, 
    {"getPassword", _wrap_OTPassword_getPassword}, 
    {"getPasswordWritable", _wrap_OTPassword_getPasswordWritable}, 
    {"getPasswordWritable_char", _wrap_OTPassword_getPasswordWritable_char}, 
    {"setPassword", _wrap_OTPassword_setPassword}, 
    {"setPassword_uint8", _wrap_OTPassword_setPassword_uint8}, 
    {"addChar", _wrap_OTPassword_addChar}, 
    {"isMemory", _wrap_OTPassword_isMemory}, 
    {"getMemory", _wrap_OTPassword_getMemory}, 
    {"getMemory_uint8", _wrap_OTPassword_getMemory_uint8}, 
    {"getMemoryWritable", _wrap_OTPassword_getMemoryWritable}, 
    {"setMemory", _wrap_OTPassword_setMemory}, 
    {"addMemory", _wrap_OTPassword_addMemory}, 
    {"getBlockSize", _wrap_OTPassword_getBlockSize}, 
    {"Compare", _wrap_OTPassword_Compare}, 
    {"getPasswordSize", _wrap_OTPassword_getPasswordSize}, 
    {"getMemorySize", _wrap_OTPassword_getMemorySize}, 
    {"=", _wrap_OTPassword_e___}, 
    {0,0}
};
static swig_attribute swig_OTPassword_attributes[] = {
    { "-m_theBlockSize",_wrap_OTPassword_m_theBlockSize_get, 0 },
    {0,0,0}
};
static swig_class *swig_OTPassword_bases[] = {0};
static const char * swig_OTPassword_base_names[] = {0};
static swig_class _wrap_class_OTPassword = { "OTPassword", &SWIGTYPE_p_OTPassword,_wrap_new_OTPassword, swig_delete_OTPassword, swig_OTPassword_methods, swig_OTPassword_attributes, swig_OTPassword_bases,swig_OTPassword_base_names, &swig_module };
SWIGINTERN int
_wrap_new_OTCallback(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCallback *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_OTCallback ") == TCL_ERROR) SWIG_fail;
  result = (OTCallback *)new OTCallback();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTCallback,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_OTCallback(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCallback *arg1 = (OTCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_OTCallback self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCallback, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OTCallback" "', argument " "1"" of type '" "OTCallback *""'"); 
  }
  arg1 = reinterpret_cast< OTCallback * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTCallback_runOne(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCallback *arg1 = (OTCallback *) 0 ;
  char *arg2 = (char *) 0 ;
  OTPassword *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OTCallback_runOne self szDisplay theOutput ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTCallback_runOne" "', argument " "1"" of type '" "OTCallback *""'"); 
  }
  arg1 = reinterpret_cast< OTCallback * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTCallback_runOne" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_OTPassword,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OTCallback_runOne" "', argument " "3"" of type '" "OTPassword &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTCallback_runOne" "', argument " "3"" of type '" "OTPassword &""'"); 
  }
  arg3 = reinterpret_cast< OTPassword * >(argp3);
  (arg1)->runOne((char const *)arg2,*arg3);
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTCallback_runTwo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCallback *arg1 = (OTCallback *) 0 ;
  char *arg2 = (char *) 0 ;
  OTPassword *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OTCallback_runTwo self szDisplay theOutput ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTCallback_runTwo" "', argument " "1"" of type '" "OTCallback *""'"); 
  }
  arg1 = reinterpret_cast< OTCallback * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTCallback_runTwo" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_OTPassword,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OTCallback_runTwo" "', argument " "3"" of type '" "OTPassword &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTCallback_runTwo" "', argument " "3"" of type '" "OTPassword &""'"); 
  }
  arg3 = reinterpret_cast< OTPassword * >(argp3);
  (arg1)->runTwo((char const *)arg2,*arg3);
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_OTCallback(void *obj) {
OTCallback *arg1 = (OTCallback *) obj;
delete arg1;
}
static swig_method swig_OTCallback_methods[] = {
    {"runOne", _wrap_OTCallback_runOne}, 
    {"runTwo", _wrap_OTCallback_runTwo}, 
    {0,0}
};
static swig_attribute swig_OTCallback_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTCallback_bases[] = {0};
static const char * swig_OTCallback_base_names[] = {0};
static swig_class _wrap_class_OTCallback = { "OTCallback", &SWIGTYPE_p_OTCallback,_wrap_new_OTCallback, swig_delete_OTCallback, swig_OTCallback_methods, swig_OTCallback_attributes, swig_OTCallback_bases,swig_OTCallback_base_names, &swig_module };
SWIGINTERN int
_wrap_new_OTCaller(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_OTCaller ") == TCL_ERROR) SWIG_fail;
  result = (OTCaller *)new OTCaller();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTCaller,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_OTCaller(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *arg1 = (OTCaller *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_OTCaller self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCaller, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OTCaller" "', argument " "1"" of type '" "OTCaller *""'"); 
  }
  arg1 = reinterpret_cast< OTCaller * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTCaller_GetPassword(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *arg1 = (OTCaller *) 0 ;
  OTPassword *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTCaller_GetPassword self theOutput ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCaller, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTCaller_GetPassword" "', argument " "1"" of type '" "OTCaller const *""'"); 
  }
  arg1 = reinterpret_cast< OTCaller * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTPassword,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTCaller_GetPassword" "', argument " "2"" of type '" "OTPassword &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTCaller_GetPassword" "', argument " "2"" of type '" "OTPassword &""'"); 
  }
  arg2 = reinterpret_cast< OTPassword * >(argp2);
  result = (bool)((OTCaller const *)arg1)->GetPassword(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTCaller_ZeroOutPassword(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *arg1 = (OTCaller *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTCaller_ZeroOutPassword self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCaller, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTCaller_ZeroOutPassword" "', argument " "1"" of type '" "OTCaller *""'"); 
  }
  arg1 = reinterpret_cast< OTCaller * >(argp1);
  (arg1)->ZeroOutPassword();
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTCaller_GetDisplay(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *arg1 = (OTCaller *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTCaller_GetDisplay self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCaller, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTCaller_GetDisplay" "', argument " "1"" of type '" "OTCaller const *""'"); 
  }
  arg1 = reinterpret_cast< OTCaller * >(argp1);
  result = (char *)((OTCaller const *)arg1)->GetDisplay();
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTCaller_SetDisplay(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *arg1 = (OTCaller *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OTCaller_SetDisplay self szDisplay nLength ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCaller, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTCaller_SetDisplay" "', argument " "1"" of type '" "OTCaller *""'"); 
  }
  arg1 = reinterpret_cast< OTCaller * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTCaller_SetDisplay" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OTCaller_SetDisplay" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->SetDisplay((char const *)arg2,arg3);
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTCaller_delCallback(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *arg1 = (OTCaller *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTCaller_delCallback self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCaller, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTCaller_delCallback" "', argument " "1"" of type '" "OTCaller *""'"); 
  }
  arg1 = reinterpret_cast< OTCaller * >(argp1);
  (arg1)->delCallback();
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTCaller_setCallback(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *arg1 = (OTCaller *) 0 ;
  OTCallback *arg2 = (OTCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTCaller_setCallback self cb ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCaller, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTCaller_setCallback" "', argument " "1"" of type '" "OTCaller *""'"); 
  }
  arg1 = reinterpret_cast< OTCaller * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_OTCallback, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTCaller_setCallback" "', argument " "2"" of type '" "OTCallback *""'"); 
  }
  arg2 = reinterpret_cast< OTCallback * >(argp2);
  (arg1)->setCallback(arg2);
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTCaller_isCallbackSet(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *arg1 = (OTCaller *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTCaller_isCallbackSet self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCaller, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTCaller_isCallbackSet" "', argument " "1"" of type '" "OTCaller const *""'"); 
  }
  arg1 = reinterpret_cast< OTCaller * >(argp1);
  result = (bool)((OTCaller const *)arg1)->isCallbackSet();
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTCaller_callOne(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *arg1 = (OTCaller *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTCaller_callOne self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCaller, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTCaller_callOne" "', argument " "1"" of type '" "OTCaller *""'"); 
  }
  arg1 = reinterpret_cast< OTCaller * >(argp1);
  (arg1)->callOne();
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTCaller_callTwo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *arg1 = (OTCaller *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTCaller_callTwo self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTCaller, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTCaller_callTwo" "', argument " "1"" of type '" "OTCaller *""'"); 
  }
  arg1 = reinterpret_cast< OTCaller * >(argp1);
  (arg1)->callTwo();
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_OTCaller(void *obj) {
OTCaller *arg1 = (OTCaller *) obj;
delete arg1;
}
static swig_method swig_OTCaller_methods[] = {
    {"GetPassword", _wrap_OTCaller_GetPassword}, 
    {"ZeroOutPassword", _wrap_OTCaller_ZeroOutPassword}, 
    {"GetDisplay", _wrap_OTCaller_GetDisplay}, 
    {"SetDisplay", _wrap_OTCaller_SetDisplay}, 
    {"delCallback", _wrap_OTCaller_delCallback}, 
    {"setCallback", _wrap_OTCaller_setCallback}, 
    {"isCallbackSet", _wrap_OTCaller_isCallbackSet}, 
    {"callOne", _wrap_OTCaller_callOne}, 
    {"callTwo", _wrap_OTCaller_callTwo}, 
    {0,0}
};
static swig_attribute swig_OTCaller_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTCaller_bases[] = {0};
static const char * swig_OTCaller_base_names[] = {0};
static swig_class _wrap_class_OTCaller = { "OTCaller", &SWIGTYPE_p_OTCaller,_wrap_new_OTCaller, swig_delete_OTCaller, swig_OTCaller_methods, swig_OTCaller_attributes, swig_OTCaller_bases,swig_OTCaller_base_names, &swig_module };
SWIGINTERN int
_wrap_OT_API_Set_PasswordCallback(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTCaller *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Set_PasswordCallback theCaller ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_OTCaller,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Set_PasswordCallback" "', argument " "1"" of type '" "OTCaller &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OT_API_Set_PasswordCallback" "', argument " "1"" of type '" "OTCaller &""'"); 
  }
  arg1 = reinterpret_cast< OTCaller * >(argp1);
  result = (bool)OT_API_Set_PasswordCallback(*arg1);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Init(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_Init ") == TCL_ERROR) SWIG_fail;
  result = (int)OT_API_Init();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SetWallet(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_SetWallet szWalletFilename ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SetWallet" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_SetWallet((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadWallet(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_LoadWallet ") == TCL_ERROR) SWIG_fail;
  result = (int)OT_API_LoadWallet();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SwitchWallet(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_SwitchWallet ") == TCL_ERROR) SWIG_fail;
  result = (int)OT_API_SwitchWallet();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Output(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  char *arg2 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Output nLogLevel szOutput ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "OT_API_Output" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Output" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  OT_API_Output(arg1,(char const *)arg2);
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetTime(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_GetTime ") == TCL_ERROR) SWIG_fail;
  result = (char *)OT_API_GetTime();
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_NumList_Add(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_NumList_Add szNumList szNumbers ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_NumList_Add" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_NumList_Add" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_NumList_Add((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_NumList_Remove(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_NumList_Remove szNumList szNumbers ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_NumList_Remove" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_NumList_Remove" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_NumList_Remove((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_NumList_VerifyQuery(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_NumList_VerifyQuery szNumList szNumbers ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_NumList_VerifyQuery" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_NumList_VerifyQuery" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_NumList_VerifyQuery((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_NumList_VerifyAll(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_NumList_VerifyAll szNumList szNumbers ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_NumList_VerifyAll" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_NumList_VerifyAll" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_NumList_VerifyAll((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_NumList_Count(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_NumList_Count szNumList ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_NumList_Count" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_NumList_Count((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Encode(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Encode szPlaintext bLineBreaks ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Encode" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_Encode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_Encode((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Decode(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Decode szEncoded bLineBreaks ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Decode" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_Decode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_Decode((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Encrypt(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Encrypt RECIPIENT_NYM_ID szPlaintext ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Encrypt" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Encrypt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Encrypt((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Decrypt(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Decrypt RECIPIENT_NYM_ID szCiphertext ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Decrypt" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Decrypt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Decrypt((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_CreateSymmetricKey(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_CreateSymmetricKey ") == TCL_ERROR) SWIG_fail;
  result = (char *)OT_API_CreateSymmetricKey();
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SymmetricEncrypt(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_SymmetricEncrypt SYMMETRIC_KEY PLAINTEXT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SymmetricEncrypt" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SymmetricEncrypt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_SymmetricEncrypt((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SymmetricDecrypt(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_SymmetricDecrypt SYMMETRIC_KEY CIPHERTEXT_ENVELOPE ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SymmetricDecrypt" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SymmetricDecrypt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_SymmetricDecrypt((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SignContract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_SignContract SIGNER_NYM_ID THE_CONTRACT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SignContract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SignContract" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_SignContract((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_AddSignature(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_AddSignature SIGNER_NYM_ID THE_CONTRACT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_AddSignature" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_AddSignature" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_AddSignature((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_VerifySignature(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_VerifySignature SIGNER_NYM_ID THE_CONTRACT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_VerifySignature" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_VerifySignature" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_VerifySignature((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_VerifyAndRetrieveXMLContents(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_VerifyAndRetrieveXMLContents THE_CONTRACT SIGNER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_VerifyAndRetrieveXMLContents" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_VerifyAndRetrieveXMLContents" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_VerifyAndRetrieveXMLContents((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetMemlogSize(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_GetMemlogSize ") == TCL_ERROR) SWIG_fail;
  result = (int)OT_API_GetMemlogSize();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetMemlogAtIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetMemlogAtIndex nIndex ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "OT_API_GetMemlogAtIndex" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (char *)OT_API_GetMemlogAtIndex(arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_PeekMemlogFront(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_PeekMemlogFront ") == TCL_ERROR) SWIG_fail;
  result = (char *)OT_API_PeekMemlogFront();
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_PeekMemlogBack(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_PeekMemlogBack ") == TCL_ERROR) SWIG_fail;
  result = (char *)OT_API_PeekMemlogBack();
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_PopMemlogFront(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_PopMemlogFront ") == TCL_ERROR) SWIG_fail;
  result = (int)OT_API_PopMemlogFront();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_PopMemlogBack(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_PopMemlogBack ") == TCL_ERROR) SWIG_fail;
  result = (int)OT_API_PopMemlogBack();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_CreateNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_CreateNym nKeySize ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "OT_API_CreateNym" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (char *)OT_API_CreateNym(arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_CreateServerContract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_CreateServerContract NYM_ID szXMLcontents ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_CreateServerContract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_CreateServerContract" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_CreateServerContract((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_CreateAssetContract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_CreateAssetContract NYM_ID szXMLcontents ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_CreateAssetContract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_CreateAssetContract" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_CreateAssetContract((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_AddServerContract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_AddServerContract szContract ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_AddServerContract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_AddServerContract((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_AddAssetContract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_AddAssetContract szContract ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_AddAssetContract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_AddAssetContract((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetServerCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_GetServerCount ") == TCL_ERROR) SWIG_fail;
  result = (int)OT_API_GetServerCount();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAssetTypeCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_GetAssetTypeCount ") == TCL_ERROR) SWIG_fail;
  result = (int)OT_API_GetAssetTypeCount();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAccountCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_GetAccountCount ") == TCL_ERROR) SWIG_fail;
  result = (int)OT_API_GetAccountCount();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNymCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_GetNymCount ") == TCL_ERROR) SWIG_fail;
  result = (int)OT_API_GetNymCount();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetServer_ID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetServer_ID nIndex ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "OT_API_GetServer_ID" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (char *)OT_API_GetServer_ID(arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetServer_Name(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetServer_Name SERVER_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetServer_Name" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetServer_Name((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetServer_Contract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetServer_Contract SERVER_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetServer_Contract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetServer_Contract((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAssetType_ID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAssetType_ID nIndex ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "OT_API_GetAssetType_ID" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (char *)OT_API_GetAssetType_ID(arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAssetType_Name(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAssetType_Name ASSET_TYPE_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetAssetType_Name" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetAssetType_Name((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAssetType_Contract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAssetType_Contract ASSET_TYPE_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetAssetType_Contract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetAssetType_Contract((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAccountWallet_ID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAccountWallet_ID nIndex ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "OT_API_GetAccountWallet_ID" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (char *)OT_API_GetAccountWallet_ID(arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAccountWallet_Name(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAccountWallet_Name ACCOUNT_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetAccountWallet_Name" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetAccountWallet_Name((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAccountWallet_Balance(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAccountWallet_Balance ACCOUNT_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetAccountWallet_Balance" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetAccountWallet_Balance((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAccountWallet_Type(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAccountWallet_Type ACCOUNT_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetAccountWallet_Type" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetAccountWallet_Type((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAccountWallet_AssetTypeID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAccountWallet_AssetTypeID ACCOUNT_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetAccountWallet_AssetTypeID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetAccountWallet_AssetTypeID((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAccountWallet_ServerID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAccountWallet_ServerID ACCOUNT_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetAccountWallet_ServerID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetAccountWallet_ServerID((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAccountWallet_NymID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAccountWallet_NymID ACCOUNT_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetAccountWallet_NymID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetAccountWallet_NymID((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAccountWallet_InboxHash(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAccountWallet_InboxHash ACCOUNT_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetAccountWallet_InboxHash" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetAccountWallet_InboxHash((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetAccountWallet_OutboxHash(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetAccountWallet_OutboxHash ACCOUNT_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetAccountWallet_OutboxHash" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetAccountWallet_OutboxHash((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_VerifyAccountReceipt(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_VerifyAccountReceipt SERVER_ID NYM_ID ACCT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_VerifyAccountReceipt" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_VerifyAccountReceipt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_VerifyAccountReceipt" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_VerifyAccountReceipt((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_TransactionNumCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_TransactionNumCount SERVER_ID NYM_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_TransactionNumCount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_GetNym_TransactionNumCount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_GetNym_TransactionNumCount((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_ID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetNym_ID nIndex ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "OT_API_GetNym_ID" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (char *)OT_API_GetNym_ID(arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_Name(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetNym_Name NYM_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_Name" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetNym_Name((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_Stats(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetNym_Stats NYM_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_Stats" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_GetNym_Stats((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_NymboxHash(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_NymboxHash SERVER_ID NYM_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_NymboxHash" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_GetNym_NymboxHash" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_GetNym_NymboxHash((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_RecentHash(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_RecentHash SERVER_ID NYM_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_RecentHash" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_GetNym_RecentHash" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_GetNym_RecentHash((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_InboxHash(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_InboxHash ACCOUNT_ID NYM_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_InboxHash" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_GetNym_InboxHash" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_GetNym_InboxHash((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_OutboxHash(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_OutboxHash ACCOUNT_ID NYM_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_OutboxHash" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_GetNym_OutboxHash" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_GetNym_OutboxHash((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_IsNym_RegisteredAtServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_IsNym_RegisteredAtServer NYM_ID SERVER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_IsNym_RegisteredAtServer" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_IsNym_RegisteredAtServer" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_IsNym_RegisteredAtServer((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_MailCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetNym_MailCount NYM_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_MailCount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_GetNym_MailCount((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_MailContentsByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_MailContentsByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_MailContentsByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_GetNym_MailContentsByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_GetNym_MailContentsByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_MailSenderIDByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_MailSenderIDByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_MailSenderIDByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_GetNym_MailSenderIDByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_GetNym_MailSenderIDByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_MailServerIDByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_MailServerIDByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_MailServerIDByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_GetNym_MailServerIDByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_GetNym_MailServerIDByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Nym_RemoveMailByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Nym_RemoveMailByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Nym_RemoveMailByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_Nym_RemoveMailByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)OT_API_Nym_RemoveMailByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Nym_VerifyMailByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Nym_VerifyMailByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Nym_VerifyMailByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_Nym_VerifyMailByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)OT_API_Nym_VerifyMailByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_OutmailCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetNym_OutmailCount NYM_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_OutmailCount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_GetNym_OutmailCount((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_OutmailContentsByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_OutmailContentsByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_OutmailContentsByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_GetNym_OutmailContentsByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_GetNym_OutmailContentsByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_OutmailRecipientIDByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_OutmailRecipientIDByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_OutmailRecipientIDByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_GetNym_OutmailRecipientIDByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_GetNym_OutmailRecipientIDByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_OutmailServerIDByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_OutmailServerIDByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_OutmailServerIDByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_GetNym_OutmailServerIDByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_GetNym_OutmailServerIDByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Nym_RemoveOutmailByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Nym_RemoveOutmailByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Nym_RemoveOutmailByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_Nym_RemoveOutmailByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)OT_API_Nym_RemoveOutmailByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Nym_VerifyOutmailByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Nym_VerifyOutmailByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Nym_VerifyOutmailByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_Nym_VerifyOutmailByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)OT_API_Nym_VerifyOutmailByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_OutpaymentsCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_GetNym_OutpaymentsCount NYM_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_OutpaymentsCount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_GetNym_OutpaymentsCount((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_OutpaymentsContentsByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_OutpaymentsContentsByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_OutpaymentsContentsByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_GetNym_OutpaymentsContentsByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_GetNym_OutpaymentsContentsByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_OutpaymentsRecipientIDByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_OutpaymentsRecipientIDByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_OutpaymentsRecipientIDByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_GetNym_OutpaymentsRecipientIDByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_GetNym_OutpaymentsRecipientIDByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetNym_OutpaymentsServerIDByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GetNym_OutpaymentsServerIDByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetNym_OutpaymentsServerIDByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_GetNym_OutpaymentsServerIDByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_GetNym_OutpaymentsServerIDByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Nym_RemoveOutpaymentsByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Nym_RemoveOutpaymentsByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Nym_RemoveOutpaymentsByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_Nym_RemoveOutpaymentsByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)OT_API_Nym_RemoveOutpaymentsByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Nym_VerifyOutpaymentsByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Nym_VerifyOutpaymentsByIndex NYM_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Nym_VerifyOutpaymentsByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_Nym_VerifyOutpaymentsByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)OT_API_Nym_VerifyOutpaymentsByIndex((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_CanRemoveServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Wallet_CanRemoveServer SERVER_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_CanRemoveServer" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_Wallet_CanRemoveServer((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_RemoveServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Wallet_RemoveServer SERVER_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_RemoveServer" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_Wallet_RemoveServer((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_CanRemoveAssetType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Wallet_CanRemoveAssetType ASSET_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_CanRemoveAssetType" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_Wallet_CanRemoveAssetType((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_RemoveAssetType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Wallet_RemoveAssetType ASSET_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_RemoveAssetType" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_Wallet_RemoveAssetType((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_CanRemoveNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Wallet_CanRemoveNym NYM_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_CanRemoveNym" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_Wallet_CanRemoveNym((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_RemoveNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Wallet_RemoveNym NYM_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_RemoveNym" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_Wallet_RemoveNym((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_CanRemoveAccount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Wallet_CanRemoveAccount ACCOUNT_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_CanRemoveAccount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_Wallet_CanRemoveAccount((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_ImportNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Wallet_ImportNym DISPLAY_NAME KEY_FILE_CONTENTS ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_ImportNym" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Wallet_ImportNym" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Wallet_ImportNym((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_GetNymIDFromPartial(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Wallet_GetNymIDFromPartial PARTIAL_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_GetNymIDFromPartial" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Wallet_GetNymIDFromPartial((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_GetServerIDFromPartial(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Wallet_GetServerIDFromPartial PARTIAL_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_GetServerIDFromPartial" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Wallet_GetServerIDFromPartial((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_GetAssetIDFromPartial(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Wallet_GetAssetIDFromPartial PARTIAL_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_GetAssetIDFromPartial" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Wallet_GetAssetIDFromPartial((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_GetAccountIDFromPartial(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Wallet_GetAccountIDFromPartial PARTIAL_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_GetAccountIDFromPartial" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Wallet_GetAccountIDFromPartial((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SetNym_Name(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_SetNym_Name NYM_ID SIGNER_NYM_ID NYM_NEW_NAME ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SetNym_Name" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SetNym_Name" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SetNym_Name" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_SetNym_Name((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SetAccountWallet_Name(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_SetAccountWallet_Name ACCT_ID SIGNER_NYM_ID ACCT_NEW_NAME ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SetAccountWallet_Name" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SetAccountWallet_Name" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SetAccountWallet_Name" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_SetAccountWallet_Name((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SetAssetType_Name(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_SetAssetType_Name ASSET_ID STR_NEW_NAME ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SetAssetType_Name" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SetAssetType_Name" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_SetAssetType_Name((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SetServer_Name(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_SetServer_Name SERVER_ID STR_NEW_NAME ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SetServer_Name" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SetServer_Name" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_SetServer_Name((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_WriteCheque(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooooo:OT_API_WriteCheque SERVER_ID CHEQUE_AMOUNT VALID_FROM VALID_TO SENDER_ACCT_ID SENDER_USER_ID CHEQUE_MEMO RECIPIENT_USER_ID ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_WriteCheque" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_WriteCheque" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_WriteCheque" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_WriteCheque" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_WriteCheque" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(objv[6], &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "OT_API_WriteCheque" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(objv[7], &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "OT_API_WriteCheque" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(objv[8], &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "OT_API_WriteCheque" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  result = (char *)OT_API_WriteCheque((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_DiscardCheque(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_DiscardCheque SERVER_ID USER_ID ACCT_ID THE_CHEQUE ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_DiscardCheque" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_DiscardCheque" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_DiscardCheque" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_DiscardCheque" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_DiscardCheque((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_ProposePaymentPlan(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  char *arg9 = (char *) 0 ;
  char *arg10 = (char *) 0 ;
  char *arg11 = (char *) 0 ;
  char *arg12 = (char *) 0 ;
  char *arg13 = (char *) 0 ;
  char *arg14 = (char *) 0 ;
  char *arg15 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  int res9 ;
  char *buf9 = 0 ;
  int alloc9 = 0 ;
  int res10 ;
  char *buf10 = 0 ;
  int alloc10 = 0 ;
  int res11 ;
  char *buf11 = 0 ;
  int alloc11 = 0 ;
  int res12 ;
  char *buf12 = 0 ;
  int alloc12 = 0 ;
  int res13 ;
  char *buf13 = 0 ;
  int alloc13 = 0 ;
  int res14 ;
  char *buf14 = 0 ;
  int alloc14 = 0 ;
  int res15 ;
  char *buf15 = 0 ;
  int alloc15 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooooooooo:OT_API_ProposePaymentPlan SERVER_ID VALID_FROM VALID_TO SENDER_ACCT_ID SENDER_USER_ID PLAN_CONSIDERATION RECIPIENT_ACCT_ID RECIPIENT_USER_ID INITIAL_PAYMENT_AMOUNT INITIAL_PAYMENT_DELAY PAYMENT_PLAN_AMOUNT PAYMENT_PLAN_DELAY PAYMENT_PLAN_PERIOD PAYMENT_PLAN_LENGTH PAYMENT_PLAN_MAX_PAYMENTS ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_ProposePaymentPlan" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_ProposePaymentPlan" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_ProposePaymentPlan" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_ProposePaymentPlan" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_ProposePaymentPlan" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(objv[6], &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "OT_API_ProposePaymentPlan" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(objv[7], &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "OT_API_ProposePaymentPlan" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(objv[8], &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "OT_API_ProposePaymentPlan" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_AsCharPtrAndSize(objv[9], &buf9, NULL, &alloc9);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "OT_API_ProposePaymentPlan" "', argument " "9"" of type '" "char const *""'");
  }
  arg9 = reinterpret_cast< char * >(buf9);
  res10 = SWIG_AsCharPtrAndSize(objv[10], &buf10, NULL, &alloc10);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "OT_API_ProposePaymentPlan" "', argument " "10"" of type '" "char const *""'");
  }
  arg10 = reinterpret_cast< char * >(buf10);
  res11 = SWIG_AsCharPtrAndSize(objv[11], &buf11, NULL, &alloc11);
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "OT_API_ProposePaymentPlan" "', argument " "11"" of type '" "char const *""'");
  }
  arg11 = reinterpret_cast< char * >(buf11);
  res12 = SWIG_AsCharPtrAndSize(objv[12], &buf12, NULL, &alloc12);
  if (!SWIG_IsOK(res12)) {
    SWIG_exception_fail(SWIG_ArgError(res12), "in method '" "OT_API_ProposePaymentPlan" "', argument " "12"" of type '" "char const *""'");
  }
  arg12 = reinterpret_cast< char * >(buf12);
  res13 = SWIG_AsCharPtrAndSize(objv[13], &buf13, NULL, &alloc13);
  if (!SWIG_IsOK(res13)) {
    SWIG_exception_fail(SWIG_ArgError(res13), "in method '" "OT_API_ProposePaymentPlan" "', argument " "13"" of type '" "char const *""'");
  }
  arg13 = reinterpret_cast< char * >(buf13);
  res14 = SWIG_AsCharPtrAndSize(objv[14], &buf14, NULL, &alloc14);
  if (!SWIG_IsOK(res14)) {
    SWIG_exception_fail(SWIG_ArgError(res14), "in method '" "OT_API_ProposePaymentPlan" "', argument " "14"" of type '" "char const *""'");
  }
  arg14 = reinterpret_cast< char * >(buf14);
  res15 = SWIG_AsCharPtrAndSize(objv[15], &buf15, NULL, &alloc15);
  if (!SWIG_IsOK(res15)) {
    SWIG_exception_fail(SWIG_ArgError(res15), "in method '" "OT_API_ProposePaymentPlan" "', argument " "15"" of type '" "char const *""'");
  }
  arg15 = reinterpret_cast< char * >(buf15);
  result = (char *)OT_API_ProposePaymentPlan((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8,(char const *)arg9,(char const *)arg10,(char const *)arg11,(char const *)arg12,(char const *)arg13,(char const *)arg14,(char const *)arg15);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc9 == SWIG_NEWOBJ) delete[] buf9;
  if (alloc10 == SWIG_NEWOBJ) delete[] buf10;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc12 == SWIG_NEWOBJ) delete[] buf12;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  if (alloc14 == SWIG_NEWOBJ) delete[] buf14;
  if (alloc15 == SWIG_NEWOBJ) delete[] buf15;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc9 == SWIG_NEWOBJ) delete[] buf9;
  if (alloc10 == SWIG_NEWOBJ) delete[] buf10;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc12 == SWIG_NEWOBJ) delete[] buf12;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  if (alloc14 == SWIG_NEWOBJ) delete[] buf14;
  if (alloc15 == SWIG_NEWOBJ) delete[] buf15;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_ConfirmPaymentPlan(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_ConfirmPaymentPlan SERVER_ID SENDER_USER_ID SENDER_ACCT_ID RECIPIENT_USER_ID PAYMENT_PLAN ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_ConfirmPaymentPlan" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_ConfirmPaymentPlan" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_ConfirmPaymentPlan" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_ConfirmPaymentPlan" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_ConfirmPaymentPlan" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (char *)OT_API_ConfirmPaymentPlan((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Create_SmartContract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Create_SmartContract SERVER_ID SIGNER_NYM_ID VALID_FROM VALID_TO ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Create_SmartContract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Create_SmartContract" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Create_SmartContract" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Create_SmartContract" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Create_SmartContract((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SmartContract_AddBylaw(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_SmartContract_AddBylaw THE_CONTRACT SIGNER_NYM_ID BYLAW_NAME ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SmartContract_AddBylaw" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SmartContract_AddBylaw" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SmartContract_AddBylaw" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_SmartContract_AddBylaw((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SmartContract_AddClause(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_SmartContract_AddClause THE_CONTRACT SIGNER_NYM_ID BYLAW_NAME CLAUSE_NAME SOURCE_CODE ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SmartContract_AddClause" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SmartContract_AddClause" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SmartContract_AddClause" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_SmartContract_AddClause" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_SmartContract_AddClause" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (char *)OT_API_SmartContract_AddClause((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SmartContract_AddVariable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:OT_API_SmartContract_AddVariable THE_CONTRACT SIGNER_NYM_ID BYLAW_NAME VAR_NAME VAR_ACCESS VAR_TYPE VAR_VALUE ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SmartContract_AddVariable" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SmartContract_AddVariable" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SmartContract_AddVariable" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_SmartContract_AddVariable" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_SmartContract_AddVariable" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(objv[6], &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "OT_API_SmartContract_AddVariable" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(objv[7], &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "OT_API_SmartContract_AddVariable" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  result = (char *)OT_API_SmartContract_AddVariable((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SmartContract_AddCallback(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_SmartContract_AddCallback THE_CONTRACT SIGNER_NYM_ID BYLAW_NAME CALLBACK_NAME CLAUSE_NAME ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SmartContract_AddCallback" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SmartContract_AddCallback" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SmartContract_AddCallback" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_SmartContract_AddCallback" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_SmartContract_AddCallback" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (char *)OT_API_SmartContract_AddCallback((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SmartContract_AddHook(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_SmartContract_AddHook THE_CONTRACT SIGNER_NYM_ID BYLAW_NAME HOOK_NAME CLAUSE_NAME ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SmartContract_AddHook" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SmartContract_AddHook" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SmartContract_AddHook" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_SmartContract_AddHook" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_SmartContract_AddHook" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (char *)OT_API_SmartContract_AddHook((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SmartContract_AddParty(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_SmartContract_AddParty THE_CONTRACT SIGNER_NYM_ID PARTY_NAME AGENT_NAME ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SmartContract_AddParty" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SmartContract_AddParty" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SmartContract_AddParty" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_SmartContract_AddParty" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_SmartContract_AddParty((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SmartContract_AddAccount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_SmartContract_AddAccount THE_CONTRACT SIGNER_NYM_ID PARTY_NAME ACCT_NAME ASSET_TYPE_ID ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SmartContract_AddAccount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SmartContract_AddAccount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SmartContract_AddAccount" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_SmartContract_AddAccount" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_SmartContract_AddAccount" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (char *)OT_API_SmartContract_AddAccount((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SmartContract_CountNumsNeeded(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_SmartContract_CountNumsNeeded THE_CONTRACT AGENT_NAME ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SmartContract_CountNumsNeeded" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SmartContract_CountNumsNeeded" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_SmartContract_CountNumsNeeded((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SmartContract_ConfirmAccount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:OT_API_SmartContract_ConfirmAccount THE_CONTRACT SIGNER_NYM_ID PARTY_NAME ACCT_NAME AGENT_NAME ACCT_ID ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SmartContract_ConfirmAccount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SmartContract_ConfirmAccount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SmartContract_ConfirmAccount" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_SmartContract_ConfirmAccount" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_SmartContract_ConfirmAccount" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(objv[6], &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "OT_API_SmartContract_ConfirmAccount" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  result = (char *)OT_API_SmartContract_ConfirmAccount((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SmartContract_ConfirmParty(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_SmartContract_ConfirmParty THE_CONTRACT PARTY_NAME NYM_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SmartContract_ConfirmParty" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SmartContract_ConfirmParty" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SmartContract_ConfirmParty" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_SmartContract_ConfirmParty((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_activateSmartContract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_activateSmartContract SERVER_ID USER_ID THE_SMART_CONTRACT ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_activateSmartContract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_activateSmartContract" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_activateSmartContract" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_activateSmartContract((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_triggerClause(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_triggerClause SERVER_ID USER_ID TRANSACTION_NUMBER CLAUSE_NAME STR_PARAM ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_triggerClause" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_triggerClause" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_triggerClause" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_triggerClause" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_triggerClause" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (int)OT_API_triggerClause((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Msg_HarvestTransactionNumbers(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:OT_API_Msg_HarvestTransactionNumbers THE_MESSAGE USER_ID bHarvestingForRetry bReplyWasSuccess bReplyWasFailure bTransactionWasSuccess bTransactionWasFailure ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Msg_HarvestTransactionNumbers" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Msg_HarvestTransactionNumbers" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OT_API_Msg_HarvestTransactionNumbers" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OT_API_Msg_HarvestTransactionNumbers" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OT_API_Msg_HarvestTransactionNumbers" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "OT_API_Msg_HarvestTransactionNumbers" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[7], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "OT_API_Msg_HarvestTransactionNumbers" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  result = (int)OT_API_Msg_HarvestTransactionNumbers((char const *)arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadUserPubkey(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_LoadUserPubkey USER_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadUserPubkey" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_LoadUserPubkey((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadPubkey(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_LoadPubkey USER_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadPubkey" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_LoadPubkey((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_VerifyUserPrivateKey(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_VerifyUserPrivateKey USER_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_VerifyUserPrivateKey" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_VerifyUserPrivateKey((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadPurse(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_LoadPurse SERVER_ID ASSET_TYPE_ID USER_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadPurse" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadPurse" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_LoadPurse" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_LoadPurse((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadMint(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_LoadMint SERVER_ID ASSET_TYPE_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadMint" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadMint" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_LoadMint((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadAssetContract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_LoadAssetContract ASSET_TYPE_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadAssetContract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_LoadAssetContract((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadServerContract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_LoadServerContract SERVER_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadServerContract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_LoadServerContract((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Mint_IsStillGood(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_Mint_IsStillGood SERVER_ID USER_ID ASSET_TYPE_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Mint_IsStillGood" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Mint_IsStillGood" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Mint_IsStillGood" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_Mint_IsStillGood((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_IsBasketCurrency(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_IsBasketCurrency ASSET_TYPE_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_IsBasketCurrency" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_IsBasketCurrency((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Basket_GetMemberCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Basket_GetMemberCount BASKET_ASSET_TYPE_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Basket_GetMemberCount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_Basket_GetMemberCount((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Basket_GetMemberType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Basket_GetMemberType BASKET_ASSET_TYPE_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Basket_GetMemberType" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_Basket_GetMemberType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_Basket_GetMemberType((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Basket_GetMinimumTransferAmount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Basket_GetMinimumTransferAmount BASKET_ASSET_TYPE_ID ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Basket_GetMinimumTransferAmount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Basket_GetMinimumTransferAmount((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Basket_GetMemberMinimumTransferAmount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Basket_GetMemberMinimumTransferAmount BASKET_ASSET_TYPE_ID nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Basket_GetMemberMinimumTransferAmount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OT_API_Basket_GetMemberMinimumTransferAmount" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)OT_API_Basket_GetMemberMinimumTransferAmount((char const *)arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadAssetAccount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_LoadAssetAccount SERVER_ID USER_ID ACCOUNT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadAssetAccount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadAssetAccount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_LoadAssetAccount" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_LoadAssetAccount((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadInbox(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_LoadInbox SERVER_ID USER_ID ACCOUNT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadInbox" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadInbox" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_LoadInbox" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_LoadInbox((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadOutbox(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_LoadOutbox SERVER_ID USER_ID ACCOUNT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadOutbox" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadOutbox" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_LoadOutbox" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_LoadOutbox((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadInboxNoVerify(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_LoadInboxNoVerify SERVER_ID USER_ID ACCOUNT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadInboxNoVerify" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadInboxNoVerify" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_LoadInboxNoVerify" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_LoadInboxNoVerify((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadOutboxNoVerify(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_LoadOutboxNoVerify SERVER_ID USER_ID ACCOUNT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadOutboxNoVerify" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadOutboxNoVerify" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_LoadOutboxNoVerify" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_LoadOutboxNoVerify((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadPaymentInbox(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_LoadPaymentInbox SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadPaymentInbox" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadPaymentInbox" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_LoadPaymentInbox((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadPaymentInboxNoVerify(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_LoadPaymentInboxNoVerify SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadPaymentInboxNoVerify" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadPaymentInboxNoVerify" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_LoadPaymentInboxNoVerify((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadRecordBox(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_LoadRecordBox SERVER_ID USER_ID ACCOUNT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadRecordBox" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadRecordBox" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_LoadRecordBox" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_LoadRecordBox((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadRecordBoxNoVerify(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_LoadRecordBoxNoVerify SERVER_ID USER_ID ACCOUNT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadRecordBoxNoVerify" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadRecordBoxNoVerify" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_LoadRecordBoxNoVerify" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_LoadRecordBoxNoVerify((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Ledger_GetCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Ledger_GetCount SERVER_ID USER_ID ACCOUNT_ID THE_LEDGER ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Ledger_GetCount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Ledger_GetCount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Ledger_GetCount" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Ledger_GetCount" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_Ledger_GetCount((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Ledger_CreateResponse(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Ledger_CreateResponse SERVER_ID USER_ID ACCOUNT_ID ORIGINAL_LEDGER ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Ledger_CreateResponse" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Ledger_CreateResponse" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Ledger_CreateResponse" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Ledger_CreateResponse" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Ledger_CreateResponse((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Ledger_GetTransactionByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_Ledger_GetTransactionByIndex SERVER_ID USER_ID ACCOUNT_ID THE_LEDGER nIndex ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Ledger_GetTransactionByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Ledger_GetTransactionByIndex" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Ledger_GetTransactionByIndex" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Ledger_GetTransactionByIndex" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OT_API_Ledger_GetTransactionByIndex" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (char *)OT_API_Ledger_GetTransactionByIndex((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Ledger_GetTransactionByID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_Ledger_GetTransactionByID SERVER_ID USER_ID ACCOUNT_ID THE_LEDGER TRANSACTION_NUMBER ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Ledger_GetTransactionByID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Ledger_GetTransactionByID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Ledger_GetTransactionByID" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Ledger_GetTransactionByID" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_Ledger_GetTransactionByID" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (char *)OT_API_Ledger_GetTransactionByID((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Ledger_GetTransactionIDByIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_Ledger_GetTransactionIDByIndex SERVER_ID USER_ID ACCOUNT_ID THE_LEDGER nIndex ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Ledger_GetTransactionIDByIndex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Ledger_GetTransactionIDByIndex" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Ledger_GetTransactionIDByIndex" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Ledger_GetTransactionIDByIndex" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OT_API_Ledger_GetTransactionIDByIndex" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (char *)OT_API_Ledger_GetTransactionIDByIndex((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Ledger_AddTransaction(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_Ledger_AddTransaction SERVER_ID USER_ID ACCOUNT_ID THE_LEDGER THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Ledger_AddTransaction" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Ledger_AddTransaction" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Ledger_AddTransaction" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Ledger_AddTransaction" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_Ledger_AddTransaction" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (char *)OT_API_Ledger_AddTransaction((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_CreateResponse(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int arg6 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:OT_API_Transaction_CreateResponse SERVER_ID USER_ID ACCOUNT_ID RESPONSE_LEDGER ORIGINAL_TRANSACTION BOOL_DO_I_ACCEPT ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_CreateResponse" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_CreateResponse" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_CreateResponse" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_CreateResponse" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_Transaction_CreateResponse" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "OT_API_Transaction_CreateResponse" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  result = (char *)OT_API_Transaction_CreateResponse((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Ledger_FinalizeResponse(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Ledger_FinalizeResponse SERVER_ID USER_ID ACCOUNT_ID THE_LEDGER ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Ledger_FinalizeResponse" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Ledger_FinalizeResponse" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Ledger_FinalizeResponse" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Ledger_FinalizeResponse" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Ledger_FinalizeResponse((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Ledger_GetInstrument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_Ledger_GetInstrument SERVER_ID USER_ID ACCOUNT_ID THE_LEDGER nIndex ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Ledger_GetInstrument" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Ledger_GetInstrument" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Ledger_GetInstrument" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Ledger_GetInstrument" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OT_API_Ledger_GetInstrument" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (char *)OT_API_Ledger_GetInstrument((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_GetType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Transaction_GetType SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_GetType" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_GetType" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_GetType" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_GetType" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Transaction_GetType((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_ReplyNotice_GetRequestNum(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_ReplyNotice_GetRequestNum SERVER_ID USER_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_ReplyNotice_GetRequestNum" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_ReplyNotice_GetRequestNum" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_ReplyNotice_GetRequestNum" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_ReplyNotice_GetRequestNum((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_GetVoucher(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Transaction_GetVoucher SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_GetVoucher" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_GetVoucher" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_GetVoucher" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_GetVoucher" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Transaction_GetVoucher((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_GetSuccess(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Transaction_GetSuccess SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_GetSuccess" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_GetSuccess" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_GetSuccess" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_GetSuccess" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_Transaction_GetSuccess((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_GetBalanceAgreementSuccess(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Transaction_GetBalanceAgreementSuccess SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_GetBalanceAgreementSuccess" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_GetBalanceAgreementSuccess" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_GetBalanceAgreementSuccess" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_GetBalanceAgreementSuccess" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_Transaction_GetBalanceAgreementSuccess((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_GetDateSigned(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Transaction_GetDateSigned SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_GetDateSigned" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_GetDateSigned" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_GetDateSigned" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_GetDateSigned" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Transaction_GetDateSigned((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_GetAmount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Transaction_GetAmount SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_GetAmount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_GetAmount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_GetAmount" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_GetAmount" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Transaction_GetAmount((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Pending_GetNote(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Pending_GetNote SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Pending_GetNote" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Pending_GetNote" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Pending_GetNote" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Pending_GetNote" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Pending_GetNote((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_GetSenderUserID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Transaction_GetSenderUserID SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_GetSenderUserID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_GetSenderUserID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_GetSenderUserID" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_GetSenderUserID" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Transaction_GetSenderUserID((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_GetSenderAcctID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Transaction_GetSenderAcctID SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_GetSenderAcctID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_GetSenderAcctID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_GetSenderAcctID" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_GetSenderAcctID" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Transaction_GetSenderAcctID((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_GetRecipientUserID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Transaction_GetRecipientUserID SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_GetRecipientUserID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_GetRecipientUserID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_GetRecipientUserID" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_GetRecipientUserID" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Transaction_GetRecipientUserID((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_GetRecipientAcctID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Transaction_GetRecipientAcctID SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_GetRecipientAcctID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_GetRecipientAcctID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_GetRecipientAcctID" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_GetRecipientAcctID" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Transaction_GetRecipientAcctID((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Transaction_GetDisplayReferenceToNum(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Transaction_GetDisplayReferenceToNum SERVER_ID USER_ID ACCOUNT_ID THE_TRANSACTION ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Transaction_GetDisplayReferenceToNum" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Transaction_GetDisplayReferenceToNum" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Transaction_GetDisplayReferenceToNum" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Transaction_GetDisplayReferenceToNum" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Transaction_GetDisplayReferenceToNum((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_CreatePurse(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_CreatePurse SERVER_ID ASSET_TYPE_ID USER_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_CreatePurse" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_CreatePurse" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_CreatePurse" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_CreatePurse((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_SavePurse(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_SavePurse SERVER_ID ASSET_TYPE_ID USER_ID THE_PURSE ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_SavePurse" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_SavePurse" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_SavePurse" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_SavePurse" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_SavePurse((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Purse_GetTotalValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_Purse_GetTotalValue SERVER_ID ASSET_TYPE_ID THE_PURSE ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Purse_GetTotalValue" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Purse_GetTotalValue" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Purse_GetTotalValue" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_Purse_GetTotalValue((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Purse_Count(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_Purse_Count SERVER_ID ASSET_TYPE_ID THE_PURSE ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Purse_Count" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Purse_Count" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Purse_Count" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_Purse_Count((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Purse_Peek(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Purse_Peek SERVER_ID ASSET_TYPE_ID USER_ID THE_PURSE ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Purse_Peek" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Purse_Peek" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Purse_Peek" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Purse_Peek" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Purse_Peek((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Purse_Pop(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Purse_Pop SERVER_ID ASSET_TYPE_ID USER_ID THE_PURSE ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Purse_Pop" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Purse_Pop" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Purse_Pop" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Purse_Pop" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_Purse_Pop((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Purse_Push(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_Purse_Push SERVER_ID ASSET_TYPE_ID USER_ID THE_PURSE THE_TOKEN ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Purse_Push" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Purse_Push" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Purse_Push" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Purse_Push" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_Purse_Push" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (char *)OT_API_Purse_Push((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Wallet_ImportPurse(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Wallet_ImportPurse SERVER_ID ASSET_TYPE_ID USER_ID THE_PURSE ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Wallet_ImportPurse" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Wallet_ImportPurse" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Wallet_ImportPurse" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Wallet_ImportPurse" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_Wallet_ImportPurse((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_exchangePurse(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_exchangePurse SERVER_ID ASSET_TYPE_ID USER_ID THE_PURSE ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_exchangePurse" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_exchangePurse" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_exchangePurse" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_exchangePurse" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_exchangePurse((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Token_ChangeOwner(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_Token_ChangeOwner SERVER_ID ASSET_TYPE_ID THE_TOKEN OLD_OWNER_NYM_ID NEW_OWNER_NYM_ID ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Token_ChangeOwner" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Token_ChangeOwner" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Token_ChangeOwner" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Token_ChangeOwner" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_Token_ChangeOwner" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (char *)OT_API_Token_ChangeOwner((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Token_GetID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_Token_GetID SERVER_ID ASSET_TYPE_ID THE_TOKEN ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Token_GetID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Token_GetID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Token_GetID" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_Token_GetID((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Token_GetDenomination(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_Token_GetDenomination SERVER_ID ASSET_TYPE_ID THE_TOKEN ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Token_GetDenomination" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Token_GetDenomination" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Token_GetDenomination" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_Token_GetDenomination((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Token_GetSeries(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_Token_GetSeries SERVER_ID ASSET_TYPE_ID THE_TOKEN ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Token_GetSeries" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Token_GetSeries" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Token_GetSeries" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_Token_GetSeries((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Token_GetValidFrom(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_Token_GetValidFrom SERVER_ID ASSET_TYPE_ID THE_TOKEN ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Token_GetValidFrom" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Token_GetValidFrom" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Token_GetValidFrom" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_Token_GetValidFrom((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Token_GetValidTo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_Token_GetValidTo SERVER_ID ASSET_TYPE_ID THE_TOKEN ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Token_GetValidTo" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Token_GetValidTo" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Token_GetValidTo" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_Token_GetValidTo((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Token_GetAssetID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Token_GetAssetID THE_TOKEN ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Token_GetAssetID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Token_GetAssetID((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Token_GetServerID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Token_GetServerID THE_TOKEN ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Token_GetServerID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Token_GetServerID((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Instrument_GetAmount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Instrument_GetAmount SERVER_ID THE_INSTRUMENT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Instrument_GetAmount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Instrument_GetAmount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Instrument_GetAmount((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Instrument_GetTransNum(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Instrument_GetTransNum SERVER_ID THE_INSTRUMENT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Instrument_GetTransNum" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Instrument_GetTransNum" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Instrument_GetTransNum((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Instrument_GetValidFrom(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Instrument_GetValidFrom SERVER_ID THE_INSTRUMENT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Instrument_GetValidFrom" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Instrument_GetValidFrom" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Instrument_GetValidFrom((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Instrument_GetValidTo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Instrument_GetValidTo SERVER_ID THE_INSTRUMENT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Instrument_GetValidTo" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Instrument_GetValidTo" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Instrument_GetValidTo((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Instrument_GetMemo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Instrument_GetMemo SERVER_ID THE_INSTRUMENT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Instrument_GetMemo" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Instrument_GetMemo" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Instrument_GetMemo((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Instrument_GetType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Instrument_GetType SERVER_ID THE_INSTRUMENT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Instrument_GetType" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Instrument_GetType" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Instrument_GetType((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Instrument_GetAssetID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Instrument_GetAssetID SERVER_ID THE_INSTRUMENT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Instrument_GetAssetID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Instrument_GetAssetID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Instrument_GetAssetID((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Instrmnt_GetSenderUserID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Instrmnt_GetSenderUserID SERVER_ID THE_INSTRUMENT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Instrmnt_GetSenderUserID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Instrmnt_GetSenderUserID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Instrmnt_GetSenderUserID((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Instrmnt_GetSenderAcctID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Instrmnt_GetSenderAcctID SERVER_ID THE_INSTRUMENT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Instrmnt_GetSenderAcctID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Instrmnt_GetSenderAcctID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Instrmnt_GetSenderAcctID((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Instrmnt_GetRecipientUserID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Instrmnt_GetRecipientUserID SERVER_ID THE_INSTRUMENT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Instrmnt_GetRecipientUserID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Instrmnt_GetRecipientUserID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Instrmnt_GetRecipientUserID((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Instrmnt_GetRecipientAcctID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_Instrmnt_GetRecipientAcctID SERVER_ID THE_INSTRUMENT ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Instrmnt_GetRecipientAcctID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Instrmnt_GetRecipientAcctID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_Instrmnt_GetRecipientAcctID((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_checkServerID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_checkServerID SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_checkServerID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_checkServerID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_checkServerID((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_createUserAccount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_createUserAccount SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_createUserAccount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_createUserAccount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_createUserAccount((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_deleteUserAccount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_deleteUserAccount SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_deleteUserAccount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_deleteUserAccount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_deleteUserAccount((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_deleteAssetAccount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_deleteAssetAccount SERVER_ID USER_ID ACCOUNT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_deleteAssetAccount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_deleteAssetAccount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_deleteAssetAccount" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_deleteAssetAccount((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_usageCredits(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_usageCredits SERVER_ID USER_ID USER_ID_CHECK ADJUSTMENT ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_usageCredits" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_usageCredits" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_usageCredits" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_usageCredits" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_usageCredits((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetUsageCredits(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Message_GetUsageCredits THE_MESSAGE ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetUsageCredits" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Message_GetUsageCredits((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_checkUser(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_checkUser SERVER_ID USER_ID USER_ID_CHECK ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_checkUser" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_checkUser" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_checkUser" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_checkUser((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_sendUserMessage(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_sendUserMessage SERVER_ID USER_ID USER_ID_RECIPIENT RECIPIENT_PUBKEY THE_MESSAGE ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_sendUserMessage" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_sendUserMessage" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_sendUserMessage" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_sendUserMessage" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_sendUserMessage" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (int)OT_API_sendUserMessage((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_sendUserInstrument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_sendUserInstrument SERVER_ID USER_ID USER_ID_RECIPIENT RECIPIENT_PUBKEY THE_INSTRUMENT ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_sendUserInstrument" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_sendUserInstrument" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_sendUserInstrument" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_sendUserInstrument" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_sendUserInstrument" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (int)OT_API_sendUserInstrument((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getRequest(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_getRequest SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getRequest" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getRequest" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_getRequest((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getTransactionNumber(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_getTransactionNumber SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getTransactionNumber" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getTransactionNumber" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_getTransactionNumber((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_issueAssetType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_issueAssetType SERVER_ID USER_ID THE_CONTRACT ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_issueAssetType" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_issueAssetType" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_issueAssetType" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_issueAssetType((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getContract(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_getContract SERVER_ID USER_ID ASSET_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getContract" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getContract" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_getContract" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_getContract((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getMint(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_getMint SERVER_ID USER_ID ASSET_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getMint" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getMint" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_getMint" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_getMint((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_createAssetAccount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_createAssetAccount SERVER_ID USER_ID ASSET_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_createAssetAccount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_createAssetAccount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_createAssetAccount" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_createAssetAccount((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getAccount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_getAccount SERVER_ID USER_ID ACCT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getAccount" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getAccount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_getAccount" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_getAccount((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GenerateBasketCreation(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_GenerateBasketCreation USER_ID MINIMUM_TRANSFER ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GenerateBasketCreation" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_GenerateBasketCreation" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_GenerateBasketCreation((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_AddBasketCreationItem(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_AddBasketCreationItem USER_ID THE_BASKET ASSET_TYPE_ID MINIMUM_TRANSFER ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_AddBasketCreationItem" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_AddBasketCreationItem" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_AddBasketCreationItem" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_AddBasketCreationItem" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (char *)OT_API_AddBasketCreationItem((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_issueBasket(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_issueBasket SERVER_ID USER_ID THE_BASKET ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_issueBasket" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_issueBasket" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_issueBasket" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_issueBasket((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GenerateBasketExchange(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_GenerateBasketExchange SERVER_ID USER_ID BASKET_ASSET_TYPE_ID BASKET_ASSET_ACCT_ID TRANSFER_MULTIPLE ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GenerateBasketExchange" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_GenerateBasketExchange" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_GenerateBasketExchange" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_GenerateBasketExchange" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OT_API_GenerateBasketExchange" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (char *)OT_API_GenerateBasketExchange((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_AddBasketExchangeItem(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_AddBasketExchangeItem SERVER_ID USER_ID THE_BASKET ASSET_TYPE_ID ASSET_ACCT_ID ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_AddBasketExchangeItem" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_AddBasketExchangeItem" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_AddBasketExchangeItem" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_AddBasketExchangeItem" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_AddBasketExchangeItem" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (char *)OT_API_AddBasketExchangeItem((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_exchangeBasket(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_exchangeBasket SERVER_ID USER_ID BASKET_ASSET_ID THE_BASKET BOOL_EXCHANGE_IN_OR_OUT ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_exchangeBasket" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_exchangeBasket" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_exchangeBasket" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_exchangeBasket" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OT_API_exchangeBasket" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (int)OT_API_exchangeBasket((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_notarizeWithdrawal(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_notarizeWithdrawal SERVER_ID USER_ID ACCT_ID AMOUNT ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_notarizeWithdrawal" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_notarizeWithdrawal" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_notarizeWithdrawal" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_notarizeWithdrawal" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_notarizeWithdrawal((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_notarizeDeposit(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_notarizeDeposit SERVER_ID USER_ID ACCT_ID THE_PURSE ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_notarizeDeposit" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_notarizeDeposit" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_notarizeDeposit" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_notarizeDeposit" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_notarizeDeposit((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_notarizeTransfer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:OT_API_notarizeTransfer SERVER_ID USER_ID ACCT_FROM ACCT_TO AMOUNT NOTE ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_notarizeTransfer" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_notarizeTransfer" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_notarizeTransfer" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_notarizeTransfer" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_notarizeTransfer" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(objv[6], &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "OT_API_notarizeTransfer" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  result = (int)OT_API_notarizeTransfer((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getInbox(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_getInbox SERVER_ID USER_ID ACCT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getInbox" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getInbox" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_getInbox" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_getInbox((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getOutbox(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_getOutbox SERVER_ID USER_ID ACCT_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getOutbox" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getOutbox" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_getOutbox" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_getOutbox((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getNymbox(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_getNymbox SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getNymbox" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getNymbox" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_getNymbox((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadNymbox(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_LoadNymbox SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadNymbox" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadNymbox" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_LoadNymbox((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_LoadNymboxNoVerify(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_LoadNymboxNoVerify SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_LoadNymboxNoVerify" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_LoadNymboxNoVerify" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)OT_API_LoadNymboxNoVerify((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Nymbox_GetReplyNotice(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_Nymbox_GetReplyNotice SERVER_ID USER_ID REQUEST_NUMBER ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Nymbox_GetReplyNotice" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Nymbox_GetReplyNotice" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Nymbox_GetReplyNotice" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_Nymbox_GetReplyNotice((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_HaveAlreadySeenReply(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_HaveAlreadySeenReply SERVER_ID USER_ID REQUEST_NUMBER ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_HaveAlreadySeenReply" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_HaveAlreadySeenReply" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_HaveAlreadySeenReply" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_HaveAlreadySeenReply((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getBoxReceipt(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_getBoxReceipt SERVER_ID USER_ID ACCOUNT_ID nBoxType TRANSACTION_NUMBER ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getBoxReceipt" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getBoxReceipt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_getBoxReceipt" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OT_API_getBoxReceipt" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_getBoxReceipt" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (int)OT_API_getBoxReceipt((char const *)arg1,(char const *)arg2,(char const *)arg3,arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_DoesBoxReceiptExist(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_DoesBoxReceiptExist SERVER_ID USER_ID ACCOUNT_ID nBoxType TRANSACTION_NUMBER ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_DoesBoxReceiptExist" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_DoesBoxReceiptExist" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_DoesBoxReceiptExist" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OT_API_DoesBoxReceiptExist" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_DoesBoxReceiptExist" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (int)OT_API_DoesBoxReceiptExist((char const *)arg1,(char const *)arg2,(char const *)arg3,arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_processInbox(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_processInbox SERVER_ID USER_ID ACCT_ID ACCT_LEDGER ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_processInbox" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_processInbox" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_processInbox" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_processInbox" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_processInbox((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_processNymbox(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_processNymbox SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_processNymbox" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_processNymbox" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_processNymbox((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_withdrawVoucher(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:OT_API_withdrawVoucher SERVER_ID USER_ID ACCT_ID RECIPIENT_USER_ID CHEQUE_MEMO AMOUNT ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_withdrawVoucher" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_withdrawVoucher" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_withdrawVoucher" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_withdrawVoucher" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_withdrawVoucher" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(objv[6], &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "OT_API_withdrawVoucher" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  result = (int)OT_API_withdrawVoucher((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_depositCheque(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_depositCheque SERVER_ID USER_ID ACCT_ID THE_CHEQUE ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_depositCheque" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_depositCheque" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_depositCheque" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_depositCheque" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_depositCheque((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_depositPaymentPlan(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_depositPaymentPlan SERVER_ID USER_ID THE_PAYMENT_PLAN ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_depositPaymentPlan" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_depositPaymentPlan" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_depositPaymentPlan" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_depositPaymentPlan((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_issueMarketOffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  char *arg9 = (char *) 0 ;
  char *arg10 = (char *) 0 ;
  int arg11 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  int res9 ;
  char *buf9 = 0 ;
  int alloc9 = 0 ;
  int res10 ;
  char *buf10 = 0 ;
  int alloc10 = 0 ;
  int val11 ;
  int ecode11 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooooo:OT_API_issueMarketOffer SERVER_ID USER_ID ASSET_TYPE_ID ASSET_ACCT_ID CURRENCY_TYPE_ID CURRENCY_ACCT_ID MARKET_SCALE MINIMUM_INCREMENT TOTAL_ASSETS_ON_OFFER PRICE_LIMIT bBuyingOrSelling ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_issueMarketOffer" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_issueMarketOffer" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_issueMarketOffer" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_issueMarketOffer" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_issueMarketOffer" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(objv[6], &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "OT_API_issueMarketOffer" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(objv[7], &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "OT_API_issueMarketOffer" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(objv[8], &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "OT_API_issueMarketOffer" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_AsCharPtrAndSize(objv[9], &buf9, NULL, &alloc9);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "OT_API_issueMarketOffer" "', argument " "9"" of type '" "char const *""'");
  }
  arg9 = reinterpret_cast< char * >(buf9);
  res10 = SWIG_AsCharPtrAndSize(objv[10], &buf10, NULL, &alloc10);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "OT_API_issueMarketOffer" "', argument " "10"" of type '" "char const *""'");
  }
  arg10 = reinterpret_cast< char * >(buf10);
  ecode11 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[11], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "OT_API_issueMarketOffer" "', argument " "11"" of type '" "int""'");
  } 
  arg11 = static_cast< int >(val11);
  result = (int)OT_API_issueMarketOffer((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8,(char const *)arg9,(char const *)arg10,arg11);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc9 == SWIG_NEWOBJ) delete[] buf9;
  if (alloc10 == SWIG_NEWOBJ) delete[] buf10;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc9 == SWIG_NEWOBJ) delete[] buf9;
  if (alloc10 == SWIG_NEWOBJ) delete[] buf10;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getMarketList(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_getMarketList SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getMarketList" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getMarketList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_getMarketList((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getMarketOffers(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_getMarketOffers SERVER_ID USER_ID MARKET_ID MAX_DEPTH ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getMarketOffers" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getMarketOffers" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_getMarketOffers" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_getMarketOffers" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_getMarketOffers((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getMarketRecentTrades(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_getMarketRecentTrades SERVER_ID USER_ID MARKET_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getMarketRecentTrades" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getMarketRecentTrades" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_getMarketRecentTrades" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_getMarketRecentTrades((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_getNym_MarketOffers(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OT_API_getNym_MarketOffers SERVER_ID USER_ID ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_getNym_MarketOffers" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_getNym_MarketOffers" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)OT_API_getNym_MarketOffers((char const *)arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_cancelMarketOffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_cancelMarketOffer SERVER_ID USER_ID ASSET_ACCT_ID TRANSACTION_NUMBER ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_cancelMarketOffer" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_cancelMarketOffer" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_cancelMarketOffer" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_cancelMarketOffer" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_cancelMarketOffer((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_cancelPaymentPlan(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_cancelPaymentPlan SERVER_ID USER_ID FROM_ACCT_ID TRANSACTION_NUMBER ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_cancelPaymentPlan" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_cancelPaymentPlan" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_cancelPaymentPlan" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_cancelPaymentPlan" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_cancelPaymentPlan((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_PopMessageBuffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_PopMessageBuffer REQUEST_NUMBER SERVER_ID USER_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_PopMessageBuffer" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_PopMessageBuffer" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_PopMessageBuffer" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_PopMessageBuffer((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_FlushMessageBuffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_FlushMessageBuffer ") == TCL_ERROR) SWIG_fail;
  OT_API_FlushMessageBuffer();
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_GetSentMessage(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_GetSentMessage REQUEST_NUMBER SERVER_ID USER_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_GetSentMessage" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_GetSentMessage" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_GetSentMessage" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)OT_API_GetSentMessage((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_RemoveSentMessage(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_RemoveSentMessage REQUEST_NUMBER SERVER_ID USER_ID ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_RemoveSentMessage" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_RemoveSentMessage" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_RemoveSentMessage" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_RemoveSentMessage((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_FlushSentMessages(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_FlushSentMessages bHarvestingForRetry SERVER_ID USER_ID THE_NYMBOX ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "OT_API_FlushSentMessages" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_FlushSentMessages" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_FlushSentMessages" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_FlushSentMessages" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  OT_API_FlushSentMessages(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Sleep(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Sleep MILLISECONDS ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Sleep" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  OT_API_Sleep((char const *)arg1);
  
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_ResyncNymWithServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_ResyncNymWithServer SERVER_ID USER_ID THE_MESSAGE ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_ResyncNymWithServer" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_ResyncNymWithServer" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_ResyncNymWithServer" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_ResyncNymWithServer((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetCommand(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Message_GetCommand THE_MESSAGE ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetCommand" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Message_GetCommand((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetSuccess(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Message_GetSuccess THE_MESSAGE ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetSuccess" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_Message_GetSuccess((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_queryAssetTypes(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:OT_API_queryAssetTypes SERVER_ID USER_ID ENCODED_MAP ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_queryAssetTypes" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_queryAssetTypes" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_queryAssetTypes" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (int)OT_API_queryAssetTypes((char const *)arg1,(char const *)arg2,(char const *)arg3);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetPayload(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Message_GetPayload THE_MESSAGE ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetPayload" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Message_GetPayload((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetDepth(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Message_GetDepth THE_MESSAGE ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetDepth" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)OT_API_Message_GetDepth((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetTransactionSuccess(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Message_GetTransactionSuccess SERVER_ID USER_ID ACCOUNT_ID THE_MESSAGE ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetTransactionSuccess" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Message_GetTransactionSuccess" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Message_GetTransactionSuccess" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Message_GetTransactionSuccess" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_Message_GetTransactionSuccess((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetBalanceAgreementSuccess(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:OT_API_Message_GetBalanceAgreementSuccess SERVER_ID USER_ID ACCOUNT_ID THE_MESSAGE ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetBalanceAgreementSuccess" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_Message_GetBalanceAgreementSuccess" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_Message_GetBalanceAgreementSuccess" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_Message_GetBalanceAgreementSuccess" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (int)OT_API_Message_GetBalanceAgreementSuccess((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetLedger(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Message_GetLedger THE_MESSAGE ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetLedger" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Message_GetLedger((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetNewAssetTypeID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Message_GetNewAssetTypeID THE_MESSAGE ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetNewAssetTypeID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Message_GetNewAssetTypeID((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetNewIssuerAcctID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Message_GetNewIssuerAcctID THE_MESSAGE ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetNewIssuerAcctID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Message_GetNewIssuerAcctID((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetNewAcctID(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Message_GetNewAcctID THE_MESSAGE ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetNewAcctID" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Message_GetNewAcctID((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_Message_GetNymboxHash(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OT_API_Message_GetNymboxHash THE_MESSAGE ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_Message_GetNymboxHash" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)OT_API_Message_GetNymboxHash((char const *)arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_ConnectServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:OT_API_ConnectServer SERVER_ID USER_ID szCA_FILE szKEY_FILE szKEY_PASSWORD ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(objv[1], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OT_API_ConnectServer" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OT_API_ConnectServer" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OT_API_ConnectServer" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OT_API_ConnectServer" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(objv[5], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OT_API_ConnectServer" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (int)OT_API_ConnectServer((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_OK;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OT_API_ProcessSockets(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":OT_API_ProcessSockets ") == TCL_ERROR) SWIG_fail;
  result = (int)OT_API_ProcessSockets();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_Storable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_Storable self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Storable" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storable_Create(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StoredObjectType arg1 ;
  OTDB::PackType arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Storable_Create eType thePackType ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Storable_Create" "', argument " "1"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg1 = static_cast< OTDB::StoredObjectType >(val1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Storable_Create" "', argument " "2"" of type '" "OTDB::PackType""'");
  } 
  arg2 = static_cast< OTDB::PackType >(val2);
  result = (OTDB::Storable *)OTDB::Storable::Create(arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storable_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Storable_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storable_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::Storable *)OTDB::Storable::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_Storable(void *obj) {
OTDB::Storable *arg1 = (OTDB::Storable *) obj;
delete arg1;
}
static swig_method swig_OTDB_Storable_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_Storable_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTDB_Storable_bases[] = {0};
static const char * swig_OTDB_Storable_base_names[] = {0};
static swig_class _wrap_class_OTDB_Storable = { "Storable", &SWIGTYPE_p_OTDB__Storable,0, swig_delete_Storable, swig_OTDB_Storable_methods, swig_OTDB_Storable_attributes, swig_OTDB_Storable_bases,swig_OTDB_Storable_base_names, &swig_module };
SWIGINTERN int
_wrap_Storage_GetPacker__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::PackType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  OTPacker *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Storage_GetPacker self ePackType ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_GetPacker" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Storage_GetPacker" "', argument " "2"" of type '" "OTDB::PackType""'");
  } 
  arg2 = static_cast< OTDB::PackType >(val2);
  result = (OTPacker *)(arg1)->GetPacker(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPacker,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_GetPacker__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTPacker *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Storage_GetPacker self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_GetPacker" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  result = (OTPacker *)(arg1)->GetPacker();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTPacker,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_GetPacker(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Storage_GetPacker__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Storage_GetPacker__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'Storage_GetPacker'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::Storage::GetPacker(OTDB::PackType)\n"
    "    OTDB::Storage::GetPacker()\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_Exists__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:Storage_Exists self strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_Exists" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_Exists" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_Exists" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_Exists" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_Exists" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->Exists(arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_Exists__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:Storage_Exists self strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_Exists" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_Exists" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_Exists" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_Exists" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->Exists(arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_Exists__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:Storage_Exists self strFolder oneStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_Exists" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_Exists" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_Exists" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->Exists(arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_Exists__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Storage_Exists self strFolder ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_Exists" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_Exists" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->Exists(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_Exists(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Storage_Exists__SWIG_3(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Storage_Exists__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Storage_Exists__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_Storage_Exists__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'Storage_Exists'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::Storage::Exists(std::string,std::string,std::string,std::string)\n"
    "    OTDB::Storage::Exists(std::string,std::string,std::string)\n"
    "    OTDB::Storage::Exists(std::string,std::string)\n"
    "    OTDB::Storage::Exists(std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_Storage(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_Storage self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Storage" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StoreString__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  std::string arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:Storage_StoreString self strContents strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StoreString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "6"" of type '" "std::string""'"); 
    }
    arg6 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StoreString(arg2,arg3,arg4,arg5,arg6);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StoreString__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:Storage_StoreString self strContents strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StoreString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StoreString(arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StoreString__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:Storage_StoreString self strContents strFolder oneStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StoreString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StoreString(arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StoreString__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:Storage_StoreString self strContents strFolder ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StoreString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StoreString(arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StoreString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Storage_StoreString__SWIG_3(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Storage_StoreString__SWIG_2(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_Storage_StoreString__SWIG_1(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_Storage_StoreString__SWIG_0(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'Storage_StoreString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::Storage::StoreString(std::string,std::string,std::string,std::string,std::string)\n"
    "    OTDB::Storage::StoreString(std::string,std::string,std::string,std::string)\n"
    "    OTDB::Storage::StoreString(std::string,std::string,std::string)\n"
    "    OTDB::Storage::StoreString(std::string,std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryString__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:Storage_QueryString self strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryString" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (arg1)->QueryString(arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryString__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:Storage_QueryString self strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (arg1)->QueryString(arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryString__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:Storage_QueryString self strFolder oneStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (arg1)->QueryString(arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryString__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Storage_QueryString self strFolder ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (arg1)->QueryString(arg2);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Storage_QueryString__SWIG_3(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Storage_QueryString__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Storage_QueryString__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_Storage_QueryString__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'Storage_QueryString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::Storage::QueryString(std::string,std::string,std::string,std::string)\n"
    "    OTDB::Storage::QueryString(std::string,std::string,std::string)\n"
    "    OTDB::Storage::QueryString(std::string,std::string)\n"
    "    OTDB::Storage::QueryString(std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StorePlainString__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  std::string arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:Storage_StorePlainString self strContents strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StorePlainString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "6"" of type '" "std::string""'"); 
    }
    arg6 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StorePlainString(arg2,arg3,arg4,arg5,arg6);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StorePlainString__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:Storage_StorePlainString self strContents strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StorePlainString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StorePlainString(arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StorePlainString__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:Storage_StorePlainString self strContents strFolder oneStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StorePlainString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StorePlainString(arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StorePlainString__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:Storage_StorePlainString self strContents strFolder ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StorePlainString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StorePlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StorePlainString(arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StorePlainString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Storage_StorePlainString__SWIG_3(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Storage_StorePlainString__SWIG_2(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_Storage_StorePlainString__SWIG_1(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_Storage_StorePlainString__SWIG_0(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'Storage_StorePlainString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::Storage::StorePlainString(std::string,std::string,std::string,std::string,std::string)\n"
    "    OTDB::Storage::StorePlainString(std::string,std::string,std::string,std::string)\n"
    "    OTDB::Storage::StorePlainString(std::string,std::string,std::string)\n"
    "    OTDB::Storage::StorePlainString(std::string,std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryPlainString__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:Storage_QueryPlainString self strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryPlainString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryPlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryPlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryPlainString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryPlainString" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (arg1)->QueryPlainString(arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryPlainString__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:Storage_QueryPlainString self strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryPlainString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryPlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryPlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryPlainString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (arg1)->QueryPlainString(arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryPlainString__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:Storage_QueryPlainString self strFolder oneStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryPlainString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryPlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryPlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (arg1)->QueryPlainString(arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryPlainString__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Storage_QueryPlainString self strFolder ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryPlainString" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryPlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (arg1)->QueryPlainString(arg2);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryPlainString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Storage_QueryPlainString__SWIG_3(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Storage_QueryPlainString__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Storage_QueryPlainString__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_Storage_QueryPlainString__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'Storage_QueryPlainString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::Storage::QueryPlainString(std::string,std::string,std::string,std::string)\n"
    "    OTDB::Storage::QueryPlainString(std::string,std::string,std::string)\n"
    "    OTDB::Storage::QueryPlainString(std::string,std::string)\n"
    "    OTDB::Storage::QueryPlainString(std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StoreObject__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::Storable *arg2 = 0 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  std::string arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:Storage_StoreObject self theContents strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StoreObject" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__Storable,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Storage_StoreObject" "', argument " "2"" of type '" "OTDB::Storable &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Storage_StoreObject" "', argument " "2"" of type '" "OTDB::Storable &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::Storable * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreObject" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreObject" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreObject" "', argument " "6"" of type '" "std::string""'"); 
    }
    arg6 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StoreObject(*arg2,arg3,arg4,arg5,arg6);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StoreObject__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::Storable *arg2 = 0 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:Storage_StoreObject self theContents strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StoreObject" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__Storable,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Storage_StoreObject" "', argument " "2"" of type '" "OTDB::Storable &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Storage_StoreObject" "', argument " "2"" of type '" "OTDB::Storable &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::Storable * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreObject" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreObject" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StoreObject(*arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StoreObject__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::Storable *arg2 = 0 ;
  std::string arg3 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:Storage_StoreObject self theContents strFolder oneStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StoreObject" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__Storable,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Storage_StoreObject" "', argument " "2"" of type '" "OTDB::Storable &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Storage_StoreObject" "', argument " "2"" of type '" "OTDB::Storable &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::Storable * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreObject" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StoreObject(*arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StoreObject__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::Storable *arg2 = 0 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:Storage_StoreObject self theContents strFolder ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_StoreObject" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__Storable,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Storage_StoreObject" "', argument " "2"" of type '" "OTDB::Storable &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Storage_StoreObject" "', argument " "2"" of type '" "OTDB::Storable &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::Storable * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_StoreObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->StoreObject(*arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_StoreObject(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_OTDB__Storable, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Storage_StoreObject__SWIG_3(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_OTDB__Storable, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Storage_StoreObject__SWIG_2(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_OTDB__Storable, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_Storage_StoreObject__SWIG_1(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_OTDB__Storable, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_Storage_StoreObject__SWIG_0(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'Storage_StoreObject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::Storage::StoreObject(OTDB::Storable &,std::string,std::string,std::string,std::string)\n"
    "    OTDB::Storage::StoreObject(OTDB::Storable &,std::string,std::string,std::string)\n"
    "    OTDB::Storage::StoreObject(OTDB::Storable &,std::string,std::string)\n"
    "    OTDB::Storage::StoreObject(OTDB::Storable &,std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryObject__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::StoredObjectType arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  std::string arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:Storage_QueryObject self theObjectType strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryObject" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Storage_QueryObject" "', argument " "2"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg2 = static_cast< OTDB::StoredObjectType >(val2);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryObject" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryObject" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryObject" "', argument " "6"" of type '" "std::string""'"); 
    }
    arg6 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (OTDB::Storable *)(arg1)->QueryObject(arg2,arg3,arg4,arg5,arg6);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryObject__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::StoredObjectType arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:Storage_QueryObject self theObjectType strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryObject" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Storage_QueryObject" "', argument " "2"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg2 = static_cast< OTDB::StoredObjectType >(val2);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryObject" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryObject" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (OTDB::Storable *)(arg1)->QueryObject(arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryObject__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::StoredObjectType arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:Storage_QueryObject self theObjectType strFolder oneStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryObject" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Storage_QueryObject" "', argument " "2"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg2 = static_cast< OTDB::StoredObjectType >(val2);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryObject" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (OTDB::Storable *)(arg1)->QueryObject(arg2,arg3,arg4);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryObject__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::StoredObjectType arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:Storage_QueryObject self theObjectType strFolder ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_QueryObject" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Storage_QueryObject" "', argument " "2"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg2 = static_cast< OTDB::StoredObjectType >(val2);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_QueryObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (OTDB::Storable *)(arg1)->QueryObject(arg2,arg3);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_QueryObject(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Storage_QueryObject__SWIG_3(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Storage_QueryObject__SWIG_2(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_Storage_QueryObject__SWIG_1(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_Storage_QueryObject__SWIG_0(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'Storage_QueryObject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::Storage::QueryObject(OTDB::StoredObjectType,std::string,std::string,std::string,std::string)\n"
    "    OTDB::Storage::QueryObject(OTDB::StoredObjectType,std::string,std::string,std::string)\n"
    "    OTDB::Storage::QueryObject(OTDB::StoredObjectType,std::string,std::string)\n"
    "    OTDB::Storage::QueryObject(OTDB::StoredObjectType,std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_EncodeObject(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::Storable *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Storage_EncodeObject self theContents ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_EncodeObject" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__Storable,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Storage_EncodeObject" "', argument " "2"" of type '" "OTDB::Storable &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Storage_EncodeObject" "', argument " "2"" of type '" "OTDB::Storable &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::Storable * >(argp2);
  result = (arg1)->EncodeObject(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_DecodeObject(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::StoredObjectType arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:Storage_DecodeObject self theObjectType strInput ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_DecodeObject" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Storage_DecodeObject" "', argument " "2"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg2 = static_cast< OTDB::StoredObjectType >(val2);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_DecodeObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (OTDB::Storable *)(arg1)->DecodeObject(arg2,arg3);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_EraseValueByKey__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:Storage_EraseValueByKey self strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_EraseValueByKey" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_EraseValueByKey" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_EraseValueByKey" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_EraseValueByKey" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_EraseValueByKey" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->EraseValueByKey(arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_EraseValueByKey__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:Storage_EraseValueByKey self strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_EraseValueByKey" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_EraseValueByKey" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_EraseValueByKey" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_EraseValueByKey" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->EraseValueByKey(arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_EraseValueByKey__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:Storage_EraseValueByKey self strFolder oneStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_EraseValueByKey" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_EraseValueByKey" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_EraseValueByKey" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->EraseValueByKey(arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_EraseValueByKey__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Storage_EraseValueByKey self strFolder ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_EraseValueByKey" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Storage_EraseValueByKey" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)(arg1)->EraseValueByKey(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_EraseValueByKey(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Storage_EraseValueByKey__SWIG_3(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Storage_EraseValueByKey__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Storage_EraseValueByKey__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_Storage_EraseValueByKey__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'Storage_EraseValueByKey'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::Storage::EraseValueByKey(std::string,std::string,std::string,std::string)\n"
    "    OTDB::Storage::EraseValueByKey(std::string,std::string,std::string)\n"
    "    OTDB::Storage::EraseValueByKey(std::string,std::string)\n"
    "    OTDB::Storage::EraseValueByKey(std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_CreateObject(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  OTDB::StoredObjectType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Storage_CreateObject self eType ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_CreateObject" "', argument " "1"" of type '" "OTDB::Storage *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Storage_CreateObject" "', argument " "2"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg2 = static_cast< OTDB::StoredObjectType >(val2);
  result = (OTDB::Storable *)(arg1)->CreateObject(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_Create(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StorageType arg1 ;
  OTDB::PackType arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  OTDB::Storage *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Storage_Create eStorageType ePackType ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Storage_Create" "', argument " "1"" of type '" "OTDB::StorageType""'");
  } 
  arg1 = static_cast< OTDB::StorageType >(val1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Storage_Create" "', argument " "2"" of type '" "OTDB::PackType""'");
  } 
  arg2 = static_cast< OTDB::PackType >(val2);
  result = (OTDB::Storage *)OTDB::Storage::Create(arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storage,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Storage_GetType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *arg1 = (OTDB::Storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::StorageType result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Storage_GetType self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Storage_GetType" "', argument " "1"" of type '" "OTDB::Storage const *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storage * >(argp1);
  result = (OTDB::StorageType)((OTDB::Storage const *)arg1)->GetType();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_Storage(void *obj) {
OTDB::Storage *arg1 = (OTDB::Storage *) obj;
delete arg1;
}
static swig_method swig_OTDB_Storage_methods[] = {
    {"GetPacker", _wrap_Storage_GetPacker}, 
    {"Exists", _wrap_Storage_Exists}, 
    {"StoreString", _wrap_Storage_StoreString}, 
    {"QueryString", _wrap_Storage_QueryString}, 
    {"StorePlainString", _wrap_Storage_StorePlainString}, 
    {"QueryPlainString", _wrap_Storage_QueryPlainString}, 
    {"StoreObject", _wrap_Storage_StoreObject}, 
    {"QueryObject", _wrap_Storage_QueryObject}, 
    {"EncodeObject", _wrap_Storage_EncodeObject}, 
    {"DecodeObject", _wrap_Storage_DecodeObject}, 
    {"EraseValueByKey", _wrap_Storage_EraseValueByKey}, 
    {"CreateObject", _wrap_Storage_CreateObject}, 
    {"GetType", _wrap_Storage_GetType}, 
    {0,0}
};
static swig_attribute swig_OTDB_Storage_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTDB_Storage_bases[] = {0};
static const char * swig_OTDB_Storage_base_names[] = {0};
static swig_class _wrap_class_OTDB_Storage = { "Storage", &SWIGTYPE_p_OTDB__Storage,0, swig_delete_Storage, swig_OTDB_Storage_methods, swig_OTDB_Storage_attributes, swig_OTDB_Storage_bases,swig_OTDB_Storage_base_names, &swig_module };
SWIGINTERN int
_wrap_InitDefaultStorage(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StorageType arg1 ;
  OTDB::PackType arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:InitDefaultStorage eStoreType ePackType ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "InitDefaultStorage" "', argument " "1"" of type '" "OTDB::StorageType""'");
  } 
  arg1 = static_cast< OTDB::StorageType >(val1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InitDefaultStorage" "', argument " "2"" of type '" "OTDB::PackType""'");
  } 
  arg2 = static_cast< OTDB::PackType >(val2);
  result = (bool)OTDB::InitDefaultStorage(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_GetDefaultStorage(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storage *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":GetDefaultStorage ") == TCL_ERROR) SWIG_fail;
  result = (OTDB::Storage *)OTDB::GetDefaultStorage();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storage,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_CreateStorageContext__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StorageType arg1 ;
  OTDB::PackType arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  OTDB::Storage *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:CreateStorageContext eStoreType ePackType ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CreateStorageContext" "', argument " "1"" of type '" "OTDB::StorageType""'");
  } 
  arg1 = static_cast< OTDB::StorageType >(val1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CreateStorageContext" "', argument " "2"" of type '" "OTDB::PackType""'");
  } 
  arg2 = static_cast< OTDB::PackType >(val2);
  result = (OTDB::Storage *)OTDB::CreateStorageContext(arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storage,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_CreateStorageContext__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StorageType arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  OTDB::Storage *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:CreateStorageContext eStoreType ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CreateStorageContext" "', argument " "1"" of type '" "OTDB::StorageType""'");
  } 
  arg1 = static_cast< OTDB::StorageType >(val1);
  result = (OTDB::Storage *)OTDB::CreateStorageContext(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storage,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_CreateStorageContext(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_CreateStorageContext__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CreateStorageContext__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'CreateStorageContext'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::CreateStorageContext(OTDB::StorageType,OTDB::PackType)\n"
    "    OTDB::CreateStorageContext(OTDB::StorageType)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_CreateObject(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StoredObjectType arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:CreateObject eType ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CreateObject" "', argument " "1"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg1 = static_cast< OTDB::StoredObjectType >(val1);
  result = (OTDB::Storable *)OTDB::CreateObject(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Exists__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:Exists strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Exists" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Exists" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Exists" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Exists" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::Exists(arg1,arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Exists__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:Exists strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Exists" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Exists" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Exists" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::Exists(arg1,arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Exists__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Exists strFolder oneStr ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Exists" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Exists" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::Exists(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Exists__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Exists strFolder ",(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Exists" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::Exists(arg1);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Exists(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Exists__SWIG_3(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Exists__SWIG_2(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Exists__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Exists__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'Exists'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::Exists(std::string,std::string,std::string,std::string)\n"
    "    OTDB::Exists(std::string,std::string,std::string)\n"
    "    OTDB::Exists(std::string,std::string)\n"
    "    OTDB::Exists(std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StoreString__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:StoreString strContents strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StoreString(arg1,arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StoreString__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:StoreString strContents strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StoreString(arg1,arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StoreString__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:StoreString strContents strFolder oneStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StoreString(arg1,arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StoreString__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:StoreString strContents strFolder ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StoreString(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StoreString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StoreString__SWIG_3(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_StoreString__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_StoreString__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_StoreString__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'StoreString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::StoreString(std::string,std::string,std::string,std::string,std::string)\n"
    "    OTDB::StoreString(std::string,std::string,std::string,std::string)\n"
    "    OTDB::StoreString(std::string,std::string,std::string)\n"
    "    OTDB::StoreString(std::string,std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryString__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:QueryString strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = OTDB::QueryString(arg1,arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryString__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:QueryString strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = OTDB::QueryString(arg1,arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryString__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:QueryString strFolder oneStr ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = OTDB::QueryString(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryString__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:QueryString strFolder ",(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = OTDB::QueryString(arg1);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_QueryString__SWIG_3(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_QueryString__SWIG_2(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_QueryString__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_QueryString__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'QueryString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::QueryString(std::string,std::string,std::string,std::string)\n"
    "    OTDB::QueryString(std::string,std::string,std::string)\n"
    "    OTDB::QueryString(std::string,std::string)\n"
    "    OTDB::QueryString(std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StorePlainString__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:StorePlainString strContents strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StorePlainString(arg1,arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StorePlainString__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:StorePlainString strContents strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StorePlainString(arg1,arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StorePlainString__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:StorePlainString strContents strFolder oneStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StorePlainString(arg1,arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StorePlainString__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:StorePlainString strContents strFolder ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StorePlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StorePlainString(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StorePlainString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StorePlainString__SWIG_3(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_StorePlainString__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_StorePlainString__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_StorePlainString__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'StorePlainString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::StorePlainString(std::string,std::string,std::string,std::string,std::string)\n"
    "    OTDB::StorePlainString(std::string,std::string,std::string,std::string)\n"
    "    OTDB::StorePlainString(std::string,std::string,std::string)\n"
    "    OTDB::StorePlainString(std::string,std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryPlainString__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:QueryPlainString strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryPlainString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryPlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryPlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryPlainString" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = OTDB::QueryPlainString(arg1,arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryPlainString__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:QueryPlainString strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryPlainString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryPlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryPlainString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = OTDB::QueryPlainString(arg1,arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryPlainString__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:QueryPlainString strFolder oneStr ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryPlainString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryPlainString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = OTDB::QueryPlainString(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryPlainString__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:QueryPlainString strFolder ",(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryPlainString" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = OTDB::QueryPlainString(arg1);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryPlainString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_QueryPlainString__SWIG_3(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_QueryPlainString__SWIG_2(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_QueryPlainString__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_QueryPlainString__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'QueryPlainString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::QueryPlainString(std::string,std::string,std::string,std::string)\n"
    "    OTDB::QueryPlainString(std::string,std::string,std::string)\n"
    "    OTDB::QueryPlainString(std::string,std::string)\n"
    "    OTDB::QueryPlainString(std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StoreObject__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:StoreObject theContents strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_OTDB__Storable,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StoreObject" "', argument " "1"" of type '" "OTDB::Storable &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StoreObject" "', argument " "1"" of type '" "OTDB::Storable &""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreObject" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreObject" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreObject" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StoreObject(*arg1,arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StoreObject__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = 0 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:StoreObject theContents strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_OTDB__Storable,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StoreObject" "', argument " "1"" of type '" "OTDB::Storable &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StoreObject" "', argument " "1"" of type '" "OTDB::Storable &""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreObject" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreObject" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StoreObject(*arg1,arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StoreObject__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:StoreObject theContents strFolder oneStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_OTDB__Storable,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StoreObject" "', argument " "1"" of type '" "OTDB::Storable &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StoreObject" "', argument " "1"" of type '" "OTDB::Storable &""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreObject" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StoreObject(*arg1,arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StoreObject__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:StoreObject theContents strFolder ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_OTDB__Storable,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StoreObject" "', argument " "1"" of type '" "OTDB::Storable &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StoreObject" "', argument " "1"" of type '" "OTDB::Storable &""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StoreObject" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::StoreObject(*arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StoreObject(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StoreObject__SWIG_3(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_StoreObject__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_StoreObject__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_OTDB__Storable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_StoreObject__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'StoreObject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::StoreObject(OTDB::Storable &,std::string,std::string,std::string,std::string)\n"
    "    OTDB::StoreObject(OTDB::Storable &,std::string,std::string,std::string)\n"
    "    OTDB::StoreObject(OTDB::Storable &,std::string,std::string)\n"
    "    OTDB::StoreObject(OTDB::Storable &,std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryObject__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StoredObjectType arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::string arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:QueryObject theObjectType strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "QueryObject" "', argument " "1"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg1 = static_cast< OTDB::StoredObjectType >(val1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryObject" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryObject" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryObject" "', argument " "5"" of type '" "std::string""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (OTDB::Storable *)OTDB::QueryObject(arg1,arg2,arg3,arg4,arg5);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryObject__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StoredObjectType arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:QueryObject theObjectType strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "QueryObject" "', argument " "1"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg1 = static_cast< OTDB::StoredObjectType >(val1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryObject" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryObject" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (OTDB::Storable *)OTDB::QueryObject(arg1,arg2,arg3,arg4);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryObject__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StoredObjectType arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:QueryObject theObjectType strFolder oneStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "QueryObject" "', argument " "1"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg1 = static_cast< OTDB::StoredObjectType >(val1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryObject" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryObject" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (OTDB::Storable *)OTDB::QueryObject(arg1,arg2,arg3);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryObject__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StoredObjectType arg1 ;
  std::string arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:QueryObject theObjectType strFolder ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "QueryObject" "', argument " "1"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg1 = static_cast< OTDB::StoredObjectType >(val1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "QueryObject" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (OTDB::Storable *)OTDB::QueryObject(arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_QueryObject(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_QueryObject__SWIG_3(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_QueryObject__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_QueryObject__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_QueryObject__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'QueryObject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::QueryObject(OTDB::StoredObjectType,std::string,std::string,std::string,std::string)\n"
    "    OTDB::QueryObject(OTDB::StoredObjectType,std::string,std::string,std::string)\n"
    "    OTDB::QueryObject(OTDB::StoredObjectType,std::string,std::string)\n"
    "    OTDB::QueryObject(OTDB::StoredObjectType,std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_EncodeObject(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:EncodeObject theContents ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_OTDB__Storable,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EncodeObject" "', argument " "1"" of type '" "OTDB::Storable &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EncodeObject" "', argument " "1"" of type '" "OTDB::Storable &""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = OTDB::EncodeObject(*arg1);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_DecodeObject(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StoredObjectType arg1 ;
  std::string arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  OTDB::Storable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:DecodeObject theObjectType strInput ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DecodeObject" "', argument " "1"" of type '" "OTDB::StoredObjectType""'");
  } 
  arg1 = static_cast< OTDB::StoredObjectType >(val1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "DecodeObject" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (OTDB::Storable *)OTDB::DecodeObject(arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Storable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_EraseValueByKey__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:EraseValueByKey strFolder oneStr twoStr threeStr ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "EraseValueByKey" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "EraseValueByKey" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "EraseValueByKey" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "EraseValueByKey" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::EraseValueByKey(arg1,arg2,arg3,arg4);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_EraseValueByKey__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:EraseValueByKey strFolder oneStr twoStr ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "EraseValueByKey" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "EraseValueByKey" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "EraseValueByKey" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::EraseValueByKey(arg1,arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_EraseValueByKey__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  std::string arg2 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:EraseValueByKey strFolder oneStr ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "EraseValueByKey" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "EraseValueByKey" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::EraseValueByKey(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_EraseValueByKey__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string arg1 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:EraseValueByKey strFolder ",(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "EraseValueByKey" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (bool)OTDB::EraseValueByKey(arg1);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_EraseValueByKey(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EraseValueByKey__SWIG_3(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_EraseValueByKey__SWIG_2(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_EraseValueByKey__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_EraseValueByKey__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "Wrong number or type of arguments for overloaded function 'EraseValueByKey'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OTDB::EraseValueByKey(std::string,std::string,std::string,std::string)\n"
    "    OTDB::EraseValueByKey(std::string,std::string,std::string)\n"
    "    OTDB::EraseValueByKey(std::string,std::string)\n"
    "    OTDB::EraseValueByKey(std::string)\n", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_OTDBString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OTDBString *arg1 = (OTDB::OTDBString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_OTDBString self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OTDBString, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OTDBString" "', argument " "1"" of type '" "OTDB::OTDBString *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OTDBString * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTDBString_m_string_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OTDBString *arg1 = (OTDB::OTDBString *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OTDBString_m_string_set self m_string ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OTDBString, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTDBString_m_string_set" "', argument " "1"" of type '" "OTDB::OTDBString *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OTDBString * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OTDBString_m_string_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OTDBString_m_string_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->m_string = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTDBString_m_string_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OTDBString *arg1 = (OTDB::OTDBString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTDBString_m_string_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OTDBString, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTDBString_m_string_get" "', argument " "1"" of type '" "OTDB::OTDBString *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OTDBString * >(argp1);
  result = (std::string *) & ((arg1)->m_string);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OTDBString_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::OTDBString *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OTDBString_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OTDBString_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::OTDBString *)OTDB::OTDBString::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__OTDBString,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_OTDBString(void *obj) {
OTDB::OTDBString *arg1 = (OTDB::OTDBString *) obj;
delete arg1;
}
static swig_method swig_OTDB_OTDBString_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_OTDBString_attributes[] = {
    { "-m_string",_wrap_OTDBString_m_string_get, _wrap_OTDBString_m_string_set},
    {0,0,0}
};
static swig_class *swig_OTDB_OTDBString_bases[] = {0,0};
static const char * swig_OTDB_OTDBString_base_names[] = {"OTDB::Storable *",0};
static swig_class _wrap_class_OTDB_OTDBString = { "OTDBString", &SWIGTYPE_p_OTDB__OTDBString,0, swig_delete_OTDBString, swig_OTDB_OTDBString_methods, swig_OTDB_OTDBString_attributes, swig_OTDB_OTDBString_bases,swig_OTDB_OTDBString_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_Blob(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Blob *arg1 = (OTDB::Blob *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_Blob self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Blob, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Blob" "', argument " "1"" of type '" "OTDB::Blob *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Blob * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Blob_m_memBuffer_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Blob *arg1 = (OTDB::Blob *) 0 ;
  std::vector< unsigned char > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Blob_m_memBuffer_set self m_memBuffer ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Blob, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blob_m_memBuffer_set" "', argument " "1"" of type '" "OTDB::Blob *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Blob * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_std__vectorT_unsigned_char_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Blob_m_memBuffer_set" "', argument " "2"" of type '" "std::vector< unsigned char >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Blob_m_memBuffer_set" "', argument " "2"" of type '" "std::vector< unsigned char >""'");
    } else {
      arg2 = *(reinterpret_cast< std::vector< unsigned char > * >(argp2));
    }
  }
  if (arg1) (arg1)->m_memBuffer = arg2;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Blob_m_memBuffer_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Blob *arg1 = (OTDB::Blob *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< unsigned char > result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Blob_m_memBuffer_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Blob, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blob_m_memBuffer_get" "', argument " "1"" of type '" "OTDB::Blob *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Blob * >(argp1);
  result =  ((arg1)->m_memBuffer);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new std::vector< unsigned char >(static_cast< const std::vector< unsigned char >& >(result))), SWIGTYPE_p_std__vectorT_unsigned_char_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Blob_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::Blob *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Blob_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blob_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::Blob *)OTDB::Blob::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Blob,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_Blob(void *obj) {
OTDB::Blob *arg1 = (OTDB::Blob *) obj;
delete arg1;
}
static swig_method swig_OTDB_Blob_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_Blob_attributes[] = {
    { "-m_memBuffer",_wrap_Blob_m_memBuffer_get, _wrap_Blob_m_memBuffer_set},
    {0,0,0}
};
static swig_class *swig_OTDB_Blob_bases[] = {0,0};
static const char * swig_OTDB_Blob_base_names[] = {"OTDB::Storable *",0};
static swig_class _wrap_class_OTDB_Blob = { "Blob", &SWIGTYPE_p_OTDB__Blob,0, swig_delete_Blob, swig_OTDB_Blob_methods, swig_OTDB_Blob_attributes, swig_OTDB_Blob_bases,swig_OTDB_Blob_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_StringMap(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StringMap *arg1 = (OTDB::StringMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_StringMap self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__StringMap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StringMap" "', argument " "1"" of type '" "OTDB::StringMap *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::StringMap * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StringMap_the_map_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StringMap *arg1 = (OTDB::StringMap *) 0 ;
  std::map< std::string,std::string > *arg2 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:StringMap_the_map_set self the_map ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__StringMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringMap_the_map_set" "', argument " "1"" of type '" "OTDB::StringMap *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::StringMap * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_std__mapT_std__string_std__string_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringMap_the_map_set" "', argument " "2"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg2 = reinterpret_cast< std::map< std::string,std::string > * >(argp2);
  if (arg1) (arg1)->the_map = *arg2;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StringMap_the_map_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StringMap *arg1 = (OTDB::StringMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::map< std::string,std::string > *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:StringMap_the_map_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__StringMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringMap_the_map_get" "', argument " "1"" of type '" "OTDB::StringMap *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::StringMap * >(argp1);
  result = (std::map< std::string,std::string > *)& ((arg1)->the_map);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_std__string_std__string_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StringMap_SetValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StringMap *arg1 = (OTDB::StringMap *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:StringMap_SetValue self strKey strValue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__StringMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringMap_SetValue" "', argument " "1"" of type '" "OTDB::StringMap *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::StringMap * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringMap_SetValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringMap_SetValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "StringMap_SetValue" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringMap_SetValue" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->SetValue((std::string const &)*arg2,(std::string const &)*arg3);
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StringMap_GetValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::StringMap *arg1 = (OTDB::StringMap *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:StringMap_GetValue self strKey ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__StringMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringMap_GetValue" "', argument " "1"" of type '" "OTDB::StringMap *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::StringMap * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringMap_GetValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringMap_GetValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->GetValue((std::string const &)*arg2);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_StringMap_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::StringMap *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:StringMap_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringMap_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::StringMap *)OTDB::StringMap::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__StringMap,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_StringMap(void *obj) {
OTDB::StringMap *arg1 = (OTDB::StringMap *) obj;
delete arg1;
}
static swig_method swig_OTDB_StringMap_methods[] = {
    {"SetValue", _wrap_StringMap_SetValue}, 
    {"GetValue", _wrap_StringMap_GetValue}, 
    {0,0}
};
static swig_attribute swig_OTDB_StringMap_attributes[] = {
    { "-the_map",_wrap_StringMap_the_map_get, _wrap_StringMap_the_map_set},
    {0,0,0}
};
static swig_class *swig_OTDB_StringMap_bases[] = {0,0};
static const char * swig_OTDB_StringMap_base_names[] = {"OTDB::Storable *",0};
static swig_class _wrap_class_OTDB_StringMap = { "StringMap", &SWIGTYPE_p_OTDB__StringMap,0, swig_delete_StringMap, swig_OTDB_StringMap_methods, swig_OTDB_StringMap_attributes, swig_OTDB_StringMap_bases,swig_OTDB_StringMap_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_Displayable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Displayable *arg1 = (OTDB::Displayable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_Displayable self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Displayable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Displayable" "', argument " "1"" of type '" "OTDB::Displayable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Displayable * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Displayable_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Displayable *arg1 = (OTDB::Displayable *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Displayable_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Displayable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Displayable_gui_label_set" "', argument " "1"" of type '" "OTDB::Displayable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Displayable * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Displayable_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Displayable_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Displayable_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Displayable *arg1 = (OTDB::Displayable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Displayable_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Displayable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Displayable_gui_label_get" "', argument " "1"" of type '" "OTDB::Displayable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Displayable * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Displayable_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::Displayable *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Displayable_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Displayable_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::Displayable *)OTDB::Displayable::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Displayable,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_Displayable(void *obj) {
OTDB::Displayable *arg1 = (OTDB::Displayable *) obj;
delete arg1;
}
static swig_method swig_OTDB_Displayable_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_Displayable_attributes[] = {
    { "-gui_label",_wrap_Displayable_gui_label_get, _wrap_Displayable_gui_label_set},
    {0,0,0}
};
static swig_class *swig_OTDB_Displayable_bases[] = {0,0};
static const char * swig_OTDB_Displayable_base_names[] = {"OTDB::Storable *",0};
static swig_class _wrap_class_OTDB_Displayable = { "Displayable", &SWIGTYPE_p_OTDB__Displayable,0, swig_delete_Displayable, swig_OTDB_Displayable_methods, swig_OTDB_Displayable_attributes, swig_OTDB_Displayable_bases,swig_OTDB_Displayable_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_MarketData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_MarketData self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MarketData" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_gui_label_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_gui_label_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_server_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_server_id_set self server_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_server_id_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_server_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_server_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_server_id_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->server_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_market_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_market_id_set self market_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_market_id_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_market_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_market_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->market_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_market_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_market_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_market_id_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->market_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_asset_type_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_asset_type_id_set self asset_type_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_asset_type_id_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_asset_type_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_asset_type_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->asset_type_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_asset_type_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_asset_type_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_asset_type_id_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->asset_type_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_currency_type_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_currency_type_id_set self currency_type_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_currency_type_id_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_currency_type_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_currency_type_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->currency_type_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_currency_type_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_currency_type_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_currency_type_id_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->currency_type_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_scale_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_scale_set self scale ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_scale_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->scale = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_scale_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_scale_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_scale_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->scale);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_total_assets_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_total_assets_set self total_assets ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_total_assets_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_total_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_total_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->total_assets = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_total_assets_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_total_assets_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_total_assets_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->total_assets);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_number_bids_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_number_bids_set self number_bids ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_number_bids_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_number_bids_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_number_bids_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->number_bids = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_number_bids_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_number_bids_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_number_bids_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->number_bids);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_number_asks_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_number_asks_set self number_asks ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_number_asks_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_number_asks_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_number_asks_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->number_asks = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_number_asks_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_number_asks_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_number_asks_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->number_asks);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_last_sale_price_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_last_sale_price_set self last_sale_price ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_last_sale_price_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_last_sale_price_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_last_sale_price_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->last_sale_price = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_last_sale_price_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_last_sale_price_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_last_sale_price_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->last_sale_price);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_current_bid_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_current_bid_set self current_bid ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_current_bid_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_current_bid_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_current_bid_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->current_bid = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_current_bid_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_current_bid_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_current_bid_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->current_bid);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_current_ask_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_current_ask_set self current_ask ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_current_ask_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_current_ask_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_current_ask_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->current_ask = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_current_ask_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_current_ask_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_current_ask_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->current_ask);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_volume_trades_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_volume_trades_set self volume_trades ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_volume_trades_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_volume_trades_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_volume_trades_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->volume_trades = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_volume_trades_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_volume_trades_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_volume_trades_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->volume_trades);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_volume_assets_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_volume_assets_set self volume_assets ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_volume_assets_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_volume_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_volume_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->volume_assets = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_volume_assets_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_volume_assets_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_volume_assets_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->volume_assets);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_volume_currency_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_volume_currency_set self volume_currency ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_volume_currency_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_volume_currency_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_volume_currency_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->volume_currency = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_volume_currency_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_volume_currency_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_volume_currency_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->volume_currency);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_recent_highest_bid_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_recent_highest_bid_set self recent_highest_bid ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_recent_highest_bid_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_recent_highest_bid_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_recent_highest_bid_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->recent_highest_bid = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_recent_highest_bid_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_recent_highest_bid_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_recent_highest_bid_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->recent_highest_bid);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_recent_lowest_ask_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketData_recent_lowest_ask_set self recent_lowest_ask ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_recent_lowest_ask_set" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketData_recent_lowest_ask_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketData_recent_lowest_ask_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->recent_lowest_ask = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_recent_lowest_ask_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketData *arg1 = (OTDB::MarketData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_recent_lowest_ask_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_recent_lowest_ask_get" "', argument " "1"" of type '" "OTDB::MarketData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketData * >(argp1);
  result = (std::string *) & ((arg1)->recent_lowest_ask);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketData_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::MarketData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketData_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketData_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::MarketData *)OTDB::MarketData::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__MarketData,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_MarketData(void *obj) {
OTDB::MarketData *arg1 = (OTDB::MarketData *) obj;
delete arg1;
}
static swig_method swig_OTDB_MarketData_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_MarketData_attributes[] = {
    { "-gui_label",_wrap_MarketData_gui_label_get, _wrap_MarketData_gui_label_set},
    { "-server_id",_wrap_MarketData_server_id_get, _wrap_MarketData_server_id_set},
    { "-market_id",_wrap_MarketData_market_id_get, _wrap_MarketData_market_id_set},
    { "-asset_type_id",_wrap_MarketData_asset_type_id_get, _wrap_MarketData_asset_type_id_set},
    { "-currency_type_id",_wrap_MarketData_currency_type_id_get, _wrap_MarketData_currency_type_id_set},
    { "-scale",_wrap_MarketData_scale_get, _wrap_MarketData_scale_set},
    { "-total_assets",_wrap_MarketData_total_assets_get, _wrap_MarketData_total_assets_set},
    { "-number_bids",_wrap_MarketData_number_bids_get, _wrap_MarketData_number_bids_set},
    { "-number_asks",_wrap_MarketData_number_asks_get, _wrap_MarketData_number_asks_set},
    { "-last_sale_price",_wrap_MarketData_last_sale_price_get, _wrap_MarketData_last_sale_price_set},
    { "-current_bid",_wrap_MarketData_current_bid_get, _wrap_MarketData_current_bid_set},
    { "-current_ask",_wrap_MarketData_current_ask_get, _wrap_MarketData_current_ask_set},
    { "-volume_trades",_wrap_MarketData_volume_trades_get, _wrap_MarketData_volume_trades_set},
    { "-volume_assets",_wrap_MarketData_volume_assets_get, _wrap_MarketData_volume_assets_set},
    { "-volume_currency",_wrap_MarketData_volume_currency_get, _wrap_MarketData_volume_currency_set},
    { "-recent_highest_bid",_wrap_MarketData_recent_highest_bid_get, _wrap_MarketData_recent_highest_bid_set},
    { "-recent_lowest_ask",_wrap_MarketData_recent_lowest_ask_get, _wrap_MarketData_recent_lowest_ask_set},
    {0,0,0}
};
static swig_class *swig_OTDB_MarketData_bases[] = {0,0};
static const char * swig_OTDB_MarketData_base_names[] = {"OTDB::Displayable *",0};
static swig_class _wrap_class_OTDB_MarketData = { "MarketData", &SWIGTYPE_p_OTDB__MarketData,0, swig_delete_MarketData, swig_OTDB_MarketData_methods, swig_OTDB_MarketData_attributes, swig_OTDB_MarketData_bases,swig_OTDB_MarketData_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_MarketList(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketList *arg1 = (OTDB::MarketList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_MarketList self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketList, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MarketList" "', argument " "1"" of type '" "OTDB::MarketList *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketList * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketList_GetMarketDataCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketList *arg1 = (OTDB::MarketList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketList_GetMarketDataCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketList_GetMarketDataCount" "', argument " "1"" of type '" "OTDB::MarketList *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketList * >(argp1);
  result = (arg1)->GetMarketDataCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketList_GetMarketData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketList *arg1 = (OTDB::MarketList *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::MarketData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketList_GetMarketData self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketList_GetMarketData" "', argument " "1"" of type '" "OTDB::MarketList *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketList * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MarketList_GetMarketData" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::MarketData *)(arg1)->GetMarketData(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__MarketData,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketList_RemoveMarketData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketList *arg1 = (OTDB::MarketList *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketList_RemoveMarketData self nIndexMarketData ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketList_RemoveMarketData" "', argument " "1"" of type '" "OTDB::MarketList *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketList * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MarketList_RemoveMarketData" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveMarketData(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketList_AddMarketData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::MarketList *arg1 = (OTDB::MarketList *) 0 ;
  OTDB::MarketData *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:MarketList_AddMarketData self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__MarketList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketList_AddMarketData" "', argument " "1"" of type '" "OTDB::MarketList *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::MarketList * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__MarketData,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MarketList_AddMarketData" "', argument " "2"" of type '" "OTDB::MarketData &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MarketList_AddMarketData" "', argument " "2"" of type '" "OTDB::MarketData &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::MarketData * >(argp2);
  result = (bool)(arg1)->AddMarketData(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_MarketList_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::MarketList *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:MarketList_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MarketList_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::MarketList *)OTDB::MarketList::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__MarketList,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_MarketList(void *obj) {
OTDB::MarketList *arg1 = (OTDB::MarketList *) obj;
delete arg1;
}
static swig_method swig_OTDB_MarketList_methods[] = {
    {"GetMarketDataCount", _wrap_MarketList_GetMarketDataCount}, 
    {"GetMarketData", _wrap_MarketList_GetMarketData}, 
    {"RemoveMarketData", _wrap_MarketList_RemoveMarketData}, 
    {"AddMarketData", _wrap_MarketList_AddMarketData}, 
    {0,0}
};
static swig_attribute swig_OTDB_MarketList_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTDB_MarketList_bases[] = {0,0};
static const char * swig_OTDB_MarketList_base_names[] = {"OTDB::Storable *",0};
static swig_class _wrap_class_OTDB_MarketList = { "MarketList", &SWIGTYPE_p_OTDB__MarketList,0, swig_delete_MarketList, swig_OTDB_MarketList_methods, swig_OTDB_MarketList_attributes, swig_OTDB_MarketList_bases,swig_OTDB_MarketList_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_OfferDataMarket(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_OfferDataMarket self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataMarket, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OfferDataMarket" "', argument " "1"" of type '" "OTDB::OfferDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataMarket * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataMarket_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataMarket_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataMarket_gui_label_set" "', argument " "1"" of type '" "OTDB::OfferDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataMarket * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataMarket_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataMarket_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataMarket_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataMarket_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataMarket_gui_label_get" "', argument " "1"" of type '" "OTDB::OfferDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataMarket * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataMarket_transaction_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataMarket_transaction_id_set self transaction_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataMarket_transaction_id_set" "', argument " "1"" of type '" "OTDB::OfferDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataMarket * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataMarket_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataMarket_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->transaction_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataMarket_transaction_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataMarket_transaction_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataMarket_transaction_id_get" "', argument " "1"" of type '" "OTDB::OfferDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataMarket * >(argp1);
  result = (std::string *) & ((arg1)->transaction_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataMarket_price_per_scale_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataMarket_price_per_scale_set self price_per_scale ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataMarket_price_per_scale_set" "', argument " "1"" of type '" "OTDB::OfferDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataMarket * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataMarket_price_per_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataMarket_price_per_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->price_per_scale = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataMarket_price_per_scale_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataMarket_price_per_scale_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataMarket_price_per_scale_get" "', argument " "1"" of type '" "OTDB::OfferDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataMarket * >(argp1);
  result = (std::string *) & ((arg1)->price_per_scale);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataMarket_available_assets_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataMarket_available_assets_set self available_assets ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataMarket_available_assets_set" "', argument " "1"" of type '" "OTDB::OfferDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataMarket * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataMarket_available_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataMarket_available_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->available_assets = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataMarket_available_assets_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataMarket_available_assets_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataMarket_available_assets_get" "', argument " "1"" of type '" "OTDB::OfferDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataMarket * >(argp1);
  result = (std::string *) & ((arg1)->available_assets);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataMarket_minimum_increment_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataMarket_minimum_increment_set self minimum_increment ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataMarket_minimum_increment_set" "', argument " "1"" of type '" "OTDB::OfferDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataMarket * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataMarket_minimum_increment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataMarket_minimum_increment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->minimum_increment = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataMarket_minimum_increment_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataMarket_minimum_increment_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataMarket_minimum_increment_get" "', argument " "1"" of type '" "OTDB::OfferDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataMarket * >(argp1);
  result = (std::string *) & ((arg1)->minimum_increment);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataMarket_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::OfferDataMarket *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataMarket_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataMarket_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::OfferDataMarket *)OTDB::OfferDataMarket::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__OfferDataMarket,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_OfferDataMarket(void *obj) {
OTDB::OfferDataMarket *arg1 = (OTDB::OfferDataMarket *) obj;
delete arg1;
}
static swig_method swig_OTDB_OfferDataMarket_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_OfferDataMarket_attributes[] = {
    { "-gui_label",_wrap_OfferDataMarket_gui_label_get, _wrap_OfferDataMarket_gui_label_set},
    { "-transaction_id",_wrap_OfferDataMarket_transaction_id_get, _wrap_OfferDataMarket_transaction_id_set},
    { "-price_per_scale",_wrap_OfferDataMarket_price_per_scale_get, _wrap_OfferDataMarket_price_per_scale_set},
    { "-available_assets",_wrap_OfferDataMarket_available_assets_get, _wrap_OfferDataMarket_available_assets_set},
    { "-minimum_increment",_wrap_OfferDataMarket_minimum_increment_get, _wrap_OfferDataMarket_minimum_increment_set},
    {0,0,0}
};
static swig_class *swig_OTDB_OfferDataMarket_bases[] = {0,0};
static const char * swig_OTDB_OfferDataMarket_base_names[] = {"OTDB::Displayable *",0};
static swig_class _wrap_class_OTDB_OfferDataMarket = { "OfferDataMarket", &SWIGTYPE_p_OTDB__OfferDataMarket,0, swig_delete_OfferDataMarket, swig_OTDB_OfferDataMarket_methods, swig_OTDB_OfferDataMarket_attributes, swig_OTDB_OfferDataMarket_bases,swig_OTDB_OfferDataMarket_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_BidData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BidData *arg1 = (OTDB::BidData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_BidData self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BidData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BidData" "', argument " "1"" of type '" "OTDB::BidData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BidData * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BidData_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BidData *arg1 = (OTDB::BidData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BidData_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BidData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BidData_gui_label_set" "', argument " "1"" of type '" "OTDB::BidData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BidData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BidData_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BidData_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BidData_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BidData *arg1 = (OTDB::BidData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BidData_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BidData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BidData_gui_label_get" "', argument " "1"" of type '" "OTDB::BidData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BidData * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BidData_transaction_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BidData *arg1 = (OTDB::BidData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BidData_transaction_id_set self transaction_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BidData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BidData_transaction_id_set" "', argument " "1"" of type '" "OTDB::BidData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BidData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BidData_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BidData_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->transaction_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BidData_transaction_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BidData *arg1 = (OTDB::BidData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BidData_transaction_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BidData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BidData_transaction_id_get" "', argument " "1"" of type '" "OTDB::BidData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BidData * >(argp1);
  result = (std::string *) & ((arg1)->transaction_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BidData_price_per_scale_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BidData *arg1 = (OTDB::BidData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BidData_price_per_scale_set self price_per_scale ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BidData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BidData_price_per_scale_set" "', argument " "1"" of type '" "OTDB::BidData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BidData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BidData_price_per_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BidData_price_per_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->price_per_scale = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BidData_price_per_scale_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BidData *arg1 = (OTDB::BidData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BidData_price_per_scale_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BidData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BidData_price_per_scale_get" "', argument " "1"" of type '" "OTDB::BidData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BidData * >(argp1);
  result = (std::string *) & ((arg1)->price_per_scale);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BidData_available_assets_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BidData *arg1 = (OTDB::BidData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BidData_available_assets_set self available_assets ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BidData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BidData_available_assets_set" "', argument " "1"" of type '" "OTDB::BidData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BidData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BidData_available_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BidData_available_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->available_assets = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BidData_available_assets_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BidData *arg1 = (OTDB::BidData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BidData_available_assets_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BidData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BidData_available_assets_get" "', argument " "1"" of type '" "OTDB::BidData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BidData * >(argp1);
  result = (std::string *) & ((arg1)->available_assets);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BidData_minimum_increment_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BidData *arg1 = (OTDB::BidData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BidData_minimum_increment_set self minimum_increment ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BidData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BidData_minimum_increment_set" "', argument " "1"" of type '" "OTDB::BidData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BidData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BidData_minimum_increment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BidData_minimum_increment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->minimum_increment = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BidData_minimum_increment_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BidData *arg1 = (OTDB::BidData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BidData_minimum_increment_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BidData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BidData_minimum_increment_get" "', argument " "1"" of type '" "OTDB::BidData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BidData * >(argp1);
  result = (std::string *) & ((arg1)->minimum_increment);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BidData_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::BidData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BidData_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BidData_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::BidData *)OTDB::BidData::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__BidData,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_BidData(void *obj) {
OTDB::BidData *arg1 = (OTDB::BidData *) obj;
delete arg1;
}
static swig_method swig_OTDB_BidData_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_BidData_attributes[] = {
    { "-gui_label",_wrap_BidData_gui_label_get, _wrap_BidData_gui_label_set},
    { "-transaction_id",_wrap_BidData_transaction_id_get, _wrap_BidData_transaction_id_set},
    { "-price_per_scale",_wrap_BidData_price_per_scale_get, _wrap_BidData_price_per_scale_set},
    { "-available_assets",_wrap_BidData_available_assets_get, _wrap_BidData_available_assets_set},
    { "-minimum_increment",_wrap_BidData_minimum_increment_get, _wrap_BidData_minimum_increment_set},
    {0,0,0}
};
static swig_class *swig_OTDB_BidData_bases[] = {0,0};
static const char * swig_OTDB_BidData_base_names[] = {"OTDB::OfferDataMarket *",0};
static swig_class _wrap_class_OTDB_BidData = { "BidData", &SWIGTYPE_p_OTDB__BidData,0, swig_delete_BidData, swig_OTDB_BidData_methods, swig_OTDB_BidData_attributes, swig_OTDB_BidData_bases,swig_OTDB_BidData_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_AskData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AskData *arg1 = (OTDB::AskData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_AskData self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AskData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AskData" "', argument " "1"" of type '" "OTDB::AskData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AskData * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AskData_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AskData *arg1 = (OTDB::AskData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:AskData_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AskData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AskData_gui_label_set" "', argument " "1"" of type '" "OTDB::AskData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AskData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AskData_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AskData_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AskData_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AskData *arg1 = (OTDB::AskData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:AskData_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AskData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AskData_gui_label_get" "', argument " "1"" of type '" "OTDB::AskData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AskData * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AskData_transaction_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AskData *arg1 = (OTDB::AskData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:AskData_transaction_id_set self transaction_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AskData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AskData_transaction_id_set" "', argument " "1"" of type '" "OTDB::AskData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AskData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AskData_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AskData_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->transaction_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AskData_transaction_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AskData *arg1 = (OTDB::AskData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:AskData_transaction_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AskData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AskData_transaction_id_get" "', argument " "1"" of type '" "OTDB::AskData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AskData * >(argp1);
  result = (std::string *) & ((arg1)->transaction_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AskData_price_per_scale_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AskData *arg1 = (OTDB::AskData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:AskData_price_per_scale_set self price_per_scale ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AskData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AskData_price_per_scale_set" "', argument " "1"" of type '" "OTDB::AskData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AskData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AskData_price_per_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AskData_price_per_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->price_per_scale = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AskData_price_per_scale_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AskData *arg1 = (OTDB::AskData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:AskData_price_per_scale_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AskData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AskData_price_per_scale_get" "', argument " "1"" of type '" "OTDB::AskData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AskData * >(argp1);
  result = (std::string *) & ((arg1)->price_per_scale);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AskData_available_assets_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AskData *arg1 = (OTDB::AskData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:AskData_available_assets_set self available_assets ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AskData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AskData_available_assets_set" "', argument " "1"" of type '" "OTDB::AskData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AskData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AskData_available_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AskData_available_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->available_assets = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AskData_available_assets_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AskData *arg1 = (OTDB::AskData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:AskData_available_assets_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AskData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AskData_available_assets_get" "', argument " "1"" of type '" "OTDB::AskData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AskData * >(argp1);
  result = (std::string *) & ((arg1)->available_assets);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AskData_minimum_increment_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AskData *arg1 = (OTDB::AskData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:AskData_minimum_increment_set self minimum_increment ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AskData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AskData_minimum_increment_set" "', argument " "1"" of type '" "OTDB::AskData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AskData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AskData_minimum_increment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AskData_minimum_increment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->minimum_increment = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AskData_minimum_increment_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AskData *arg1 = (OTDB::AskData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:AskData_minimum_increment_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AskData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AskData_minimum_increment_get" "', argument " "1"" of type '" "OTDB::AskData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AskData * >(argp1);
  result = (std::string *) & ((arg1)->minimum_increment);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AskData_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::AskData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:AskData_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AskData_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::AskData *)OTDB::AskData::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__AskData,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_AskData(void *obj) {
OTDB::AskData *arg1 = (OTDB::AskData *) obj;
delete arg1;
}
static swig_method swig_OTDB_AskData_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_AskData_attributes[] = {
    { "-gui_label",_wrap_AskData_gui_label_get, _wrap_AskData_gui_label_set},
    { "-transaction_id",_wrap_AskData_transaction_id_get, _wrap_AskData_transaction_id_set},
    { "-price_per_scale",_wrap_AskData_price_per_scale_get, _wrap_AskData_price_per_scale_set},
    { "-available_assets",_wrap_AskData_available_assets_get, _wrap_AskData_available_assets_set},
    { "-minimum_increment",_wrap_AskData_minimum_increment_get, _wrap_AskData_minimum_increment_set},
    {0,0,0}
};
static swig_class *swig_OTDB_AskData_bases[] = {0,0};
static const char * swig_OTDB_AskData_base_names[] = {"OTDB::OfferDataMarket *",0};
static swig_class _wrap_class_OTDB_AskData = { "AskData", &SWIGTYPE_p_OTDB__AskData,0, swig_delete_AskData, swig_OTDB_AskData_methods, swig_OTDB_AskData_attributes, swig_OTDB_AskData_bases,swig_OTDB_AskData_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_OfferListMarket(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListMarket *arg1 = (OTDB::OfferListMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_OfferListMarket self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListMarket, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OfferListMarket" "', argument " "1"" of type '" "OTDB::OfferListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListMarket * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListMarket_GetBidDataCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListMarket *arg1 = (OTDB::OfferListMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferListMarket_GetBidDataCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListMarket_GetBidDataCount" "', argument " "1"" of type '" "OTDB::OfferListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListMarket * >(argp1);
  result = (arg1)->GetBidDataCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListMarket_GetBidData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListMarket *arg1 = (OTDB::OfferListMarket *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::BidData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferListMarket_GetBidData self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListMarket_GetBidData" "', argument " "1"" of type '" "OTDB::OfferListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListMarket * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OfferListMarket_GetBidData" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::BidData *)(arg1)->GetBidData(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__BidData,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListMarket_RemoveBidData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListMarket *arg1 = (OTDB::OfferListMarket *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferListMarket_RemoveBidData self nIndexBidData ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListMarket_RemoveBidData" "', argument " "1"" of type '" "OTDB::OfferListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListMarket * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OfferListMarket_RemoveBidData" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveBidData(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListMarket_AddBidData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListMarket *arg1 = (OTDB::OfferListMarket *) 0 ;
  OTDB::BidData *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferListMarket_AddBidData self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListMarket_AddBidData" "', argument " "1"" of type '" "OTDB::OfferListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListMarket * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__BidData,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferListMarket_AddBidData" "', argument " "2"" of type '" "OTDB::BidData &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferListMarket_AddBidData" "', argument " "2"" of type '" "OTDB::BidData &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::BidData * >(argp2);
  result = (bool)(arg1)->AddBidData(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListMarket_GetAskDataCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListMarket *arg1 = (OTDB::OfferListMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferListMarket_GetAskDataCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListMarket_GetAskDataCount" "', argument " "1"" of type '" "OTDB::OfferListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListMarket * >(argp1);
  result = (arg1)->GetAskDataCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListMarket_GetAskData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListMarket *arg1 = (OTDB::OfferListMarket *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::AskData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferListMarket_GetAskData self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListMarket_GetAskData" "', argument " "1"" of type '" "OTDB::OfferListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListMarket * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OfferListMarket_GetAskData" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::AskData *)(arg1)->GetAskData(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__AskData,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListMarket_RemoveAskData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListMarket *arg1 = (OTDB::OfferListMarket *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferListMarket_RemoveAskData self nIndexAskData ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListMarket_RemoveAskData" "', argument " "1"" of type '" "OTDB::OfferListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListMarket * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OfferListMarket_RemoveAskData" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveAskData(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListMarket_AddAskData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListMarket *arg1 = (OTDB::OfferListMarket *) 0 ;
  OTDB::AskData *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferListMarket_AddAskData self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListMarket_AddAskData" "', argument " "1"" of type '" "OTDB::OfferListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListMarket * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__AskData,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferListMarket_AddAskData" "', argument " "2"" of type '" "OTDB::AskData &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferListMarket_AddAskData" "', argument " "2"" of type '" "OTDB::AskData &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::AskData * >(argp2);
  result = (bool)(arg1)->AddAskData(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListMarket_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::OfferListMarket *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferListMarket_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListMarket_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::OfferListMarket *)OTDB::OfferListMarket::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__OfferListMarket,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_OfferListMarket(void *obj) {
OTDB::OfferListMarket *arg1 = (OTDB::OfferListMarket *) obj;
delete arg1;
}
static swig_method swig_OTDB_OfferListMarket_methods[] = {
    {"GetBidDataCount", _wrap_OfferListMarket_GetBidDataCount}, 
    {"GetBidData", _wrap_OfferListMarket_GetBidData}, 
    {"RemoveBidData", _wrap_OfferListMarket_RemoveBidData}, 
    {"AddBidData", _wrap_OfferListMarket_AddBidData}, 
    {"GetAskDataCount", _wrap_OfferListMarket_GetAskDataCount}, 
    {"GetAskData", _wrap_OfferListMarket_GetAskData}, 
    {"RemoveAskData", _wrap_OfferListMarket_RemoveAskData}, 
    {"AddAskData", _wrap_OfferListMarket_AddAskData}, 
    {0,0}
};
static swig_attribute swig_OTDB_OfferListMarket_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTDB_OfferListMarket_bases[] = {0,0};
static const char * swig_OTDB_OfferListMarket_base_names[] = {"OTDB::Storable *",0};
static swig_class _wrap_class_OTDB_OfferListMarket = { "OfferListMarket", &SWIGTYPE_p_OTDB__OfferListMarket,0, swig_delete_OfferListMarket, swig_OTDB_OfferListMarket_methods, swig_OTDB_OfferListMarket_attributes, swig_OTDB_OfferListMarket_bases,swig_OTDB_OfferListMarket_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_TradeDataMarket(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_TradeDataMarket self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataMarket, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TradeDataMarket" "', argument " "1"" of type '" "OTDB::TradeDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataMarket * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataMarket_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeDataMarket_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataMarket_gui_label_set" "', argument " "1"" of type '" "OTDB::TradeDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataMarket * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeDataMarket_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeDataMarket_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataMarket_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataMarket_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataMarket_gui_label_get" "', argument " "1"" of type '" "OTDB::TradeDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataMarket * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataMarket_transaction_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeDataMarket_transaction_id_set self transaction_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataMarket_transaction_id_set" "', argument " "1"" of type '" "OTDB::TradeDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataMarket * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeDataMarket_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeDataMarket_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->transaction_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataMarket_transaction_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataMarket_transaction_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataMarket_transaction_id_get" "', argument " "1"" of type '" "OTDB::TradeDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataMarket * >(argp1);
  result = (std::string *) & ((arg1)->transaction_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataMarket_date_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeDataMarket_date_set self date ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataMarket_date_set" "', argument " "1"" of type '" "OTDB::TradeDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataMarket * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeDataMarket_date_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeDataMarket_date_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->date = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataMarket_date_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataMarket_date_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataMarket_date_get" "', argument " "1"" of type '" "OTDB::TradeDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataMarket * >(argp1);
  result = (std::string *) & ((arg1)->date);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataMarket_price_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeDataMarket_price_set self price ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataMarket_price_set" "', argument " "1"" of type '" "OTDB::TradeDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataMarket * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeDataMarket_price_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeDataMarket_price_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->price = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataMarket_price_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataMarket_price_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataMarket_price_get" "', argument " "1"" of type '" "OTDB::TradeDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataMarket * >(argp1);
  result = (std::string *) & ((arg1)->price);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataMarket_amount_sold_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeDataMarket_amount_sold_set self amount_sold ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataMarket_amount_sold_set" "', argument " "1"" of type '" "OTDB::TradeDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataMarket * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeDataMarket_amount_sold_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeDataMarket_amount_sold_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->amount_sold = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataMarket_amount_sold_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataMarket_amount_sold_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataMarket_amount_sold_get" "', argument " "1"" of type '" "OTDB::TradeDataMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataMarket * >(argp1);
  result = (std::string *) & ((arg1)->amount_sold);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataMarket_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::TradeDataMarket *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataMarket_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataMarket_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::TradeDataMarket *)OTDB::TradeDataMarket::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__TradeDataMarket,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_TradeDataMarket(void *obj) {
OTDB::TradeDataMarket *arg1 = (OTDB::TradeDataMarket *) obj;
delete arg1;
}
static swig_method swig_OTDB_TradeDataMarket_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_TradeDataMarket_attributes[] = {
    { "-gui_label",_wrap_TradeDataMarket_gui_label_get, _wrap_TradeDataMarket_gui_label_set},
    { "-transaction_id",_wrap_TradeDataMarket_transaction_id_get, _wrap_TradeDataMarket_transaction_id_set},
    { "-date",_wrap_TradeDataMarket_date_get, _wrap_TradeDataMarket_date_set},
    { "-price",_wrap_TradeDataMarket_price_get, _wrap_TradeDataMarket_price_set},
    { "-amount_sold",_wrap_TradeDataMarket_amount_sold_get, _wrap_TradeDataMarket_amount_sold_set},
    {0,0,0}
};
static swig_class *swig_OTDB_TradeDataMarket_bases[] = {0,0};
static const char * swig_OTDB_TradeDataMarket_base_names[] = {"OTDB::Displayable *",0};
static swig_class _wrap_class_OTDB_TradeDataMarket = { "TradeDataMarket", &SWIGTYPE_p_OTDB__TradeDataMarket,0, swig_delete_TradeDataMarket, swig_OTDB_TradeDataMarket_methods, swig_OTDB_TradeDataMarket_attributes, swig_OTDB_TradeDataMarket_bases,swig_OTDB_TradeDataMarket_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_TradeListMarket(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeListMarket *arg1 = (OTDB::TradeListMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_TradeListMarket self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeListMarket, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TradeListMarket" "', argument " "1"" of type '" "OTDB::TradeListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeListMarket * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeListMarket_GetTradeDataMarketCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeListMarket *arg1 = (OTDB::TradeListMarket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeListMarket_GetTradeDataMarketCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeListMarket_GetTradeDataMarketCount" "', argument " "1"" of type '" "OTDB::TradeListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeListMarket * >(argp1);
  result = (arg1)->GetTradeDataMarketCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeListMarket_GetTradeDataMarket(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeListMarket *arg1 = (OTDB::TradeListMarket *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::TradeDataMarket *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeListMarket_GetTradeDataMarket self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeListMarket_GetTradeDataMarket" "', argument " "1"" of type '" "OTDB::TradeListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeListMarket * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TradeListMarket_GetTradeDataMarket" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::TradeDataMarket *)(arg1)->GetTradeDataMarket(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__TradeDataMarket,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeListMarket_RemoveTradeDataMarket(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeListMarket *arg1 = (OTDB::TradeListMarket *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeListMarket_RemoveTradeDataMarket self nIndexTradeDataMarket ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeListMarket_RemoveTradeDataMarket" "', argument " "1"" of type '" "OTDB::TradeListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeListMarket * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TradeListMarket_RemoveTradeDataMarket" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveTradeDataMarket(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeListMarket_AddTradeDataMarket(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeListMarket *arg1 = (OTDB::TradeListMarket *) 0 ;
  OTDB::TradeDataMarket *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeListMarket_AddTradeDataMarket self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeListMarket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeListMarket_AddTradeDataMarket" "', argument " "1"" of type '" "OTDB::TradeListMarket *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeListMarket * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__TradeDataMarket,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeListMarket_AddTradeDataMarket" "', argument " "2"" of type '" "OTDB::TradeDataMarket &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeListMarket_AddTradeDataMarket" "', argument " "2"" of type '" "OTDB::TradeDataMarket &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::TradeDataMarket * >(argp2);
  result = (bool)(arg1)->AddTradeDataMarket(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeListMarket_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::TradeListMarket *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeListMarket_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeListMarket_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::TradeListMarket *)OTDB::TradeListMarket::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__TradeListMarket,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_TradeListMarket(void *obj) {
OTDB::TradeListMarket *arg1 = (OTDB::TradeListMarket *) obj;
delete arg1;
}
static swig_method swig_OTDB_TradeListMarket_methods[] = {
    {"GetTradeDataMarketCount", _wrap_TradeListMarket_GetTradeDataMarketCount}, 
    {"GetTradeDataMarket", _wrap_TradeListMarket_GetTradeDataMarket}, 
    {"RemoveTradeDataMarket", _wrap_TradeListMarket_RemoveTradeDataMarket}, 
    {"AddTradeDataMarket", _wrap_TradeListMarket_AddTradeDataMarket}, 
    {0,0}
};
static swig_attribute swig_OTDB_TradeListMarket_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTDB_TradeListMarket_bases[] = {0,0};
static const char * swig_OTDB_TradeListMarket_base_names[] = {"OTDB::Storable *",0};
static swig_class _wrap_class_OTDB_TradeListMarket = { "TradeListMarket", &SWIGTYPE_p_OTDB__TradeListMarket,0, swig_delete_TradeListMarket, swig_OTDB_TradeListMarket_methods, swig_OTDB_TradeListMarket_attributes, swig_OTDB_TradeListMarket_bases,swig_OTDB_TradeListMarket_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_OfferDataNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_OfferDataNym self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OfferDataNym" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_gui_label_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_gui_label_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_valid_from_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_valid_from_set self valid_from ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_valid_from_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_valid_from_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_valid_from_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->valid_from = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_valid_from_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_valid_from_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_valid_from_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->valid_from);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_valid_to_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_valid_to_set self valid_to ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_valid_to_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_valid_to_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_valid_to_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->valid_to = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_valid_to_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_valid_to_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_valid_to_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->valid_to);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_server_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_server_id_set self server_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_server_id_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_server_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_server_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_server_id_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->server_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_asset_type_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_asset_type_id_set self asset_type_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_asset_type_id_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_asset_type_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_asset_type_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->asset_type_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_asset_type_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_asset_type_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_asset_type_id_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->asset_type_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_asset_acct_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_asset_acct_id_set self asset_acct_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_asset_acct_id_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_asset_acct_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_asset_acct_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->asset_acct_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_asset_acct_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_asset_acct_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_asset_acct_id_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->asset_acct_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_currency_type_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_currency_type_id_set self currency_type_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_currency_type_id_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_currency_type_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_currency_type_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->currency_type_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_currency_type_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_currency_type_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_currency_type_id_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->currency_type_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_currency_acct_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_currency_acct_id_set self currency_acct_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_currency_acct_id_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_currency_acct_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_currency_acct_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->currency_acct_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_currency_acct_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_currency_acct_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_currency_acct_id_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->currency_acct_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_selling_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_selling_set self selling ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_selling_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OfferDataNym_selling_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->selling = arg2;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_selling_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_selling_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_selling_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (bool) ((arg1)->selling);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_scale_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_scale_set self scale ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_scale_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->scale = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_scale_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_scale_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_scale_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->scale);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_price_per_scale_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_price_per_scale_set self price_per_scale ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_price_per_scale_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_price_per_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_price_per_scale_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->price_per_scale = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_price_per_scale_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_price_per_scale_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_price_per_scale_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->price_per_scale);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_transaction_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_transaction_id_set self transaction_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_transaction_id_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->transaction_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_transaction_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_transaction_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_transaction_id_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->transaction_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_total_assets_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_total_assets_set self total_assets ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_total_assets_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_total_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_total_assets_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->total_assets = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_total_assets_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_total_assets_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_total_assets_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->total_assets);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_finished_so_far_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_finished_so_far_set self finished_so_far ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_finished_so_far_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_finished_so_far_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_finished_so_far_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->finished_so_far = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_finished_so_far_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_finished_so_far_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_finished_so_far_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->finished_so_far);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_minimum_increment_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_minimum_increment_set self minimum_increment ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_minimum_increment_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_minimum_increment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_minimum_increment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->minimum_increment = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_minimum_increment_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_minimum_increment_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_minimum_increment_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->minimum_increment);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_stop_sign_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_stop_sign_set self stop_sign ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_stop_sign_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_stop_sign_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_stop_sign_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->stop_sign = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_stop_sign_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_stop_sign_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_stop_sign_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->stop_sign);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_stop_price_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferDataNym_stop_price_set self stop_price ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_stop_price_set" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferDataNym_stop_price_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferDataNym_stop_price_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->stop_price = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_stop_price_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_stop_price_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_stop_price_get" "', argument " "1"" of type '" "OTDB::OfferDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferDataNym * >(argp1);
  result = (std::string *) & ((arg1)->stop_price);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferDataNym_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::OfferDataNym *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferDataNym_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferDataNym_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::OfferDataNym *)OTDB::OfferDataNym::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__OfferDataNym,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_OfferDataNym(void *obj) {
OTDB::OfferDataNym *arg1 = (OTDB::OfferDataNym *) obj;
delete arg1;
}
static swig_method swig_OTDB_OfferDataNym_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_OfferDataNym_attributes[] = {
    { "-gui_label",_wrap_OfferDataNym_gui_label_get, _wrap_OfferDataNym_gui_label_set},
    { "-valid_from",_wrap_OfferDataNym_valid_from_get, _wrap_OfferDataNym_valid_from_set},
    { "-valid_to",_wrap_OfferDataNym_valid_to_get, _wrap_OfferDataNym_valid_to_set},
    { "-server_id",_wrap_OfferDataNym_server_id_get, _wrap_OfferDataNym_server_id_set},
    { "-asset_type_id",_wrap_OfferDataNym_asset_type_id_get, _wrap_OfferDataNym_asset_type_id_set},
    { "-asset_acct_id",_wrap_OfferDataNym_asset_acct_id_get, _wrap_OfferDataNym_asset_acct_id_set},
    { "-currency_type_id",_wrap_OfferDataNym_currency_type_id_get, _wrap_OfferDataNym_currency_type_id_set},
    { "-currency_acct_id",_wrap_OfferDataNym_currency_acct_id_get, _wrap_OfferDataNym_currency_acct_id_set},
    { "-selling",_wrap_OfferDataNym_selling_get, _wrap_OfferDataNym_selling_set},
    { "-scale",_wrap_OfferDataNym_scale_get, _wrap_OfferDataNym_scale_set},
    { "-price_per_scale",_wrap_OfferDataNym_price_per_scale_get, _wrap_OfferDataNym_price_per_scale_set},
    { "-transaction_id",_wrap_OfferDataNym_transaction_id_get, _wrap_OfferDataNym_transaction_id_set},
    { "-total_assets",_wrap_OfferDataNym_total_assets_get, _wrap_OfferDataNym_total_assets_set},
    { "-finished_so_far",_wrap_OfferDataNym_finished_so_far_get, _wrap_OfferDataNym_finished_so_far_set},
    { "-minimum_increment",_wrap_OfferDataNym_minimum_increment_get, _wrap_OfferDataNym_minimum_increment_set},
    { "-stop_sign",_wrap_OfferDataNym_stop_sign_get, _wrap_OfferDataNym_stop_sign_set},
    { "-stop_price",_wrap_OfferDataNym_stop_price_get, _wrap_OfferDataNym_stop_price_set},
    {0,0,0}
};
static swig_class *swig_OTDB_OfferDataNym_bases[] = {0,0};
static const char * swig_OTDB_OfferDataNym_base_names[] = {"OTDB::Displayable *",0};
static swig_class _wrap_class_OTDB_OfferDataNym = { "OfferDataNym", &SWIGTYPE_p_OTDB__OfferDataNym,0, swig_delete_OfferDataNym, swig_OTDB_OfferDataNym_methods, swig_OTDB_OfferDataNym_attributes, swig_OTDB_OfferDataNym_bases,swig_OTDB_OfferDataNym_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_OfferListNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListNym *arg1 = (OTDB::OfferListNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_OfferListNym self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListNym, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OfferListNym" "', argument " "1"" of type '" "OTDB::OfferListNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListNym * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListNym_GetOfferDataNymCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListNym *arg1 = (OTDB::OfferListNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferListNym_GetOfferDataNymCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListNym_GetOfferDataNymCount" "', argument " "1"" of type '" "OTDB::OfferListNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListNym * >(argp1);
  result = (arg1)->GetOfferDataNymCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListNym_GetOfferDataNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListNym *arg1 = (OTDB::OfferListNym *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::OfferDataNym *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferListNym_GetOfferDataNym self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListNym_GetOfferDataNym" "', argument " "1"" of type '" "OTDB::OfferListNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListNym * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OfferListNym_GetOfferDataNym" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::OfferDataNym *)(arg1)->GetOfferDataNym(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__OfferDataNym,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListNym_RemoveOfferDataNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListNym *arg1 = (OTDB::OfferListNym *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferListNym_RemoveOfferDataNym self nIndexOfferDataNym ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListNym_RemoveOfferDataNym" "', argument " "1"" of type '" "OTDB::OfferListNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListNym * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OfferListNym_RemoveOfferDataNym" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveOfferDataNym(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListNym_AddOfferDataNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::OfferListNym *arg1 = (OTDB::OfferListNym *) 0 ;
  OTDB::OfferDataNym *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:OfferListNym_AddOfferDataNym self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__OfferListNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListNym_AddOfferDataNym" "', argument " "1"" of type '" "OTDB::OfferListNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::OfferListNym * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__OfferDataNym,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OfferListNym_AddOfferDataNym" "', argument " "2"" of type '" "OTDB::OfferDataNym &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OfferListNym_AddOfferDataNym" "', argument " "2"" of type '" "OTDB::OfferDataNym &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::OfferDataNym * >(argp2);
  result = (bool)(arg1)->AddOfferDataNym(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_OfferListNym_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::OfferListNym *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:OfferListNym_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OfferListNym_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::OfferListNym *)OTDB::OfferListNym::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__OfferListNym,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_OfferListNym(void *obj) {
OTDB::OfferListNym *arg1 = (OTDB::OfferListNym *) obj;
delete arg1;
}
static swig_method swig_OTDB_OfferListNym_methods[] = {
    {"GetOfferDataNymCount", _wrap_OfferListNym_GetOfferDataNymCount}, 
    {"GetOfferDataNym", _wrap_OfferListNym_GetOfferDataNym}, 
    {"RemoveOfferDataNym", _wrap_OfferListNym_RemoveOfferDataNym}, 
    {"AddOfferDataNym", _wrap_OfferListNym_AddOfferDataNym}, 
    {0,0}
};
static swig_attribute swig_OTDB_OfferListNym_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTDB_OfferListNym_bases[] = {0,0};
static const char * swig_OTDB_OfferListNym_base_names[] = {"OTDB::Storable *",0};
static swig_class _wrap_class_OTDB_OfferListNym = { "OfferListNym", &SWIGTYPE_p_OTDB__OfferListNym,0, swig_delete_OfferListNym, swig_OTDB_OfferListNym_methods, swig_OTDB_OfferListNym_attributes, swig_OTDB_OfferListNym_bases,swig_OTDB_OfferListNym_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_TradeDataNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_TradeDataNym self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TradeDataNym" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeDataNym_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_gui_label_set" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeDataNym_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeDataNym_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataNym_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_gui_label_get" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_transaction_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeDataNym_transaction_id_set self transaction_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_transaction_id_set" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeDataNym_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeDataNym_transaction_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->transaction_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_transaction_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataNym_transaction_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_transaction_id_get" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  result = (std::string *) & ((arg1)->transaction_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_completed_count_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeDataNym_completed_count_set self completed_count ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_completed_count_set" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeDataNym_completed_count_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeDataNym_completed_count_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->completed_count = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_completed_count_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataNym_completed_count_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_completed_count_get" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  result = (std::string *) & ((arg1)->completed_count);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_date_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeDataNym_date_set self date ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_date_set" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeDataNym_date_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeDataNym_date_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->date = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_date_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataNym_date_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_date_get" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  result = (std::string *) & ((arg1)->date);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_price_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeDataNym_price_set self price ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_price_set" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeDataNym_price_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeDataNym_price_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->price = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_price_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataNym_price_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_price_get" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  result = (std::string *) & ((arg1)->price);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_amount_sold_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeDataNym_amount_sold_set self amount_sold ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_amount_sold_set" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeDataNym_amount_sold_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeDataNym_amount_sold_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->amount_sold = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_amount_sold_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataNym_amount_sold_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeDataNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_amount_sold_get" "', argument " "1"" of type '" "OTDB::TradeDataNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeDataNym * >(argp1);
  result = (std::string *) & ((arg1)->amount_sold);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeDataNym_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::TradeDataNym *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeDataNym_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeDataNym_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::TradeDataNym *)OTDB::TradeDataNym::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__TradeDataNym,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_TradeDataNym(void *obj) {
OTDB::TradeDataNym *arg1 = (OTDB::TradeDataNym *) obj;
delete arg1;
}
static swig_method swig_OTDB_TradeDataNym_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_TradeDataNym_attributes[] = {
    { "-gui_label",_wrap_TradeDataNym_gui_label_get, _wrap_TradeDataNym_gui_label_set},
    { "-transaction_id",_wrap_TradeDataNym_transaction_id_get, _wrap_TradeDataNym_transaction_id_set},
    { "-completed_count",_wrap_TradeDataNym_completed_count_get, _wrap_TradeDataNym_completed_count_set},
    { "-date",_wrap_TradeDataNym_date_get, _wrap_TradeDataNym_date_set},
    { "-price",_wrap_TradeDataNym_price_get, _wrap_TradeDataNym_price_set},
    { "-amount_sold",_wrap_TradeDataNym_amount_sold_get, _wrap_TradeDataNym_amount_sold_set},
    {0,0,0}
};
static swig_class *swig_OTDB_TradeDataNym_bases[] = {0,0};
static const char * swig_OTDB_TradeDataNym_base_names[] = {"OTDB::Displayable *",0};
static swig_class _wrap_class_OTDB_TradeDataNym = { "TradeDataNym", &SWIGTYPE_p_OTDB__TradeDataNym,0, swig_delete_TradeDataNym, swig_OTDB_TradeDataNym_methods, swig_OTDB_TradeDataNym_attributes, swig_OTDB_TradeDataNym_bases,swig_OTDB_TradeDataNym_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_TradeListNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeListNym *arg1 = (OTDB::TradeListNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_TradeListNym self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeListNym, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TradeListNym" "', argument " "1"" of type '" "OTDB::TradeListNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeListNym * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeListNym_GetTradeDataNymCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeListNym *arg1 = (OTDB::TradeListNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeListNym_GetTradeDataNymCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeListNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeListNym_GetTradeDataNymCount" "', argument " "1"" of type '" "OTDB::TradeListNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeListNym * >(argp1);
  result = (arg1)->GetTradeDataNymCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeListNym_GetTradeDataNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeListNym *arg1 = (OTDB::TradeListNym *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::TradeDataNym *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeListNym_GetTradeDataNym self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeListNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeListNym_GetTradeDataNym" "', argument " "1"" of type '" "OTDB::TradeListNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeListNym * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TradeListNym_GetTradeDataNym" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::TradeDataNym *)(arg1)->GetTradeDataNym(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__TradeDataNym,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeListNym_RemoveTradeDataNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeListNym *arg1 = (OTDB::TradeListNym *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeListNym_RemoveTradeDataNym self nIndexTradeDataNym ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeListNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeListNym_RemoveTradeDataNym" "', argument " "1"" of type '" "OTDB::TradeListNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeListNym * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TradeListNym_RemoveTradeDataNym" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveTradeDataNym(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeListNym_AddTradeDataNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::TradeListNym *arg1 = (OTDB::TradeListNym *) 0 ;
  OTDB::TradeDataNym *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:TradeListNym_AddTradeDataNym self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__TradeListNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeListNym_AddTradeDataNym" "', argument " "1"" of type '" "OTDB::TradeListNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::TradeListNym * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__TradeDataNym,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TradeListNym_AddTradeDataNym" "', argument " "2"" of type '" "OTDB::TradeDataNym &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TradeListNym_AddTradeDataNym" "', argument " "2"" of type '" "OTDB::TradeDataNym &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::TradeDataNym * >(argp2);
  result = (bool)(arg1)->AddTradeDataNym(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_TradeListNym_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::TradeListNym *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:TradeListNym_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TradeListNym_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::TradeListNym *)OTDB::TradeListNym::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__TradeListNym,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_TradeListNym(void *obj) {
OTDB::TradeListNym *arg1 = (OTDB::TradeListNym *) obj;
delete arg1;
}
static swig_method swig_OTDB_TradeListNym_methods[] = {
    {"GetTradeDataNymCount", _wrap_TradeListNym_GetTradeDataNymCount}, 
    {"GetTradeDataNym", _wrap_TradeListNym_GetTradeDataNym}, 
    {"RemoveTradeDataNym", _wrap_TradeListNym_RemoveTradeDataNym}, 
    {"AddTradeDataNym", _wrap_TradeListNym_AddTradeDataNym}, 
    {0,0}
};
static swig_attribute swig_OTDB_TradeListNym_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTDB_TradeListNym_bases[] = {0,0};
static const char * swig_OTDB_TradeListNym_base_names[] = {"OTDB::Storable *",0};
static swig_class _wrap_class_OTDB_TradeListNym = { "TradeListNym", &SWIGTYPE_p_OTDB__TradeListNym,0, swig_delete_TradeListNym, swig_OTDB_TradeListNym_methods, swig_OTDB_TradeListNym_attributes, swig_OTDB_TradeListNym_bases,swig_OTDB_TradeListNym_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_Acct(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Acct *arg1 = (OTDB::Acct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_Acct self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Acct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Acct" "', argument " "1"" of type '" "OTDB::Acct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Acct * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Acct_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Acct *arg1 = (OTDB::Acct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Acct_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Acct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Acct_gui_label_set" "', argument " "1"" of type '" "OTDB::Acct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Acct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Acct_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Acct_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Acct_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Acct *arg1 = (OTDB::Acct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Acct_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Acct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Acct_gui_label_get" "', argument " "1"" of type '" "OTDB::Acct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Acct * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Acct_acct_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Acct *arg1 = (OTDB::Acct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Acct_acct_id_set self acct_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Acct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Acct_acct_id_set" "', argument " "1"" of type '" "OTDB::Acct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Acct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Acct_acct_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Acct_acct_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->acct_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Acct_acct_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Acct *arg1 = (OTDB::Acct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Acct_acct_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Acct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Acct_acct_id_get" "', argument " "1"" of type '" "OTDB::Acct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Acct * >(argp1);
  result = (std::string *) & ((arg1)->acct_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Acct_server_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Acct *arg1 = (OTDB::Acct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Acct_server_id_set self server_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Acct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Acct_server_id_set" "', argument " "1"" of type '" "OTDB::Acct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Acct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Acct_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Acct_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Acct_server_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Acct *arg1 = (OTDB::Acct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Acct_server_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Acct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Acct_server_id_get" "', argument " "1"" of type '" "OTDB::Acct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Acct * >(argp1);
  result = (std::string *) & ((arg1)->server_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Acct_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::Acct *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Acct_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Acct_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::Acct *)OTDB::Acct::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Acct,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_Acct(void *obj) {
OTDB::Acct *arg1 = (OTDB::Acct *) obj;
delete arg1;
}
static swig_method swig_OTDB_Acct_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_Acct_attributes[] = {
    { "-gui_label",_wrap_Acct_gui_label_get, _wrap_Acct_gui_label_set},
    { "-acct_id",_wrap_Acct_acct_id_get, _wrap_Acct_acct_id_set},
    { "-server_id",_wrap_Acct_server_id_get, _wrap_Acct_server_id_set},
    {0,0,0}
};
static swig_class *swig_OTDB_Acct_bases[] = {0,0};
static const char * swig_OTDB_Acct_base_names[] = {"OTDB::Displayable *",0};
static swig_class _wrap_class_OTDB_Acct = { "Acct", &SWIGTYPE_p_OTDB__Acct,0, swig_delete_Acct, swig_OTDB_Acct_methods, swig_OTDB_Acct_attributes, swig_OTDB_Acct_bases,swig_OTDB_Acct_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_BitcoinAcct(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinAcct *arg1 = (OTDB::BitcoinAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_BitcoinAcct self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinAcct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BitcoinAcct" "', argument " "1"" of type '" "OTDB::BitcoinAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinAcct * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinAcct_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinAcct *arg1 = (OTDB::BitcoinAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BitcoinAcct_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinAcct_gui_label_set" "', argument " "1"" of type '" "OTDB::BitcoinAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BitcoinAcct_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BitcoinAcct_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinAcct_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinAcct *arg1 = (OTDB::BitcoinAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinAcct_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinAcct_gui_label_get" "', argument " "1"" of type '" "OTDB::BitcoinAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinAcct * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinAcct_acct_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinAcct *arg1 = (OTDB::BitcoinAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BitcoinAcct_acct_id_set self acct_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinAcct_acct_id_set" "', argument " "1"" of type '" "OTDB::BitcoinAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BitcoinAcct_acct_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BitcoinAcct_acct_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->acct_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinAcct_acct_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinAcct *arg1 = (OTDB::BitcoinAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinAcct_acct_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinAcct_acct_id_get" "', argument " "1"" of type '" "OTDB::BitcoinAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinAcct * >(argp1);
  result = (std::string *) & ((arg1)->acct_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinAcct_server_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinAcct *arg1 = (OTDB::BitcoinAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BitcoinAcct_server_id_set self server_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinAcct_server_id_set" "', argument " "1"" of type '" "OTDB::BitcoinAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BitcoinAcct_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BitcoinAcct_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinAcct_server_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinAcct *arg1 = (OTDB::BitcoinAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinAcct_server_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinAcct_server_id_get" "', argument " "1"" of type '" "OTDB::BitcoinAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinAcct * >(argp1);
  result = (std::string *) & ((arg1)->server_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinAcct_bitcoin_acct_name_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinAcct *arg1 = (OTDB::BitcoinAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BitcoinAcct_bitcoin_acct_name_set self bitcoin_acct_name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinAcct_bitcoin_acct_name_set" "', argument " "1"" of type '" "OTDB::BitcoinAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BitcoinAcct_bitcoin_acct_name_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BitcoinAcct_bitcoin_acct_name_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->bitcoin_acct_name = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinAcct_bitcoin_acct_name_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinAcct *arg1 = (OTDB::BitcoinAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinAcct_bitcoin_acct_name_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinAcct_bitcoin_acct_name_get" "', argument " "1"" of type '" "OTDB::BitcoinAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinAcct * >(argp1);
  result = (std::string *) & ((arg1)->bitcoin_acct_name);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinAcct_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::BitcoinAcct *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinAcct_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinAcct_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::BitcoinAcct *)OTDB::BitcoinAcct::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__BitcoinAcct,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_BitcoinAcct(void *obj) {
OTDB::BitcoinAcct *arg1 = (OTDB::BitcoinAcct *) obj;
delete arg1;
}
static swig_method swig_OTDB_BitcoinAcct_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_BitcoinAcct_attributes[] = {
    { "-gui_label",_wrap_BitcoinAcct_gui_label_get, _wrap_BitcoinAcct_gui_label_set},
    { "-acct_id",_wrap_BitcoinAcct_acct_id_get, _wrap_BitcoinAcct_acct_id_set},
    { "-server_id",_wrap_BitcoinAcct_server_id_get, _wrap_BitcoinAcct_server_id_set},
    { "-bitcoin_acct_name",_wrap_BitcoinAcct_bitcoin_acct_name_get, _wrap_BitcoinAcct_bitcoin_acct_name_set},
    {0,0,0}
};
static swig_class *swig_OTDB_BitcoinAcct_bases[] = {0,0};
static const char * swig_OTDB_BitcoinAcct_base_names[] = {"OTDB::Acct *",0};
static swig_class _wrap_class_OTDB_BitcoinAcct = { "BitcoinAcct", &SWIGTYPE_p_OTDB__BitcoinAcct,0, swig_delete_BitcoinAcct, swig_OTDB_BitcoinAcct_methods, swig_OTDB_BitcoinAcct_attributes, swig_OTDB_BitcoinAcct_bases,swig_OTDB_BitcoinAcct_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_ServerInfo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ServerInfo *arg1 = (OTDB::ServerInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_ServerInfo self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ServerInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ServerInfo" "', argument " "1"" of type '" "OTDB::ServerInfo *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ServerInfo * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ServerInfo_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ServerInfo *arg1 = (OTDB::ServerInfo *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ServerInfo_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ServerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ServerInfo_gui_label_set" "', argument " "1"" of type '" "OTDB::ServerInfo *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ServerInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ServerInfo_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ServerInfo_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ServerInfo_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ServerInfo *arg1 = (OTDB::ServerInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ServerInfo_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ServerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ServerInfo_gui_label_get" "', argument " "1"" of type '" "OTDB::ServerInfo *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ServerInfo * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ServerInfo_server_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ServerInfo *arg1 = (OTDB::ServerInfo *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ServerInfo_server_id_set self server_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ServerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ServerInfo_server_id_set" "', argument " "1"" of type '" "OTDB::ServerInfo *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ServerInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ServerInfo_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ServerInfo_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ServerInfo_server_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ServerInfo *arg1 = (OTDB::ServerInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ServerInfo_server_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ServerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ServerInfo_server_id_get" "', argument " "1"" of type '" "OTDB::ServerInfo *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ServerInfo * >(argp1);
  result = (std::string *) & ((arg1)->server_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ServerInfo_server_type_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ServerInfo *arg1 = (OTDB::ServerInfo *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ServerInfo_server_type_set self server_type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ServerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ServerInfo_server_type_set" "', argument " "1"" of type '" "OTDB::ServerInfo *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ServerInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ServerInfo_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ServerInfo_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_type = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ServerInfo_server_type_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ServerInfo *arg1 = (OTDB::ServerInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ServerInfo_server_type_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ServerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ServerInfo_server_type_get" "', argument " "1"" of type '" "OTDB::ServerInfo *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ServerInfo * >(argp1);
  result = (std::string *) & ((arg1)->server_type);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ServerInfo_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::ServerInfo *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ServerInfo_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ServerInfo_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::ServerInfo *)OTDB::ServerInfo::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__ServerInfo,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_ServerInfo(void *obj) {
OTDB::ServerInfo *arg1 = (OTDB::ServerInfo *) obj;
delete arg1;
}
static swig_method swig_OTDB_ServerInfo_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_ServerInfo_attributes[] = {
    { "-gui_label",_wrap_ServerInfo_gui_label_get, _wrap_ServerInfo_gui_label_set},
    { "-server_id",_wrap_ServerInfo_server_id_get, _wrap_ServerInfo_server_id_set},
    { "-server_type",_wrap_ServerInfo_server_type_get, _wrap_ServerInfo_server_type_set},
    {0,0,0}
};
static swig_class *swig_OTDB_ServerInfo_bases[] = {0,0};
static const char * swig_OTDB_ServerInfo_base_names[] = {"OTDB::Displayable *",0};
static swig_class _wrap_class_OTDB_ServerInfo = { "ServerInfo", &SWIGTYPE_p_OTDB__ServerInfo,0, swig_delete_ServerInfo, swig_OTDB_ServerInfo_methods, swig_OTDB_ServerInfo_attributes, swig_OTDB_ServerInfo_bases,swig_OTDB_ServerInfo_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_Server(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Server *arg1 = (OTDB::Server *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_Server self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Server, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Server" "', argument " "1"" of type '" "OTDB::Server *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Server * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Server_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Server *arg1 = (OTDB::Server *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Server_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Server, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Server_gui_label_set" "', argument " "1"" of type '" "OTDB::Server *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Server * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Server_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Server_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Server_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Server *arg1 = (OTDB::Server *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Server_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Server, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Server_gui_label_get" "', argument " "1"" of type '" "OTDB::Server *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Server * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Server_server_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Server *arg1 = (OTDB::Server *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Server_server_id_set self server_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Server, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Server_server_id_set" "', argument " "1"" of type '" "OTDB::Server *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Server * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Server_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Server_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Server_server_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Server *arg1 = (OTDB::Server *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Server_server_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Server, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Server_server_id_get" "', argument " "1"" of type '" "OTDB::Server *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Server * >(argp1);
  result = (std::string *) & ((arg1)->server_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Server_server_type_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Server *arg1 = (OTDB::Server *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Server_server_type_set self server_type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Server, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Server_server_type_set" "', argument " "1"" of type '" "OTDB::Server *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Server * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Server_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Server_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_type = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Server_server_type_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Server *arg1 = (OTDB::Server *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Server_server_type_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Server, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Server_server_type_get" "', argument " "1"" of type '" "OTDB::Server *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Server * >(argp1);
  result = (std::string *) & ((arg1)->server_type);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Server_server_host_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Server *arg1 = (OTDB::Server *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Server_server_host_set self server_host ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Server, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Server_server_host_set" "', argument " "1"" of type '" "OTDB::Server *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Server * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Server_server_host_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Server_server_host_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_host = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Server_server_host_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Server *arg1 = (OTDB::Server *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Server_server_host_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Server, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Server_server_host_get" "', argument " "1"" of type '" "OTDB::Server *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Server * >(argp1);
  result = (std::string *) & ((arg1)->server_host);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Server_server_port_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Server *arg1 = (OTDB::Server *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Server_server_port_set self server_port ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Server, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Server_server_port_set" "', argument " "1"" of type '" "OTDB::Server *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Server * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Server_server_port_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Server_server_port_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_port = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Server_server_port_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Server *arg1 = (OTDB::Server *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Server_server_port_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Server, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Server_server_port_get" "', argument " "1"" of type '" "OTDB::Server *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Server * >(argp1);
  result = (std::string *) & ((arg1)->server_port);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Server_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::Server *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Server_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Server_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::Server *)OTDB::Server::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Server,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_Server(void *obj) {
OTDB::Server *arg1 = (OTDB::Server *) obj;
delete arg1;
}
static swig_method swig_OTDB_Server_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_Server_attributes[] = {
    { "-gui_label",_wrap_Server_gui_label_get, _wrap_Server_gui_label_set},
    { "-server_id",_wrap_Server_server_id_get, _wrap_Server_server_id_set},
    { "-server_type",_wrap_Server_server_type_get, _wrap_Server_server_type_set},
    { "-server_host",_wrap_Server_server_host_get, _wrap_Server_server_host_set},
    { "-server_port",_wrap_Server_server_port_get, _wrap_Server_server_port_set},
    {0,0,0}
};
static swig_class *swig_OTDB_Server_bases[] = {0,0};
static const char * swig_OTDB_Server_base_names[] = {"OTDB::ServerInfo *",0};
static swig_class _wrap_class_OTDB_Server = { "Server", &SWIGTYPE_p_OTDB__Server,0, swig_delete_Server, swig_OTDB_Server_methods, swig_OTDB_Server_attributes, swig_OTDB_Server_bases,swig_OTDB_Server_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_BitcoinServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_BitcoinServer self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BitcoinServer" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BitcoinServer_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_gui_label_set" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BitcoinServer_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BitcoinServer_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinServer_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_gui_label_get" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_server_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BitcoinServer_server_id_set self server_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_server_id_set" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BitcoinServer_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BitcoinServer_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_server_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinServer_server_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_server_id_get" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  result = (std::string *) & ((arg1)->server_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_server_type_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BitcoinServer_server_type_set self server_type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_server_type_set" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BitcoinServer_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BitcoinServer_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_type = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_server_type_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinServer_server_type_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_server_type_get" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  result = (std::string *) & ((arg1)->server_type);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_server_host_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BitcoinServer_server_host_set self server_host ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_server_host_set" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BitcoinServer_server_host_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BitcoinServer_server_host_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_host = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_server_host_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinServer_server_host_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_server_host_get" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  result = (std::string *) & ((arg1)->server_host);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_server_port_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BitcoinServer_server_port_set self server_port ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_server_port_set" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BitcoinServer_server_port_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BitcoinServer_server_port_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_port = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_server_port_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinServer_server_port_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_server_port_get" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  result = (std::string *) & ((arg1)->server_port);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_bitcoin_username_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BitcoinServer_bitcoin_username_set self bitcoin_username ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_bitcoin_username_set" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BitcoinServer_bitcoin_username_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BitcoinServer_bitcoin_username_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->bitcoin_username = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_bitcoin_username_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinServer_bitcoin_username_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_bitcoin_username_get" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  result = (std::string *) & ((arg1)->bitcoin_username);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_bitcoin_password_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:BitcoinServer_bitcoin_password_set self bitcoin_password ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_bitcoin_password_set" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BitcoinServer_bitcoin_password_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BitcoinServer_bitcoin_password_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->bitcoin_password = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_bitcoin_password_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinServer_bitcoin_password_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__BitcoinServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_bitcoin_password_get" "', argument " "1"" of type '" "OTDB::BitcoinServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::BitcoinServer * >(argp1);
  result = (std::string *) & ((arg1)->bitcoin_password);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_BitcoinServer_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::BitcoinServer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:BitcoinServer_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BitcoinServer_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::BitcoinServer *)OTDB::BitcoinServer::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__BitcoinServer,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_BitcoinServer(void *obj) {
OTDB::BitcoinServer *arg1 = (OTDB::BitcoinServer *) obj;
delete arg1;
}
static swig_method swig_OTDB_BitcoinServer_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_BitcoinServer_attributes[] = {
    { "-gui_label",_wrap_BitcoinServer_gui_label_get, _wrap_BitcoinServer_gui_label_set},
    { "-server_id",_wrap_BitcoinServer_server_id_get, _wrap_BitcoinServer_server_id_set},
    { "-server_type",_wrap_BitcoinServer_server_type_get, _wrap_BitcoinServer_server_type_set},
    { "-server_host",_wrap_BitcoinServer_server_host_get, _wrap_BitcoinServer_server_host_set},
    { "-server_port",_wrap_BitcoinServer_server_port_get, _wrap_BitcoinServer_server_port_set},
    { "-bitcoin_username",_wrap_BitcoinServer_bitcoin_username_get, _wrap_BitcoinServer_bitcoin_username_set},
    { "-bitcoin_password",_wrap_BitcoinServer_bitcoin_password_get, _wrap_BitcoinServer_bitcoin_password_set},
    {0,0,0}
};
static swig_class *swig_OTDB_BitcoinServer_bases[] = {0,0};
static const char * swig_OTDB_BitcoinServer_base_names[] = {"OTDB::Server *",0};
static swig_class _wrap_class_OTDB_BitcoinServer = { "BitcoinServer", &SWIGTYPE_p_OTDB__BitcoinServer,0, swig_delete_BitcoinServer, swig_OTDB_BitcoinServer_methods, swig_OTDB_BitcoinServer_attributes, swig_OTDB_BitcoinServer_bases,swig_OTDB_BitcoinServer_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_RippleServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_RippleServer self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RippleServer" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:RippleServer_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_gui_label_set" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RippleServer_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RippleServer_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:RippleServer_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_gui_label_get" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_server_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:RippleServer_server_id_set self server_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_server_id_set" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RippleServer_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RippleServer_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_server_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:RippleServer_server_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_server_id_get" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  result = (std::string *) & ((arg1)->server_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_server_type_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:RippleServer_server_type_set self server_type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_server_type_set" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RippleServer_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RippleServer_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_type = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_server_type_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:RippleServer_server_type_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_server_type_get" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  result = (std::string *) & ((arg1)->server_type);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_server_host_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:RippleServer_server_host_set self server_host ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_server_host_set" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RippleServer_server_host_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RippleServer_server_host_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_host = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_server_host_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:RippleServer_server_host_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_server_host_get" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  result = (std::string *) & ((arg1)->server_host);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_server_port_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:RippleServer_server_port_set self server_port ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_server_port_set" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RippleServer_server_port_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RippleServer_server_port_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_port = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_server_port_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:RippleServer_server_port_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_server_port_get" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  result = (std::string *) & ((arg1)->server_port);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_ripple_username_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:RippleServer_ripple_username_set self ripple_username ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_ripple_username_set" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RippleServer_ripple_username_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RippleServer_ripple_username_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->ripple_username = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_ripple_username_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:RippleServer_ripple_username_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_ripple_username_get" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  result = (std::string *) & ((arg1)->ripple_username);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_ripple_password_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:RippleServer_ripple_password_set self ripple_password ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_ripple_password_set" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RippleServer_ripple_password_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RippleServer_ripple_password_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->ripple_password = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_ripple_password_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:RippleServer_ripple_password_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_ripple_password_get" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  result = (std::string *) & ((arg1)->ripple_password);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_namefield_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:RippleServer_namefield_id_set self namefield_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_namefield_id_set" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RippleServer_namefield_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RippleServer_namefield_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->namefield_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_namefield_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:RippleServer_namefield_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_namefield_id_get" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  result = (std::string *) & ((arg1)->namefield_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_passfield_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:RippleServer_passfield_id_set self passfield_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_passfield_id_set" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RippleServer_passfield_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RippleServer_passfield_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->passfield_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_passfield_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::RippleServer *arg1 = (OTDB::RippleServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:RippleServer_passfield_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__RippleServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_passfield_id_get" "', argument " "1"" of type '" "OTDB::RippleServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::RippleServer * >(argp1);
  result = (std::string *) & ((arg1)->passfield_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_RippleServer_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::RippleServer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:RippleServer_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RippleServer_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::RippleServer *)OTDB::RippleServer::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__RippleServer,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_RippleServer(void *obj) {
OTDB::RippleServer *arg1 = (OTDB::RippleServer *) obj;
delete arg1;
}
static swig_method swig_OTDB_RippleServer_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_RippleServer_attributes[] = {
    { "-gui_label",_wrap_RippleServer_gui_label_get, _wrap_RippleServer_gui_label_set},
    { "-server_id",_wrap_RippleServer_server_id_get, _wrap_RippleServer_server_id_set},
    { "-server_type",_wrap_RippleServer_server_type_get, _wrap_RippleServer_server_type_set},
    { "-server_host",_wrap_RippleServer_server_host_get, _wrap_RippleServer_server_host_set},
    { "-server_port",_wrap_RippleServer_server_port_get, _wrap_RippleServer_server_port_set},
    { "-ripple_username",_wrap_RippleServer_ripple_username_get, _wrap_RippleServer_ripple_username_set},
    { "-ripple_password",_wrap_RippleServer_ripple_password_get, _wrap_RippleServer_ripple_password_set},
    { "-namefield_id",_wrap_RippleServer_namefield_id_get, _wrap_RippleServer_namefield_id_set},
    { "-passfield_id",_wrap_RippleServer_passfield_id_get, _wrap_RippleServer_passfield_id_set},
    {0,0,0}
};
static swig_class *swig_OTDB_RippleServer_bases[] = {0,0};
static const char * swig_OTDB_RippleServer_base_names[] = {"OTDB::Server *",0};
static swig_class _wrap_class_OTDB_RippleServer = { "RippleServer", &SWIGTYPE_p_OTDB__RippleServer,0, swig_delete_RippleServer, swig_OTDB_RippleServer_methods, swig_OTDB_RippleServer_attributes, swig_OTDB_RippleServer_bases,swig_OTDB_RippleServer_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_LoomServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_LoomServer self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LoomServer" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:LoomServer_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_gui_label_set" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LoomServer_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoomServer_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:LoomServer_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_gui_label_get" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_server_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:LoomServer_server_id_set self server_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_server_id_set" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LoomServer_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoomServer_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_server_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:LoomServer_server_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_server_id_get" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  result = (std::string *) & ((arg1)->server_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_server_type_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:LoomServer_server_type_set self server_type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_server_type_set" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LoomServer_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoomServer_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_type = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_server_type_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:LoomServer_server_type_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_server_type_get" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  result = (std::string *) & ((arg1)->server_type);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_server_host_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:LoomServer_server_host_set self server_host ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_server_host_set" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LoomServer_server_host_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoomServer_server_host_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_host = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_server_host_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:LoomServer_server_host_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_server_host_get" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  result = (std::string *) & ((arg1)->server_host);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_server_port_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:LoomServer_server_port_set self server_port ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_server_port_set" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LoomServer_server_port_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoomServer_server_port_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_port = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_server_port_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:LoomServer_server_port_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_server_port_get" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  result = (std::string *) & ((arg1)->server_port);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_loom_username_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:LoomServer_loom_username_set self loom_username ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_loom_username_set" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LoomServer_loom_username_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoomServer_loom_username_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->loom_username = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_loom_username_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:LoomServer_loom_username_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_loom_username_get" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  result = (std::string *) & ((arg1)->loom_username);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_namefield_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:LoomServer_namefield_id_set self namefield_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_namefield_id_set" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LoomServer_namefield_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoomServer_namefield_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->namefield_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_namefield_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::LoomServer *arg1 = (OTDB::LoomServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:LoomServer_namefield_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__LoomServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_namefield_id_get" "', argument " "1"" of type '" "OTDB::LoomServer *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::LoomServer * >(argp1);
  result = (std::string *) & ((arg1)->namefield_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_LoomServer_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::LoomServer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:LoomServer_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoomServer_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::LoomServer *)OTDB::LoomServer::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__LoomServer,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_LoomServer(void *obj) {
OTDB::LoomServer *arg1 = (OTDB::LoomServer *) obj;
delete arg1;
}
static swig_method swig_OTDB_LoomServer_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_LoomServer_attributes[] = {
    { "-gui_label",_wrap_LoomServer_gui_label_get, _wrap_LoomServer_gui_label_set},
    { "-server_id",_wrap_LoomServer_server_id_get, _wrap_LoomServer_server_id_set},
    { "-server_type",_wrap_LoomServer_server_type_get, _wrap_LoomServer_server_type_set},
    { "-server_host",_wrap_LoomServer_server_host_get, _wrap_LoomServer_server_host_set},
    { "-server_port",_wrap_LoomServer_server_port_get, _wrap_LoomServer_server_port_set},
    { "-loom_username",_wrap_LoomServer_loom_username_get, _wrap_LoomServer_loom_username_set},
    { "-namefield_id",_wrap_LoomServer_namefield_id_get, _wrap_LoomServer_namefield_id_set},
    {0,0,0}
};
static swig_class *swig_OTDB_LoomServer_bases[] = {0,0};
static const char * swig_OTDB_LoomServer_base_names[] = {"OTDB::Server *",0};
static swig_class _wrap_class_OTDB_LoomServer = { "LoomServer", &SWIGTYPE_p_OTDB__LoomServer,0, swig_delete_LoomServer, swig_OTDB_LoomServer_methods, swig_OTDB_LoomServer_attributes, swig_OTDB_LoomServer_bases,swig_OTDB_LoomServer_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_ContactNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_ContactNym self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ContactNym" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactNym_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_gui_label_set" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactNym_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactNym_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactNym_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_gui_label_get" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_nym_type_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactNym_nym_type_set self nym_type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_nym_type_set" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactNym_nym_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactNym_nym_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->nym_type = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_nym_type_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactNym_nym_type_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_nym_type_get" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  result = (std::string *) & ((arg1)->nym_type);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_nym_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactNym_nym_id_set self nym_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_nym_id_set" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactNym_nym_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactNym_nym_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->nym_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_nym_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactNym_nym_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_nym_id_get" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  result = (std::string *) & ((arg1)->nym_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_public_key_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactNym_public_key_set self public_key ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_public_key_set" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactNym_public_key_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactNym_public_key_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->public_key = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_public_key_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactNym_public_key_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_public_key_get" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  result = (std::string *) & ((arg1)->public_key);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_memo_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactNym_memo_set self memo ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_memo_set" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactNym_memo_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactNym_memo_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->memo = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_memo_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactNym_memo_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_memo_get" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  result = (std::string *) & ((arg1)->memo);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_GetServerInfoCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactNym_GetServerInfoCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_GetServerInfoCount" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  result = (arg1)->GetServerInfoCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_GetServerInfo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::ServerInfo *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactNym_GetServerInfo self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_GetServerInfo" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContactNym_GetServerInfo" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::ServerInfo *)(arg1)->GetServerInfo(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__ServerInfo,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_RemoveServerInfo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactNym_RemoveServerInfo self nIndexServerInfo ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_RemoveServerInfo" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContactNym_RemoveServerInfo" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveServerInfo(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_AddServerInfo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactNym *arg1 = (OTDB::ContactNym *) 0 ;
  OTDB::ServerInfo *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactNym_AddServerInfo self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactNym, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_AddServerInfo" "', argument " "1"" of type '" "OTDB::ContactNym *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactNym * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__ServerInfo,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactNym_AddServerInfo" "', argument " "2"" of type '" "OTDB::ServerInfo &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactNym_AddServerInfo" "', argument " "2"" of type '" "OTDB::ServerInfo &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::ServerInfo * >(argp2);
  result = (bool)(arg1)->AddServerInfo(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactNym_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::ContactNym *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactNym_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactNym_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::ContactNym *)OTDB::ContactNym::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__ContactNym,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_ContactNym(void *obj) {
OTDB::ContactNym *arg1 = (OTDB::ContactNym *) obj;
delete arg1;
}
static swig_method swig_OTDB_ContactNym_methods[] = {
    {"GetServerInfoCount", _wrap_ContactNym_GetServerInfoCount}, 
    {"GetServerInfo", _wrap_ContactNym_GetServerInfo}, 
    {"RemoveServerInfo", _wrap_ContactNym_RemoveServerInfo}, 
    {"AddServerInfo", _wrap_ContactNym_AddServerInfo}, 
    {0,0}
};
static swig_attribute swig_OTDB_ContactNym_attributes[] = {
    { "-gui_label",_wrap_ContactNym_gui_label_get, _wrap_ContactNym_gui_label_set},
    { "-nym_type",_wrap_ContactNym_nym_type_get, _wrap_ContactNym_nym_type_set},
    { "-nym_id",_wrap_ContactNym_nym_id_get, _wrap_ContactNym_nym_id_set},
    { "-public_key",_wrap_ContactNym_public_key_get, _wrap_ContactNym_public_key_set},
    { "-memo",_wrap_ContactNym_memo_get, _wrap_ContactNym_memo_set},
    {0,0,0}
};
static swig_class *swig_OTDB_ContactNym_bases[] = {0,0};
static const char * swig_OTDB_ContactNym_base_names[] = {"OTDB::Displayable *",0};
static swig_class _wrap_class_OTDB_ContactNym = { "ContactNym", &SWIGTYPE_p_OTDB__ContactNym,0, swig_delete_ContactNym, swig_OTDB_ContactNym_methods, swig_OTDB_ContactNym_attributes, swig_OTDB_ContactNym_bases,swig_OTDB_ContactNym_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_WalletData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_WalletData self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_WalletData" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_GetBitcoinServerCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:WalletData_GetBitcoinServerCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_GetBitcoinServerCount" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  result = (arg1)->GetBitcoinServerCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_GetBitcoinServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::BitcoinServer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_GetBitcoinServer self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_GetBitcoinServer" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WalletData_GetBitcoinServer" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::BitcoinServer *)(arg1)->GetBitcoinServer(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__BitcoinServer,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_RemoveBitcoinServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_RemoveBitcoinServer self nIndexBitcoinServer ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_RemoveBitcoinServer" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WalletData_RemoveBitcoinServer" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveBitcoinServer(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_AddBitcoinServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  OTDB::BitcoinServer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_AddBitcoinServer self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_AddBitcoinServer" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__BitcoinServer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WalletData_AddBitcoinServer" "', argument " "2"" of type '" "OTDB::BitcoinServer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WalletData_AddBitcoinServer" "', argument " "2"" of type '" "OTDB::BitcoinServer &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::BitcoinServer * >(argp2);
  result = (bool)(arg1)->AddBitcoinServer(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_GetBitcoinAcctCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:WalletData_GetBitcoinAcctCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_GetBitcoinAcctCount" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  result = (arg1)->GetBitcoinAcctCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_GetBitcoinAcct(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::BitcoinAcct *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_GetBitcoinAcct self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_GetBitcoinAcct" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WalletData_GetBitcoinAcct" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::BitcoinAcct *)(arg1)->GetBitcoinAcct(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__BitcoinAcct,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_RemoveBitcoinAcct(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_RemoveBitcoinAcct self nIndexBitcoinAcct ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_RemoveBitcoinAcct" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WalletData_RemoveBitcoinAcct" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveBitcoinAcct(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_AddBitcoinAcct(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  OTDB::BitcoinAcct *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_AddBitcoinAcct self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_AddBitcoinAcct" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__BitcoinAcct,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WalletData_AddBitcoinAcct" "', argument " "2"" of type '" "OTDB::BitcoinAcct &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WalletData_AddBitcoinAcct" "', argument " "2"" of type '" "OTDB::BitcoinAcct &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::BitcoinAcct * >(argp2);
  result = (bool)(arg1)->AddBitcoinAcct(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_GetRippleServerCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:WalletData_GetRippleServerCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_GetRippleServerCount" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  result = (arg1)->GetRippleServerCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_GetRippleServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::RippleServer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_GetRippleServer self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_GetRippleServer" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WalletData_GetRippleServer" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::RippleServer *)(arg1)->GetRippleServer(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__RippleServer,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_RemoveRippleServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_RemoveRippleServer self nIndexRippleServer ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_RemoveRippleServer" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WalletData_RemoveRippleServer" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveRippleServer(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_AddRippleServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  OTDB::RippleServer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_AddRippleServer self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_AddRippleServer" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__RippleServer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WalletData_AddRippleServer" "', argument " "2"" of type '" "OTDB::RippleServer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WalletData_AddRippleServer" "', argument " "2"" of type '" "OTDB::RippleServer &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::RippleServer * >(argp2);
  result = (bool)(arg1)->AddRippleServer(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_GetLoomServerCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:WalletData_GetLoomServerCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_GetLoomServerCount" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  result = (arg1)->GetLoomServerCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_GetLoomServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::LoomServer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_GetLoomServer self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_GetLoomServer" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WalletData_GetLoomServer" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::LoomServer *)(arg1)->GetLoomServer(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__LoomServer,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_RemoveLoomServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_RemoveLoomServer self nIndexLoomServer ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_RemoveLoomServer" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WalletData_RemoveLoomServer" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveLoomServer(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_AddLoomServer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::WalletData *arg1 = (OTDB::WalletData *) 0 ;
  OTDB::LoomServer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:WalletData_AddLoomServer self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__WalletData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_AddLoomServer" "', argument " "1"" of type '" "OTDB::WalletData *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::WalletData * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__LoomServer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WalletData_AddLoomServer" "', argument " "2"" of type '" "OTDB::LoomServer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WalletData_AddLoomServer" "', argument " "2"" of type '" "OTDB::LoomServer &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::LoomServer * >(argp2);
  result = (bool)(arg1)->AddLoomServer(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_WalletData_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::WalletData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:WalletData_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WalletData_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::WalletData *)OTDB::WalletData::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__WalletData,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_WalletData(void *obj) {
OTDB::WalletData *arg1 = (OTDB::WalletData *) obj;
delete arg1;
}
static swig_method swig_OTDB_WalletData_methods[] = {
    {"GetBitcoinServerCount", _wrap_WalletData_GetBitcoinServerCount}, 
    {"GetBitcoinServer", _wrap_WalletData_GetBitcoinServer}, 
    {"RemoveBitcoinServer", _wrap_WalletData_RemoveBitcoinServer}, 
    {"AddBitcoinServer", _wrap_WalletData_AddBitcoinServer}, 
    {"GetBitcoinAcctCount", _wrap_WalletData_GetBitcoinAcctCount}, 
    {"GetBitcoinAcct", _wrap_WalletData_GetBitcoinAcct}, 
    {"RemoveBitcoinAcct", _wrap_WalletData_RemoveBitcoinAcct}, 
    {"AddBitcoinAcct", _wrap_WalletData_AddBitcoinAcct}, 
    {"GetRippleServerCount", _wrap_WalletData_GetRippleServerCount}, 
    {"GetRippleServer", _wrap_WalletData_GetRippleServer}, 
    {"RemoveRippleServer", _wrap_WalletData_RemoveRippleServer}, 
    {"AddRippleServer", _wrap_WalletData_AddRippleServer}, 
    {"GetLoomServerCount", _wrap_WalletData_GetLoomServerCount}, 
    {"GetLoomServer", _wrap_WalletData_GetLoomServer}, 
    {"RemoveLoomServer", _wrap_WalletData_RemoveLoomServer}, 
    {"AddLoomServer", _wrap_WalletData_AddLoomServer}, 
    {0,0}
};
static swig_attribute swig_OTDB_WalletData_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTDB_WalletData_bases[] = {0,0};
static const char * swig_OTDB_WalletData_base_names[] = {"OTDB::Storable *",0};
static swig_class _wrap_class_OTDB_WalletData = { "WalletData", &SWIGTYPE_p_OTDB__WalletData,0, swig_delete_WalletData, swig_OTDB_WalletData_methods, swig_OTDB_WalletData_attributes, swig_OTDB_WalletData_bases,swig_OTDB_WalletData_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_ContactAcct(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_ContactAcct self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ContactAcct" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactAcct_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_gui_label_set" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactAcct_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactAcct_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactAcct_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_gui_label_get" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_server_type_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactAcct_server_type_set self server_type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_server_type_set" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactAcct_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactAcct_server_type_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_type = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_server_type_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactAcct_server_type_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_server_type_get" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  result = (std::string *) & ((arg1)->server_type);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_server_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactAcct_server_id_set self server_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_server_id_set" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactAcct_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactAcct_server_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->server_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_server_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactAcct_server_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_server_id_get" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  result = (std::string *) & ((arg1)->server_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_asset_type_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactAcct_asset_type_id_set self asset_type_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_asset_type_id_set" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactAcct_asset_type_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactAcct_asset_type_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->asset_type_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_asset_type_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactAcct_asset_type_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_asset_type_id_get" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  result = (std::string *) & ((arg1)->asset_type_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_acct_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactAcct_acct_id_set self acct_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_acct_id_set" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactAcct_acct_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactAcct_acct_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->acct_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_acct_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactAcct_acct_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_acct_id_get" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  result = (std::string *) & ((arg1)->acct_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_nym_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactAcct_nym_id_set self nym_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_nym_id_set" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactAcct_nym_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactAcct_nym_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->nym_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_nym_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactAcct_nym_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_nym_id_get" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  result = (std::string *) & ((arg1)->nym_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_memo_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactAcct_memo_set self memo ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_memo_set" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactAcct_memo_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactAcct_memo_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->memo = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_memo_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactAcct_memo_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_memo_get" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  result = (std::string *) & ((arg1)->memo);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_public_key_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:ContactAcct_public_key_set self public_key ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_public_key_set" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContactAcct_public_key_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContactAcct_public_key_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->public_key = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_public_key_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactAcct_public_key_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__ContactAcct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_public_key_get" "', argument " "1"" of type '" "OTDB::ContactAcct *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::ContactAcct * >(argp1);
  result = (std::string *) & ((arg1)->public_key);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_ContactAcct_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::ContactAcct *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:ContactAcct_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContactAcct_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::ContactAcct *)OTDB::ContactAcct::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__ContactAcct,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_ContactAcct(void *obj) {
OTDB::ContactAcct *arg1 = (OTDB::ContactAcct *) obj;
delete arg1;
}
static swig_method swig_OTDB_ContactAcct_methods[] = {
    {0,0}
};
static swig_attribute swig_OTDB_ContactAcct_attributes[] = {
    { "-gui_label",_wrap_ContactAcct_gui_label_get, _wrap_ContactAcct_gui_label_set},
    { "-server_type",_wrap_ContactAcct_server_type_get, _wrap_ContactAcct_server_type_set},
    { "-server_id",_wrap_ContactAcct_server_id_get, _wrap_ContactAcct_server_id_set},
    { "-asset_type_id",_wrap_ContactAcct_asset_type_id_get, _wrap_ContactAcct_asset_type_id_set},
    { "-acct_id",_wrap_ContactAcct_acct_id_get, _wrap_ContactAcct_acct_id_set},
    { "-nym_id",_wrap_ContactAcct_nym_id_get, _wrap_ContactAcct_nym_id_set},
    { "-memo",_wrap_ContactAcct_memo_get, _wrap_ContactAcct_memo_set},
    { "-public_key",_wrap_ContactAcct_public_key_get, _wrap_ContactAcct_public_key_set},
    {0,0,0}
};
static swig_class *swig_OTDB_ContactAcct_bases[] = {0,0};
static const char * swig_OTDB_ContactAcct_base_names[] = {"OTDB::Displayable *",0};
static swig_class _wrap_class_OTDB_ContactAcct = { "ContactAcct", &SWIGTYPE_p_OTDB__ContactAcct,0, swig_delete_ContactAcct, swig_OTDB_ContactAcct_methods, swig_OTDB_ContactAcct_attributes, swig_OTDB_ContactAcct_bases,swig_OTDB_ContactAcct_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_Contact(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_Contact self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Contact" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_gui_label_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Contact_gui_label_set self gui_label ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_gui_label_set" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Contact_gui_label_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->gui_label = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_gui_label_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Contact_gui_label_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_gui_label_get" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  result = (std::string *) & ((arg1)->gui_label);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_contact_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Contact_contact_id_set self contact_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_contact_id_set" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_contact_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Contact_contact_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->contact_id = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_contact_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Contact_contact_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_contact_id_get" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  result = (std::string *) & ((arg1)->contact_id);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_email_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Contact_email_set self email ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_email_set" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_email_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Contact_email_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->email = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_email_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Contact_email_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_email_get" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  result = (std::string *) & ((arg1)->email);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_memo_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Contact_memo_set self memo ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_memo_set" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_memo_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Contact_memo_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->memo = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_memo_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Contact_memo_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_memo_get" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  result = (std::string *) & ((arg1)->memo);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_public_key_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Contact_public_key_set self public_key ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_public_key_set" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_public_key_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Contact_public_key_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->public_key = *arg2;
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_public_key_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Contact_public_key_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_public_key_get" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  result = (std::string *) & ((arg1)->public_key);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_GetContactNymCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Contact_GetContactNymCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_GetContactNymCount" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  result = (arg1)->GetContactNymCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_GetContactNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::ContactNym *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Contact_GetContactNym self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_GetContactNym" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Contact_GetContactNym" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::ContactNym *)(arg1)->GetContactNym(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__ContactNym,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_RemoveContactNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Contact_RemoveContactNym self nIndexContactNym ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_RemoveContactNym" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Contact_RemoveContactNym" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveContactNym(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_AddContactNym(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  OTDB::ContactNym *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Contact_AddContactNym self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_AddContactNym" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__ContactNym,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_AddContactNym" "', argument " "2"" of type '" "OTDB::ContactNym &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Contact_AddContactNym" "', argument " "2"" of type '" "OTDB::ContactNym &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::ContactNym * >(argp2);
  result = (bool)(arg1)->AddContactNym(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_GetContactAcctCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Contact_GetContactAcctCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_GetContactAcctCount" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  result = (arg1)->GetContactAcctCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_GetContactAcct(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::ContactAcct *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Contact_GetContactAcct self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_GetContactAcct" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Contact_GetContactAcct" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::ContactAcct *)(arg1)->GetContactAcct(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__ContactAcct,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_RemoveContactAcct(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Contact_RemoveContactAcct self nIndexContactAcct ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_RemoveContactAcct" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Contact_RemoveContactAcct" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveContactAcct(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_AddContactAcct(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Contact *arg1 = (OTDB::Contact *) 0 ;
  OTDB::ContactAcct *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:Contact_AddContactAcct self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_AddContactAcct" "', argument " "1"" of type '" "OTDB::Contact *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Contact * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__ContactAcct,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_AddContactAcct" "', argument " "2"" of type '" "OTDB::ContactAcct &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Contact_AddContactAcct" "', argument " "2"" of type '" "OTDB::ContactAcct &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::ContactAcct * >(argp2);
  result = (bool)(arg1)->AddContactAcct(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_Contact_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::Contact *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:Contact_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::Contact *)OTDB::Contact::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Contact,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_Contact(void *obj) {
OTDB::Contact *arg1 = (OTDB::Contact *) obj;
delete arg1;
}
static swig_method swig_OTDB_Contact_methods[] = {
    {"GetContactNymCount", _wrap_Contact_GetContactNymCount}, 
    {"GetContactNym", _wrap_Contact_GetContactNym}, 
    {"RemoveContactNym", _wrap_Contact_RemoveContactNym}, 
    {"AddContactNym", _wrap_Contact_AddContactNym}, 
    {"GetContactAcctCount", _wrap_Contact_GetContactAcctCount}, 
    {"GetContactAcct", _wrap_Contact_GetContactAcct}, 
    {"RemoveContactAcct", _wrap_Contact_RemoveContactAcct}, 
    {"AddContactAcct", _wrap_Contact_AddContactAcct}, 
    {0,0}
};
static swig_attribute swig_OTDB_Contact_attributes[] = {
    { "-gui_label",_wrap_Contact_gui_label_get, _wrap_Contact_gui_label_set},
    { "-contact_id",_wrap_Contact_contact_id_get, _wrap_Contact_contact_id_set},
    { "-email",_wrap_Contact_email_get, _wrap_Contact_email_set},
    { "-memo",_wrap_Contact_memo_get, _wrap_Contact_memo_set},
    { "-public_key",_wrap_Contact_public_key_get, _wrap_Contact_public_key_set},
    {0,0,0}
};
static swig_class *swig_OTDB_Contact_bases[] = {0,0};
static const char * swig_OTDB_Contact_base_names[] = {"OTDB::Displayable *",0};
static swig_class _wrap_class_OTDB_Contact = { "Contact", &SWIGTYPE_p_OTDB__Contact,0, swig_delete_Contact, swig_OTDB_Contact_methods, swig_OTDB_Contact_attributes, swig_OTDB_Contact_bases,swig_OTDB_Contact_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_AddressBook(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AddressBook *arg1 = (OTDB::AddressBook *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_AddressBook self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AddressBook, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AddressBook" "', argument " "1"" of type '" "OTDB::AddressBook *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AddressBook * >(argp1);
  delete arg1;
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AddressBook_GetContactCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AddressBook *arg1 = (OTDB::AddressBook *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:AddressBook_GetContactCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AddressBook, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddressBook_GetContactCount" "', argument " "1"" of type '" "OTDB::AddressBook *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AddressBook * >(argp1);
  result = (arg1)->GetContactCount();
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AddressBook_GetContact(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AddressBook *arg1 = (OTDB::AddressBook *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  OTDB::Contact *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:AddressBook_GetContact self nIndex ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AddressBook, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddressBook_GetContact" "', argument " "1"" of type '" "OTDB::AddressBook *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AddressBook * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AddressBook_GetContact" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (OTDB::Contact *)(arg1)->GetContact(arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__Contact,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AddressBook_RemoveContact(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AddressBook *arg1 = (OTDB::AddressBook *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:AddressBook_RemoveContact self nIndexContact ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AddressBook, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddressBook_RemoveContact" "', argument " "1"" of type '" "OTDB::AddressBook *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AddressBook * >(argp1);
  ecode2 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AddressBook_RemoveContact" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->RemoveContact(arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AddressBook_AddContact(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::AddressBook *arg1 = (OTDB::AddressBook *) 0 ;
  OTDB::Contact *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:AddressBook_AddContact self disownObject ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__AddressBook, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddressBook_AddContact" "', argument " "1"" of type '" "OTDB::AddressBook *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::AddressBook * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_OTDB__Contact,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AddressBook_AddContact" "', argument " "2"" of type '" "OTDB::Contact &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AddressBook_AddContact" "', argument " "2"" of type '" "OTDB::Contact &""'"); 
  }
  arg2 = reinterpret_cast< OTDB::Contact * >(argp2);
  result = (bool)(arg1)->AddContact(*arg2);
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_AddressBook_ot_dynamic_cast(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  OTDB::Storable *arg1 = (OTDB::Storable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  OTDB::AddressBook *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:AddressBook_ot_dynamic_cast pObject ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_OTDB__Storable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddressBook_ot_dynamic_cast" "', argument " "1"" of type '" "OTDB::Storable *""'"); 
  }
  arg1 = reinterpret_cast< OTDB::Storable * >(argp1);
  result = (OTDB::AddressBook *)OTDB::AddressBook::ot_dynamic_cast(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_OTDB__AddressBook,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_AddressBook(void *obj) {
OTDB::AddressBook *arg1 = (OTDB::AddressBook *) obj;
delete arg1;
}
static swig_method swig_OTDB_AddressBook_methods[] = {
    {"GetContactCount", _wrap_AddressBook_GetContactCount}, 
    {"GetContact", _wrap_AddressBook_GetContact}, 
    {"RemoveContact", _wrap_AddressBook_RemoveContact}, 
    {"AddContact", _wrap_AddressBook_AddContact}, 
    {0,0}
};
static swig_attribute swig_OTDB_AddressBook_attributes[] = {
    {0,0,0}
};
static swig_class *swig_OTDB_AddressBook_bases[] = {0,0};
static const char * swig_OTDB_AddressBook_base_names[] = {"OTDB::Storable *",0};
static swig_class _wrap_class_OTDB_AddressBook = { "AddressBook", &SWIGTYPE_p_OTDB__AddressBook,0, swig_delete_AddressBook, swig_OTDB_AddressBook_methods, swig_OTDB_AddressBook_attributes, swig_OTDB_AddressBook_bases,swig_OTDB_AddressBook_base_names, &swig_module };

static swig_command_info swig_commands[] = {
    { SWIG_prefix "OTPasswordData_isForNormalNym", (swig_wrapper_func) _wrap_OTPasswordData_isForNormalNym, NULL},
    { SWIG_prefix "OTPasswordData_isForMasterKey", (swig_wrapper_func) _wrap_OTPasswordData_isForMasterKey, NULL},
    { SWIG_prefix "OTPasswordData_GetDisplayString", (swig_wrapper_func) _wrap_OTPasswordData_GetDisplayString, NULL},
    { SWIG_prefix "OTPasswordData_isUsingOldSystem", (swig_wrapper_func) _wrap_OTPasswordData_isUsingOldSystem, NULL},
    { SWIG_prefix "OTPasswordData_setUsingOldSystem", (swig_wrapper_func) _wrap_OTPasswordData_setUsingOldSystem, NULL},
    { SWIG_prefix "OTPasswordData_GetMasterPW", (swig_wrapper_func) _wrap_OTPasswordData_GetMasterPW, NULL},
    { SWIG_prefix "new_OTPasswordData", (swig_wrapper_func) _wrap_new_OTPasswordData, NULL},
    { SWIG_prefix "delete_OTPasswordData", (swig_wrapper_func) _wrap_delete_OTPasswordData, NULL},
    { SWIG_prefix "OTPasswordData", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTPasswordData},
    { SWIG_prefix "OTPassword_m_theBlockSize_get", (swig_wrapper_func) _wrap_OTPassword_m_theBlockSize_get, NULL},
    { SWIG_prefix "OTPassword_isPassword", (swig_wrapper_func) _wrap_OTPassword_isPassword, NULL},
    { SWIG_prefix "OTPassword_getPassword_uint8", (swig_wrapper_func) _wrap_OTPassword_getPassword_uint8, NULL},
    { SWIG_prefix "OTPassword_getPassword", (swig_wrapper_func) _wrap_OTPassword_getPassword, NULL},
    { SWIG_prefix "OTPassword_getPasswordWritable", (swig_wrapper_func) _wrap_OTPassword_getPasswordWritable, NULL},
    { SWIG_prefix "OTPassword_getPasswordWritable_char", (swig_wrapper_func) _wrap_OTPassword_getPasswordWritable_char, NULL},
    { SWIG_prefix "OTPassword_setPassword", (swig_wrapper_func) _wrap_OTPassword_setPassword, NULL},
    { SWIG_prefix "OTPassword_setPassword_uint8", (swig_wrapper_func) _wrap_OTPassword_setPassword_uint8, NULL},
    { SWIG_prefix "OTPassword_addChar", (swig_wrapper_func) _wrap_OTPassword_addChar, NULL},
    { SWIG_prefix "OTPassword_randomizePassword_uint8", (swig_wrapper_func) _wrap_OTPassword_randomizePassword_uint8, NULL},
    { SWIG_prefix "OTPassword_randomizePassword", (swig_wrapper_func) _wrap_OTPassword_randomizePassword, NULL},
    { SWIG_prefix "OTPassword_isMemory", (swig_wrapper_func) _wrap_OTPassword_isMemory, NULL},
    { SWIG_prefix "OTPassword_getMemory", (swig_wrapper_func) _wrap_OTPassword_getMemory, NULL},
    { SWIG_prefix "OTPassword_getMemory_uint8", (swig_wrapper_func) _wrap_OTPassword_getMemory_uint8, NULL},
    { SWIG_prefix "OTPassword_getMemoryWritable", (swig_wrapper_func) _wrap_OTPassword_getMemoryWritable, NULL},
    { SWIG_prefix "OTPassword_setMemory", (swig_wrapper_func) _wrap_OTPassword_setMemory, NULL},
    { SWIG_prefix "OTPassword_addMemory", (swig_wrapper_func) _wrap_OTPassword_addMemory, NULL},
    { SWIG_prefix "OTPassword_randomizeMemory_uint8", (swig_wrapper_func) _wrap_OTPassword_randomizeMemory_uint8, NULL},
    { SWIG_prefix "OTPassword_randomizeMemory", (swig_wrapper_func) _wrap_OTPassword_randomizeMemory, NULL},
    { SWIG_prefix "OTPassword_getBlockSize", (swig_wrapper_func) _wrap_OTPassword_getBlockSize, NULL},
    { SWIG_prefix "OTPassword_Compare", (swig_wrapper_func) _wrap_OTPassword_Compare, NULL},
    { SWIG_prefix "OTPassword_getPasswordSize", (swig_wrapper_func) _wrap_OTPassword_getPasswordSize, NULL},
    { SWIG_prefix "OTPassword_getMemorySize", (swig_wrapper_func) _wrap_OTPassword_getMemorySize, NULL},
    { SWIG_prefix "OTPassword_zeroMemory", (swig_wrapper_func) _wrap_OTPassword_zeroMemory, NULL},
    { SWIG_prefix "OTPassword_safe_memcpy", (swig_wrapper_func) _wrap_OTPassword_safe_memcpy, NULL},
    { SWIG_prefix "OTPassword_=", (swig_wrapper_func) _wrap_OTPassword_e___, NULL},
    { SWIG_prefix "new_OTPassword", (swig_wrapper_func) _wrap_new_OTPassword, NULL},
    { SWIG_prefix "delete_OTPassword", (swig_wrapper_func) _wrap_delete_OTPassword, NULL},
    { SWIG_prefix "OTPassword", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTPassword},
    { SWIG_prefix "new_OTCallback", (swig_wrapper_func) _wrap_new_OTCallback, NULL},
    { SWIG_prefix "delete_OTCallback", (swig_wrapper_func) _wrap_delete_OTCallback, NULL},
    { SWIG_prefix "OTCallback_runOne", (swig_wrapper_func) _wrap_OTCallback_runOne, NULL},
    { SWIG_prefix "OTCallback_runTwo", (swig_wrapper_func) _wrap_OTCallback_runTwo, NULL},
    { SWIG_prefix "OTCallback", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTCallback},
    { SWIG_prefix "new_OTCaller", (swig_wrapper_func) _wrap_new_OTCaller, NULL},
    { SWIG_prefix "delete_OTCaller", (swig_wrapper_func) _wrap_delete_OTCaller, NULL},
    { SWIG_prefix "OTCaller_GetPassword", (swig_wrapper_func) _wrap_OTCaller_GetPassword, NULL},
    { SWIG_prefix "OTCaller_ZeroOutPassword", (swig_wrapper_func) _wrap_OTCaller_ZeroOutPassword, NULL},
    { SWIG_prefix "OTCaller_GetDisplay", (swig_wrapper_func) _wrap_OTCaller_GetDisplay, NULL},
    { SWIG_prefix "OTCaller_SetDisplay", (swig_wrapper_func) _wrap_OTCaller_SetDisplay, NULL},
    { SWIG_prefix "OTCaller_delCallback", (swig_wrapper_func) _wrap_OTCaller_delCallback, NULL},
    { SWIG_prefix "OTCaller_setCallback", (swig_wrapper_func) _wrap_OTCaller_setCallback, NULL},
    { SWIG_prefix "OTCaller_isCallbackSet", (swig_wrapper_func) _wrap_OTCaller_isCallbackSet, NULL},
    { SWIG_prefix "OTCaller_callOne", (swig_wrapper_func) _wrap_OTCaller_callOne, NULL},
    { SWIG_prefix "OTCaller_callTwo", (swig_wrapper_func) _wrap_OTCaller_callTwo, NULL},
    { SWIG_prefix "OTCaller", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTCaller},
    { SWIG_prefix "OT_API_Set_PasswordCallback", (swig_wrapper_func) _wrap_OT_API_Set_PasswordCallback, NULL},
    { SWIG_prefix "OT_API_Init", (swig_wrapper_func) _wrap_OT_API_Init, NULL},
    { SWIG_prefix "OT_API_SetWallet", (swig_wrapper_func) _wrap_OT_API_SetWallet, NULL},
    { SWIG_prefix "OT_API_LoadWallet", (swig_wrapper_func) _wrap_OT_API_LoadWallet, NULL},
    { SWIG_prefix "OT_API_SwitchWallet", (swig_wrapper_func) _wrap_OT_API_SwitchWallet, NULL},
    { SWIG_prefix "OT_API_Output", (swig_wrapper_func) _wrap_OT_API_Output, NULL},
    { SWIG_prefix "OT_API_GetTime", (swig_wrapper_func) _wrap_OT_API_GetTime, NULL},
    { SWIG_prefix "OT_API_NumList_Add", (swig_wrapper_func) _wrap_OT_API_NumList_Add, NULL},
    { SWIG_prefix "OT_API_NumList_Remove", (swig_wrapper_func) _wrap_OT_API_NumList_Remove, NULL},
    { SWIG_prefix "OT_API_NumList_VerifyQuery", (swig_wrapper_func) _wrap_OT_API_NumList_VerifyQuery, NULL},
    { SWIG_prefix "OT_API_NumList_VerifyAll", (swig_wrapper_func) _wrap_OT_API_NumList_VerifyAll, NULL},
    { SWIG_prefix "OT_API_NumList_Count", (swig_wrapper_func) _wrap_OT_API_NumList_Count, NULL},
    { SWIG_prefix "OT_API_Encode", (swig_wrapper_func) _wrap_OT_API_Encode, NULL},
    { SWIG_prefix "OT_API_Decode", (swig_wrapper_func) _wrap_OT_API_Decode, NULL},
    { SWIG_prefix "OT_API_Encrypt", (swig_wrapper_func) _wrap_OT_API_Encrypt, NULL},
    { SWIG_prefix "OT_API_Decrypt", (swig_wrapper_func) _wrap_OT_API_Decrypt, NULL},
    { SWIG_prefix "OT_API_CreateSymmetricKey", (swig_wrapper_func) _wrap_OT_API_CreateSymmetricKey, NULL},
    { SWIG_prefix "OT_API_SymmetricEncrypt", (swig_wrapper_func) _wrap_OT_API_SymmetricEncrypt, NULL},
    { SWIG_prefix "OT_API_SymmetricDecrypt", (swig_wrapper_func) _wrap_OT_API_SymmetricDecrypt, NULL},
    { SWIG_prefix "OT_API_SignContract", (swig_wrapper_func) _wrap_OT_API_SignContract, NULL},
    { SWIG_prefix "OT_API_AddSignature", (swig_wrapper_func) _wrap_OT_API_AddSignature, NULL},
    { SWIG_prefix "OT_API_VerifySignature", (swig_wrapper_func) _wrap_OT_API_VerifySignature, NULL},
    { SWIG_prefix "OT_API_VerifyAndRetrieveXMLContents", (swig_wrapper_func) _wrap_OT_API_VerifyAndRetrieveXMLContents, NULL},
    { SWIG_prefix "OT_API_GetMemlogSize", (swig_wrapper_func) _wrap_OT_API_GetMemlogSize, NULL},
    { SWIG_prefix "OT_API_GetMemlogAtIndex", (swig_wrapper_func) _wrap_OT_API_GetMemlogAtIndex, NULL},
    { SWIG_prefix "OT_API_PeekMemlogFront", (swig_wrapper_func) _wrap_OT_API_PeekMemlogFront, NULL},
    { SWIG_prefix "OT_API_PeekMemlogBack", (swig_wrapper_func) _wrap_OT_API_PeekMemlogBack, NULL},
    { SWIG_prefix "OT_API_PopMemlogFront", (swig_wrapper_func) _wrap_OT_API_PopMemlogFront, NULL},
    { SWIG_prefix "OT_API_PopMemlogBack", (swig_wrapper_func) _wrap_OT_API_PopMemlogBack, NULL},
    { SWIG_prefix "OT_API_CreateNym", (swig_wrapper_func) _wrap_OT_API_CreateNym, NULL},
    { SWIG_prefix "OT_API_CreateServerContract", (swig_wrapper_func) _wrap_OT_API_CreateServerContract, NULL},
    { SWIG_prefix "OT_API_CreateAssetContract", (swig_wrapper_func) _wrap_OT_API_CreateAssetContract, NULL},
    { SWIG_prefix "OT_API_AddServerContract", (swig_wrapper_func) _wrap_OT_API_AddServerContract, NULL},
    { SWIG_prefix "OT_API_AddAssetContract", (swig_wrapper_func) _wrap_OT_API_AddAssetContract, NULL},
    { SWIG_prefix "OT_API_GetServerCount", (swig_wrapper_func) _wrap_OT_API_GetServerCount, NULL},
    { SWIG_prefix "OT_API_GetAssetTypeCount", (swig_wrapper_func) _wrap_OT_API_GetAssetTypeCount, NULL},
    { SWIG_prefix "OT_API_GetAccountCount", (swig_wrapper_func) _wrap_OT_API_GetAccountCount, NULL},
    { SWIG_prefix "OT_API_GetNymCount", (swig_wrapper_func) _wrap_OT_API_GetNymCount, NULL},
    { SWIG_prefix "OT_API_GetServer_ID", (swig_wrapper_func) _wrap_OT_API_GetServer_ID, NULL},
    { SWIG_prefix "OT_API_GetServer_Name", (swig_wrapper_func) _wrap_OT_API_GetServer_Name, NULL},
    { SWIG_prefix "OT_API_GetServer_Contract", (swig_wrapper_func) _wrap_OT_API_GetServer_Contract, NULL},
    { SWIG_prefix "OT_API_GetAssetType_ID", (swig_wrapper_func) _wrap_OT_API_GetAssetType_ID, NULL},
    { SWIG_prefix "OT_API_GetAssetType_Name", (swig_wrapper_func) _wrap_OT_API_GetAssetType_Name, NULL},
    { SWIG_prefix "OT_API_GetAssetType_Contract", (swig_wrapper_func) _wrap_OT_API_GetAssetType_Contract, NULL},
    { SWIG_prefix "OT_API_GetAccountWallet_ID", (swig_wrapper_func) _wrap_OT_API_GetAccountWallet_ID, NULL},
    { SWIG_prefix "OT_API_GetAccountWallet_Name", (swig_wrapper_func) _wrap_OT_API_GetAccountWallet_Name, NULL},
    { SWIG_prefix "OT_API_GetAccountWallet_Balance", (swig_wrapper_func) _wrap_OT_API_GetAccountWallet_Balance, NULL},
    { SWIG_prefix "OT_API_GetAccountWallet_Type", (swig_wrapper_func) _wrap_OT_API_GetAccountWallet_Type, NULL},
    { SWIG_prefix "OT_API_GetAccountWallet_AssetTypeID", (swig_wrapper_func) _wrap_OT_API_GetAccountWallet_AssetTypeID, NULL},
    { SWIG_prefix "OT_API_GetAccountWallet_ServerID", (swig_wrapper_func) _wrap_OT_API_GetAccountWallet_ServerID, NULL},
    { SWIG_prefix "OT_API_GetAccountWallet_NymID", (swig_wrapper_func) _wrap_OT_API_GetAccountWallet_NymID, NULL},
    { SWIG_prefix "OT_API_GetAccountWallet_InboxHash", (swig_wrapper_func) _wrap_OT_API_GetAccountWallet_InboxHash, NULL},
    { SWIG_prefix "OT_API_GetAccountWallet_OutboxHash", (swig_wrapper_func) _wrap_OT_API_GetAccountWallet_OutboxHash, NULL},
    { SWIG_prefix "OT_API_VerifyAccountReceipt", (swig_wrapper_func) _wrap_OT_API_VerifyAccountReceipt, NULL},
    { SWIG_prefix "OT_API_GetNym_TransactionNumCount", (swig_wrapper_func) _wrap_OT_API_GetNym_TransactionNumCount, NULL},
    { SWIG_prefix "OT_API_GetNym_ID", (swig_wrapper_func) _wrap_OT_API_GetNym_ID, NULL},
    { SWIG_prefix "OT_API_GetNym_Name", (swig_wrapper_func) _wrap_OT_API_GetNym_Name, NULL},
    { SWIG_prefix "OT_API_GetNym_Stats", (swig_wrapper_func) _wrap_OT_API_GetNym_Stats, NULL},
    { SWIG_prefix "OT_API_GetNym_NymboxHash", (swig_wrapper_func) _wrap_OT_API_GetNym_NymboxHash, NULL},
    { SWIG_prefix "OT_API_GetNym_RecentHash", (swig_wrapper_func) _wrap_OT_API_GetNym_RecentHash, NULL},
    { SWIG_prefix "OT_API_GetNym_InboxHash", (swig_wrapper_func) _wrap_OT_API_GetNym_InboxHash, NULL},
    { SWIG_prefix "OT_API_GetNym_OutboxHash", (swig_wrapper_func) _wrap_OT_API_GetNym_OutboxHash, NULL},
    { SWIG_prefix "OT_API_IsNym_RegisteredAtServer", (swig_wrapper_func) _wrap_OT_API_IsNym_RegisteredAtServer, NULL},
    { SWIG_prefix "OT_API_GetNym_MailCount", (swig_wrapper_func) _wrap_OT_API_GetNym_MailCount, NULL},
    { SWIG_prefix "OT_API_GetNym_MailContentsByIndex", (swig_wrapper_func) _wrap_OT_API_GetNym_MailContentsByIndex, NULL},
    { SWIG_prefix "OT_API_GetNym_MailSenderIDByIndex", (swig_wrapper_func) _wrap_OT_API_GetNym_MailSenderIDByIndex, NULL},
    { SWIG_prefix "OT_API_GetNym_MailServerIDByIndex", (swig_wrapper_func) _wrap_OT_API_GetNym_MailServerIDByIndex, NULL},
    { SWIG_prefix "OT_API_Nym_RemoveMailByIndex", (swig_wrapper_func) _wrap_OT_API_Nym_RemoveMailByIndex, NULL},
    { SWIG_prefix "OT_API_Nym_VerifyMailByIndex", (swig_wrapper_func) _wrap_OT_API_Nym_VerifyMailByIndex, NULL},
    { SWIG_prefix "OT_API_GetNym_OutmailCount", (swig_wrapper_func) _wrap_OT_API_GetNym_OutmailCount, NULL},
    { SWIG_prefix "OT_API_GetNym_OutmailContentsByIndex", (swig_wrapper_func) _wrap_OT_API_GetNym_OutmailContentsByIndex, NULL},
    { SWIG_prefix "OT_API_GetNym_OutmailRecipientIDByIndex", (swig_wrapper_func) _wrap_OT_API_GetNym_OutmailRecipientIDByIndex, NULL},
    { SWIG_prefix "OT_API_GetNym_OutmailServerIDByIndex", (swig_wrapper_func) _wrap_OT_API_GetNym_OutmailServerIDByIndex, NULL},
    { SWIG_prefix "OT_API_Nym_RemoveOutmailByIndex", (swig_wrapper_func) _wrap_OT_API_Nym_RemoveOutmailByIndex, NULL},
    { SWIG_prefix "OT_API_Nym_VerifyOutmailByIndex", (swig_wrapper_func) _wrap_OT_API_Nym_VerifyOutmailByIndex, NULL},
    { SWIG_prefix "OT_API_GetNym_OutpaymentsCount", (swig_wrapper_func) _wrap_OT_API_GetNym_OutpaymentsCount, NULL},
    { SWIG_prefix "OT_API_GetNym_OutpaymentsContentsByIndex", (swig_wrapper_func) _wrap_OT_API_GetNym_OutpaymentsContentsByIndex, NULL},
    { SWIG_prefix "OT_API_GetNym_OutpaymentsRecipientIDByIndex", (swig_wrapper_func) _wrap_OT_API_GetNym_OutpaymentsRecipientIDByIndex, NULL},
    { SWIG_prefix "OT_API_GetNym_OutpaymentsServerIDByIndex", (swig_wrapper_func) _wrap_OT_API_GetNym_OutpaymentsServerIDByIndex, NULL},
    { SWIG_prefix "OT_API_Nym_RemoveOutpaymentsByIndex", (swig_wrapper_func) _wrap_OT_API_Nym_RemoveOutpaymentsByIndex, NULL},
    { SWIG_prefix "OT_API_Nym_VerifyOutpaymentsByIndex", (swig_wrapper_func) _wrap_OT_API_Nym_VerifyOutpaymentsByIndex, NULL},
    { SWIG_prefix "OT_API_Wallet_CanRemoveServer", (swig_wrapper_func) _wrap_OT_API_Wallet_CanRemoveServer, NULL},
    { SWIG_prefix "OT_API_Wallet_RemoveServer", (swig_wrapper_func) _wrap_OT_API_Wallet_RemoveServer, NULL},
    { SWIG_prefix "OT_API_Wallet_CanRemoveAssetType", (swig_wrapper_func) _wrap_OT_API_Wallet_CanRemoveAssetType, NULL},
    { SWIG_prefix "OT_API_Wallet_RemoveAssetType", (swig_wrapper_func) _wrap_OT_API_Wallet_RemoveAssetType, NULL},
    { SWIG_prefix "OT_API_Wallet_CanRemoveNym", (swig_wrapper_func) _wrap_OT_API_Wallet_CanRemoveNym, NULL},
    { SWIG_prefix "OT_API_Wallet_RemoveNym", (swig_wrapper_func) _wrap_OT_API_Wallet_RemoveNym, NULL},
    { SWIG_prefix "OT_API_Wallet_CanRemoveAccount", (swig_wrapper_func) _wrap_OT_API_Wallet_CanRemoveAccount, NULL},
    { SWIG_prefix "OT_API_Wallet_ImportNym", (swig_wrapper_func) _wrap_OT_API_Wallet_ImportNym, NULL},
    { SWIG_prefix "OT_API_Wallet_GetNymIDFromPartial", (swig_wrapper_func) _wrap_OT_API_Wallet_GetNymIDFromPartial, NULL},
    { SWIG_prefix "OT_API_Wallet_GetServerIDFromPartial", (swig_wrapper_func) _wrap_OT_API_Wallet_GetServerIDFromPartial, NULL},
    { SWIG_prefix "OT_API_Wallet_GetAssetIDFromPartial", (swig_wrapper_func) _wrap_OT_API_Wallet_GetAssetIDFromPartial, NULL},
    { SWIG_prefix "OT_API_Wallet_GetAccountIDFromPartial", (swig_wrapper_func) _wrap_OT_API_Wallet_GetAccountIDFromPartial, NULL},
    { SWIG_prefix "OT_API_SetNym_Name", (swig_wrapper_func) _wrap_OT_API_SetNym_Name, NULL},
    { SWIG_prefix "OT_API_SetAccountWallet_Name", (swig_wrapper_func) _wrap_OT_API_SetAccountWallet_Name, NULL},
    { SWIG_prefix "OT_API_SetAssetType_Name", (swig_wrapper_func) _wrap_OT_API_SetAssetType_Name, NULL},
    { SWIG_prefix "OT_API_SetServer_Name", (swig_wrapper_func) _wrap_OT_API_SetServer_Name, NULL},
    { SWIG_prefix "OT_API_WriteCheque", (swig_wrapper_func) _wrap_OT_API_WriteCheque, NULL},
    { SWIG_prefix "OT_API_DiscardCheque", (swig_wrapper_func) _wrap_OT_API_DiscardCheque, NULL},
    { SWIG_prefix "OT_API_ProposePaymentPlan", (swig_wrapper_func) _wrap_OT_API_ProposePaymentPlan, NULL},
    { SWIG_prefix "OT_API_ConfirmPaymentPlan", (swig_wrapper_func) _wrap_OT_API_ConfirmPaymentPlan, NULL},
    { SWIG_prefix "OT_API_Create_SmartContract", (swig_wrapper_func) _wrap_OT_API_Create_SmartContract, NULL},
    { SWIG_prefix "OT_API_SmartContract_AddBylaw", (swig_wrapper_func) _wrap_OT_API_SmartContract_AddBylaw, NULL},
    { SWIG_prefix "OT_API_SmartContract_AddClause", (swig_wrapper_func) _wrap_OT_API_SmartContract_AddClause, NULL},
    { SWIG_prefix "OT_API_SmartContract_AddVariable", (swig_wrapper_func) _wrap_OT_API_SmartContract_AddVariable, NULL},
    { SWIG_prefix "OT_API_SmartContract_AddCallback", (swig_wrapper_func) _wrap_OT_API_SmartContract_AddCallback, NULL},
    { SWIG_prefix "OT_API_SmartContract_AddHook", (swig_wrapper_func) _wrap_OT_API_SmartContract_AddHook, NULL},
    { SWIG_prefix "OT_API_SmartContract_AddParty", (swig_wrapper_func) _wrap_OT_API_SmartContract_AddParty, NULL},
    { SWIG_prefix "OT_API_SmartContract_AddAccount", (swig_wrapper_func) _wrap_OT_API_SmartContract_AddAccount, NULL},
    { SWIG_prefix "OT_API_SmartContract_CountNumsNeeded", (swig_wrapper_func) _wrap_OT_API_SmartContract_CountNumsNeeded, NULL},
    { SWIG_prefix "OT_API_SmartContract_ConfirmAccount", (swig_wrapper_func) _wrap_OT_API_SmartContract_ConfirmAccount, NULL},
    { SWIG_prefix "OT_API_SmartContract_ConfirmParty", (swig_wrapper_func) _wrap_OT_API_SmartContract_ConfirmParty, NULL},
    { SWIG_prefix "OT_API_activateSmartContract", (swig_wrapper_func) _wrap_OT_API_activateSmartContract, NULL},
    { SWIG_prefix "OT_API_triggerClause", (swig_wrapper_func) _wrap_OT_API_triggerClause, NULL},
    { SWIG_prefix "OT_API_Msg_HarvestTransactionNumbers", (swig_wrapper_func) _wrap_OT_API_Msg_HarvestTransactionNumbers, NULL},
    { SWIG_prefix "OT_API_LoadUserPubkey", (swig_wrapper_func) _wrap_OT_API_LoadUserPubkey, NULL},
    { SWIG_prefix "OT_API_LoadPubkey", (swig_wrapper_func) _wrap_OT_API_LoadPubkey, NULL},
    { SWIG_prefix "OT_API_VerifyUserPrivateKey", (swig_wrapper_func) _wrap_OT_API_VerifyUserPrivateKey, NULL},
    { SWIG_prefix "OT_API_LoadPurse", (swig_wrapper_func) _wrap_OT_API_LoadPurse, NULL},
    { SWIG_prefix "OT_API_LoadMint", (swig_wrapper_func) _wrap_OT_API_LoadMint, NULL},
    { SWIG_prefix "OT_API_LoadAssetContract", (swig_wrapper_func) _wrap_OT_API_LoadAssetContract, NULL},
    { SWIG_prefix "OT_API_LoadServerContract", (swig_wrapper_func) _wrap_OT_API_LoadServerContract, NULL},
    { SWIG_prefix "OT_API_Mint_IsStillGood", (swig_wrapper_func) _wrap_OT_API_Mint_IsStillGood, NULL},
    { SWIG_prefix "OT_API_IsBasketCurrency", (swig_wrapper_func) _wrap_OT_API_IsBasketCurrency, NULL},
    { SWIG_prefix "OT_API_Basket_GetMemberCount", (swig_wrapper_func) _wrap_OT_API_Basket_GetMemberCount, NULL},
    { SWIG_prefix "OT_API_Basket_GetMemberType", (swig_wrapper_func) _wrap_OT_API_Basket_GetMemberType, NULL},
    { SWIG_prefix "OT_API_Basket_GetMinimumTransferAmount", (swig_wrapper_func) _wrap_OT_API_Basket_GetMinimumTransferAmount, NULL},
    { SWIG_prefix "OT_API_Basket_GetMemberMinimumTransferAmount", (swig_wrapper_func) _wrap_OT_API_Basket_GetMemberMinimumTransferAmount, NULL},
    { SWIG_prefix "OT_API_LoadAssetAccount", (swig_wrapper_func) _wrap_OT_API_LoadAssetAccount, NULL},
    { SWIG_prefix "OT_API_LoadInbox", (swig_wrapper_func) _wrap_OT_API_LoadInbox, NULL},
    { SWIG_prefix "OT_API_LoadOutbox", (swig_wrapper_func) _wrap_OT_API_LoadOutbox, NULL},
    { SWIG_prefix "OT_API_LoadInboxNoVerify", (swig_wrapper_func) _wrap_OT_API_LoadInboxNoVerify, NULL},
    { SWIG_prefix "OT_API_LoadOutboxNoVerify", (swig_wrapper_func) _wrap_OT_API_LoadOutboxNoVerify, NULL},
    { SWIG_prefix "OT_API_LoadPaymentInbox", (swig_wrapper_func) _wrap_OT_API_LoadPaymentInbox, NULL},
    { SWIG_prefix "OT_API_LoadPaymentInboxNoVerify", (swig_wrapper_func) _wrap_OT_API_LoadPaymentInboxNoVerify, NULL},
    { SWIG_prefix "OT_API_LoadRecordBox", (swig_wrapper_func) _wrap_OT_API_LoadRecordBox, NULL},
    { SWIG_prefix "OT_API_LoadRecordBoxNoVerify", (swig_wrapper_func) _wrap_OT_API_LoadRecordBoxNoVerify, NULL},
    { SWIG_prefix "OT_API_Ledger_GetCount", (swig_wrapper_func) _wrap_OT_API_Ledger_GetCount, NULL},
    { SWIG_prefix "OT_API_Ledger_CreateResponse", (swig_wrapper_func) _wrap_OT_API_Ledger_CreateResponse, NULL},
    { SWIG_prefix "OT_API_Ledger_GetTransactionByIndex", (swig_wrapper_func) _wrap_OT_API_Ledger_GetTransactionByIndex, NULL},
    { SWIG_prefix "OT_API_Ledger_GetTransactionByID", (swig_wrapper_func) _wrap_OT_API_Ledger_GetTransactionByID, NULL},
    { SWIG_prefix "OT_API_Ledger_GetTransactionIDByIndex", (swig_wrapper_func) _wrap_OT_API_Ledger_GetTransactionIDByIndex, NULL},
    { SWIG_prefix "OT_API_Ledger_AddTransaction", (swig_wrapper_func) _wrap_OT_API_Ledger_AddTransaction, NULL},
    { SWIG_prefix "OT_API_Transaction_CreateResponse", (swig_wrapper_func) _wrap_OT_API_Transaction_CreateResponse, NULL},
    { SWIG_prefix "OT_API_Ledger_FinalizeResponse", (swig_wrapper_func) _wrap_OT_API_Ledger_FinalizeResponse, NULL},
    { SWIG_prefix "OT_API_Ledger_GetInstrument", (swig_wrapper_func) _wrap_OT_API_Ledger_GetInstrument, NULL},
    { SWIG_prefix "OT_API_Transaction_GetType", (swig_wrapper_func) _wrap_OT_API_Transaction_GetType, NULL},
    { SWIG_prefix "OT_API_ReplyNotice_GetRequestNum", (swig_wrapper_func) _wrap_OT_API_ReplyNotice_GetRequestNum, NULL},
    { SWIG_prefix "OT_API_Transaction_GetVoucher", (swig_wrapper_func) _wrap_OT_API_Transaction_GetVoucher, NULL},
    { SWIG_prefix "OT_API_Transaction_GetSuccess", (swig_wrapper_func) _wrap_OT_API_Transaction_GetSuccess, NULL},
    { SWIG_prefix "OT_API_Transaction_GetBalanceAgreementSuccess", (swig_wrapper_func) _wrap_OT_API_Transaction_GetBalanceAgreementSuccess, NULL},
    { SWIG_prefix "OT_API_Transaction_GetDateSigned", (swig_wrapper_func) _wrap_OT_API_Transaction_GetDateSigned, NULL},
    { SWIG_prefix "OT_API_Transaction_GetAmount", (swig_wrapper_func) _wrap_OT_API_Transaction_GetAmount, NULL},
    { SWIG_prefix "OT_API_Pending_GetNote", (swig_wrapper_func) _wrap_OT_API_Pending_GetNote, NULL},
    { SWIG_prefix "OT_API_Transaction_GetSenderUserID", (swig_wrapper_func) _wrap_OT_API_Transaction_GetSenderUserID, NULL},
    { SWIG_prefix "OT_API_Transaction_GetSenderAcctID", (swig_wrapper_func) _wrap_OT_API_Transaction_GetSenderAcctID, NULL},
    { SWIG_prefix "OT_API_Transaction_GetRecipientUserID", (swig_wrapper_func) _wrap_OT_API_Transaction_GetRecipientUserID, NULL},
    { SWIG_prefix "OT_API_Transaction_GetRecipientAcctID", (swig_wrapper_func) _wrap_OT_API_Transaction_GetRecipientAcctID, NULL},
    { SWIG_prefix "OT_API_Transaction_GetDisplayReferenceToNum", (swig_wrapper_func) _wrap_OT_API_Transaction_GetDisplayReferenceToNum, NULL},
    { SWIG_prefix "OT_API_CreatePurse", (swig_wrapper_func) _wrap_OT_API_CreatePurse, NULL},
    { SWIG_prefix "OT_API_SavePurse", (swig_wrapper_func) _wrap_OT_API_SavePurse, NULL},
    { SWIG_prefix "OT_API_Purse_GetTotalValue", (swig_wrapper_func) _wrap_OT_API_Purse_GetTotalValue, NULL},
    { SWIG_prefix "OT_API_Purse_Count", (swig_wrapper_func) _wrap_OT_API_Purse_Count, NULL},
    { SWIG_prefix "OT_API_Purse_Peek", (swig_wrapper_func) _wrap_OT_API_Purse_Peek, NULL},
    { SWIG_prefix "OT_API_Purse_Pop", (swig_wrapper_func) _wrap_OT_API_Purse_Pop, NULL},
    { SWIG_prefix "OT_API_Purse_Push", (swig_wrapper_func) _wrap_OT_API_Purse_Push, NULL},
    { SWIG_prefix "OT_API_Wallet_ImportPurse", (swig_wrapper_func) _wrap_OT_API_Wallet_ImportPurse, NULL},
    { SWIG_prefix "OT_API_exchangePurse", (swig_wrapper_func) _wrap_OT_API_exchangePurse, NULL},
    { SWIG_prefix "OT_API_Token_ChangeOwner", (swig_wrapper_func) _wrap_OT_API_Token_ChangeOwner, NULL},
    { SWIG_prefix "OT_API_Token_GetID", (swig_wrapper_func) _wrap_OT_API_Token_GetID, NULL},
    { SWIG_prefix "OT_API_Token_GetDenomination", (swig_wrapper_func) _wrap_OT_API_Token_GetDenomination, NULL},
    { SWIG_prefix "OT_API_Token_GetSeries", (swig_wrapper_func) _wrap_OT_API_Token_GetSeries, NULL},
    { SWIG_prefix "OT_API_Token_GetValidFrom", (swig_wrapper_func) _wrap_OT_API_Token_GetValidFrom, NULL},
    { SWIG_prefix "OT_API_Token_GetValidTo", (swig_wrapper_func) _wrap_OT_API_Token_GetValidTo, NULL},
    { SWIG_prefix "OT_API_Token_GetAssetID", (swig_wrapper_func) _wrap_OT_API_Token_GetAssetID, NULL},
    { SWIG_prefix "OT_API_Token_GetServerID", (swig_wrapper_func) _wrap_OT_API_Token_GetServerID, NULL},
    { SWIG_prefix "OT_API_Instrument_GetAmount", (swig_wrapper_func) _wrap_OT_API_Instrument_GetAmount, NULL},
    { SWIG_prefix "OT_API_Instrument_GetTransNum", (swig_wrapper_func) _wrap_OT_API_Instrument_GetTransNum, NULL},
    { SWIG_prefix "OT_API_Instrument_GetValidFrom", (swig_wrapper_func) _wrap_OT_API_Instrument_GetValidFrom, NULL},
    { SWIG_prefix "OT_API_Instrument_GetValidTo", (swig_wrapper_func) _wrap_OT_API_Instrument_GetValidTo, NULL},
    { SWIG_prefix "OT_API_Instrument_GetMemo", (swig_wrapper_func) _wrap_OT_API_Instrument_GetMemo, NULL},
    { SWIG_prefix "OT_API_Instrument_GetType", (swig_wrapper_func) _wrap_OT_API_Instrument_GetType, NULL},
    { SWIG_prefix "OT_API_Instrument_GetAssetID", (swig_wrapper_func) _wrap_OT_API_Instrument_GetAssetID, NULL},
    { SWIG_prefix "OT_API_Instrmnt_GetSenderUserID", (swig_wrapper_func) _wrap_OT_API_Instrmnt_GetSenderUserID, NULL},
    { SWIG_prefix "OT_API_Instrmnt_GetSenderAcctID", (swig_wrapper_func) _wrap_OT_API_Instrmnt_GetSenderAcctID, NULL},
    { SWIG_prefix "OT_API_Instrmnt_GetRecipientUserID", (swig_wrapper_func) _wrap_OT_API_Instrmnt_GetRecipientUserID, NULL},
    { SWIG_prefix "OT_API_Instrmnt_GetRecipientAcctID", (swig_wrapper_func) _wrap_OT_API_Instrmnt_GetRecipientAcctID, NULL},
    { SWIG_prefix "OT_API_checkServerID", (swig_wrapper_func) _wrap_OT_API_checkServerID, NULL},
    { SWIG_prefix "OT_API_createUserAccount", (swig_wrapper_func) _wrap_OT_API_createUserAccount, NULL},
    { SWIG_prefix "OT_API_deleteUserAccount", (swig_wrapper_func) _wrap_OT_API_deleteUserAccount, NULL},
    { SWIG_prefix "OT_API_deleteAssetAccount", (swig_wrapper_func) _wrap_OT_API_deleteAssetAccount, NULL},
    { SWIG_prefix "OT_API_usageCredits", (swig_wrapper_func) _wrap_OT_API_usageCredits, NULL},
    { SWIG_prefix "OT_API_Message_GetUsageCredits", (swig_wrapper_func) _wrap_OT_API_Message_GetUsageCredits, NULL},
    { SWIG_prefix "OT_API_checkUser", (swig_wrapper_func) _wrap_OT_API_checkUser, NULL},
    { SWIG_prefix "OT_API_sendUserMessage", (swig_wrapper_func) _wrap_OT_API_sendUserMessage, NULL},
    { SWIG_prefix "OT_API_sendUserInstrument", (swig_wrapper_func) _wrap_OT_API_sendUserInstrument, NULL},
    { SWIG_prefix "OT_API_getRequest", (swig_wrapper_func) _wrap_OT_API_getRequest, NULL},
    { SWIG_prefix "OT_API_getTransactionNumber", (swig_wrapper_func) _wrap_OT_API_getTransactionNumber, NULL},
    { SWIG_prefix "OT_API_issueAssetType", (swig_wrapper_func) _wrap_OT_API_issueAssetType, NULL},
    { SWIG_prefix "OT_API_getContract", (swig_wrapper_func) _wrap_OT_API_getContract, NULL},
    { SWIG_prefix "OT_API_getMint", (swig_wrapper_func) _wrap_OT_API_getMint, NULL},
    { SWIG_prefix "OT_API_createAssetAccount", (swig_wrapper_func) _wrap_OT_API_createAssetAccount, NULL},
    { SWIG_prefix "OT_API_getAccount", (swig_wrapper_func) _wrap_OT_API_getAccount, NULL},
    { SWIG_prefix "OT_API_GenerateBasketCreation", (swig_wrapper_func) _wrap_OT_API_GenerateBasketCreation, NULL},
    { SWIG_prefix "OT_API_AddBasketCreationItem", (swig_wrapper_func) _wrap_OT_API_AddBasketCreationItem, NULL},
    { SWIG_prefix "OT_API_issueBasket", (swig_wrapper_func) _wrap_OT_API_issueBasket, NULL},
    { SWIG_prefix "OT_API_GenerateBasketExchange", (swig_wrapper_func) _wrap_OT_API_GenerateBasketExchange, NULL},
    { SWIG_prefix "OT_API_AddBasketExchangeItem", (swig_wrapper_func) _wrap_OT_API_AddBasketExchangeItem, NULL},
    { SWIG_prefix "OT_API_exchangeBasket", (swig_wrapper_func) _wrap_OT_API_exchangeBasket, NULL},
    { SWIG_prefix "OT_API_notarizeWithdrawal", (swig_wrapper_func) _wrap_OT_API_notarizeWithdrawal, NULL},
    { SWIG_prefix "OT_API_notarizeDeposit", (swig_wrapper_func) _wrap_OT_API_notarizeDeposit, NULL},
    { SWIG_prefix "OT_API_notarizeTransfer", (swig_wrapper_func) _wrap_OT_API_notarizeTransfer, NULL},
    { SWIG_prefix "OT_API_getInbox", (swig_wrapper_func) _wrap_OT_API_getInbox, NULL},
    { SWIG_prefix "OT_API_getOutbox", (swig_wrapper_func) _wrap_OT_API_getOutbox, NULL},
    { SWIG_prefix "OT_API_getNymbox", (swig_wrapper_func) _wrap_OT_API_getNymbox, NULL},
    { SWIG_prefix "OT_API_LoadNymbox", (swig_wrapper_func) _wrap_OT_API_LoadNymbox, NULL},
    { SWIG_prefix "OT_API_LoadNymboxNoVerify", (swig_wrapper_func) _wrap_OT_API_LoadNymboxNoVerify, NULL},
    { SWIG_prefix "OT_API_Nymbox_GetReplyNotice", (swig_wrapper_func) _wrap_OT_API_Nymbox_GetReplyNotice, NULL},
    { SWIG_prefix "OT_API_HaveAlreadySeenReply", (swig_wrapper_func) _wrap_OT_API_HaveAlreadySeenReply, NULL},
    { SWIG_prefix "OT_API_getBoxReceipt", (swig_wrapper_func) _wrap_OT_API_getBoxReceipt, NULL},
    { SWIG_prefix "OT_API_DoesBoxReceiptExist", (swig_wrapper_func) _wrap_OT_API_DoesBoxReceiptExist, NULL},
    { SWIG_prefix "OT_API_processInbox", (swig_wrapper_func) _wrap_OT_API_processInbox, NULL},
    { SWIG_prefix "OT_API_processNymbox", (swig_wrapper_func) _wrap_OT_API_processNymbox, NULL},
    { SWIG_prefix "OT_API_withdrawVoucher", (swig_wrapper_func) _wrap_OT_API_withdrawVoucher, NULL},
    { SWIG_prefix "OT_API_depositCheque", (swig_wrapper_func) _wrap_OT_API_depositCheque, NULL},
    { SWIG_prefix "OT_API_depositPaymentPlan", (swig_wrapper_func) _wrap_OT_API_depositPaymentPlan, NULL},
    { SWIG_prefix "OT_API_issueMarketOffer", (swig_wrapper_func) _wrap_OT_API_issueMarketOffer, NULL},
    { SWIG_prefix "OT_API_getMarketList", (swig_wrapper_func) _wrap_OT_API_getMarketList, NULL},
    { SWIG_prefix "OT_API_getMarketOffers", (swig_wrapper_func) _wrap_OT_API_getMarketOffers, NULL},
    { SWIG_prefix "OT_API_getMarketRecentTrades", (swig_wrapper_func) _wrap_OT_API_getMarketRecentTrades, NULL},
    { SWIG_prefix "OT_API_getNym_MarketOffers", (swig_wrapper_func) _wrap_OT_API_getNym_MarketOffers, NULL},
    { SWIG_prefix "OT_API_cancelMarketOffer", (swig_wrapper_func) _wrap_OT_API_cancelMarketOffer, NULL},
    { SWIG_prefix "OT_API_cancelPaymentPlan", (swig_wrapper_func) _wrap_OT_API_cancelPaymentPlan, NULL},
    { SWIG_prefix "OT_API_PopMessageBuffer", (swig_wrapper_func) _wrap_OT_API_PopMessageBuffer, NULL},
    { SWIG_prefix "OT_API_FlushMessageBuffer", (swig_wrapper_func) _wrap_OT_API_FlushMessageBuffer, NULL},
    { SWIG_prefix "OT_API_GetSentMessage", (swig_wrapper_func) _wrap_OT_API_GetSentMessage, NULL},
    { SWIG_prefix "OT_API_RemoveSentMessage", (swig_wrapper_func) _wrap_OT_API_RemoveSentMessage, NULL},
    { SWIG_prefix "OT_API_FlushSentMessages", (swig_wrapper_func) _wrap_OT_API_FlushSentMessages, NULL},
    { SWIG_prefix "OT_API_Sleep", (swig_wrapper_func) _wrap_OT_API_Sleep, NULL},
    { SWIG_prefix "OT_API_ResyncNymWithServer", (swig_wrapper_func) _wrap_OT_API_ResyncNymWithServer, NULL},
    { SWIG_prefix "OT_API_Message_GetCommand", (swig_wrapper_func) _wrap_OT_API_Message_GetCommand, NULL},
    { SWIG_prefix "OT_API_Message_GetSuccess", (swig_wrapper_func) _wrap_OT_API_Message_GetSuccess, NULL},
    { SWIG_prefix "OT_API_queryAssetTypes", (swig_wrapper_func) _wrap_OT_API_queryAssetTypes, NULL},
    { SWIG_prefix "OT_API_Message_GetPayload", (swig_wrapper_func) _wrap_OT_API_Message_GetPayload, NULL},
    { SWIG_prefix "OT_API_Message_GetDepth", (swig_wrapper_func) _wrap_OT_API_Message_GetDepth, NULL},
    { SWIG_prefix "OT_API_Message_GetTransactionSuccess", (swig_wrapper_func) _wrap_OT_API_Message_GetTransactionSuccess, NULL},
    { SWIG_prefix "OT_API_Message_GetBalanceAgreementSuccess", (swig_wrapper_func) _wrap_OT_API_Message_GetBalanceAgreementSuccess, NULL},
    { SWIG_prefix "OT_API_Message_GetLedger", (swig_wrapper_func) _wrap_OT_API_Message_GetLedger, NULL},
    { SWIG_prefix "OT_API_Message_GetNewAssetTypeID", (swig_wrapper_func) _wrap_OT_API_Message_GetNewAssetTypeID, NULL},
    { SWIG_prefix "OT_API_Message_GetNewIssuerAcctID", (swig_wrapper_func) _wrap_OT_API_Message_GetNewIssuerAcctID, NULL},
    { SWIG_prefix "OT_API_Message_GetNewAcctID", (swig_wrapper_func) _wrap_OT_API_Message_GetNewAcctID, NULL},
    { SWIG_prefix "OT_API_Message_GetNymboxHash", (swig_wrapper_func) _wrap_OT_API_Message_GetNymboxHash, NULL},
    { SWIG_prefix "OT_API_ConnectServer", (swig_wrapper_func) _wrap_OT_API_ConnectServer, NULL},
    { SWIG_prefix "OT_API_ProcessSockets", (swig_wrapper_func) _wrap_OT_API_ProcessSockets, NULL},
    { SWIG_prefix "delete_Storable", (swig_wrapper_func) _wrap_delete_Storable, NULL},
    { SWIG_prefix "Storable_Create", (swig_wrapper_func) _wrap_Storable_Create, NULL},
    { SWIG_prefix "Storable_ot_dynamic_cast", (swig_wrapper_func) _wrap_Storable_ot_dynamic_cast, NULL},
    { SWIG_prefix "Storable", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_Storable},
    { SWIG_prefix "Storage_GetPacker", (swig_wrapper_func) _wrap_Storage_GetPacker, NULL},
    { SWIG_prefix "Storage_Exists", (swig_wrapper_func) _wrap_Storage_Exists, NULL},
    { SWIG_prefix "delete_Storage", (swig_wrapper_func) _wrap_delete_Storage, NULL},
    { SWIG_prefix "Storage_StoreString", (swig_wrapper_func) _wrap_Storage_StoreString, NULL},
    { SWIG_prefix "Storage_QueryString", (swig_wrapper_func) _wrap_Storage_QueryString, NULL},
    { SWIG_prefix "Storage_StorePlainString", (swig_wrapper_func) _wrap_Storage_StorePlainString, NULL},
    { SWIG_prefix "Storage_QueryPlainString", (swig_wrapper_func) _wrap_Storage_QueryPlainString, NULL},
    { SWIG_prefix "Storage_StoreObject", (swig_wrapper_func) _wrap_Storage_StoreObject, NULL},
    { SWIG_prefix "Storage_QueryObject", (swig_wrapper_func) _wrap_Storage_QueryObject, NULL},
    { SWIG_prefix "Storage_EncodeObject", (swig_wrapper_func) _wrap_Storage_EncodeObject, NULL},
    { SWIG_prefix "Storage_DecodeObject", (swig_wrapper_func) _wrap_Storage_DecodeObject, NULL},
    { SWIG_prefix "Storage_EraseValueByKey", (swig_wrapper_func) _wrap_Storage_EraseValueByKey, NULL},
    { SWIG_prefix "Storage_CreateObject", (swig_wrapper_func) _wrap_Storage_CreateObject, NULL},
    { SWIG_prefix "Storage_Create", (swig_wrapper_func) _wrap_Storage_Create, NULL},
    { SWIG_prefix "Storage_GetType", (swig_wrapper_func) _wrap_Storage_GetType, NULL},
    { SWIG_prefix "Storage", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_Storage},
    { SWIG_prefix "InitDefaultStorage", (swig_wrapper_func) _wrap_InitDefaultStorage, NULL},
    { SWIG_prefix "GetDefaultStorage", (swig_wrapper_func) _wrap_GetDefaultStorage, NULL},
    { SWIG_prefix "CreateStorageContext", (swig_wrapper_func) _wrap_CreateStorageContext, NULL},
    { SWIG_prefix "CreateObject", (swig_wrapper_func) _wrap_CreateObject, NULL},
    { SWIG_prefix "Exists", (swig_wrapper_func) _wrap_Exists, NULL},
    { SWIG_prefix "StoreString", (swig_wrapper_func) _wrap_StoreString, NULL},
    { SWIG_prefix "QueryString", (swig_wrapper_func) _wrap_QueryString, NULL},
    { SWIG_prefix "StorePlainString", (swig_wrapper_func) _wrap_StorePlainString, NULL},
    { SWIG_prefix "QueryPlainString", (swig_wrapper_func) _wrap_QueryPlainString, NULL},
    { SWIG_prefix "StoreObject", (swig_wrapper_func) _wrap_StoreObject, NULL},
    { SWIG_prefix "QueryObject", (swig_wrapper_func) _wrap_QueryObject, NULL},
    { SWIG_prefix "EncodeObject", (swig_wrapper_func) _wrap_EncodeObject, NULL},
    { SWIG_prefix "DecodeObject", (swig_wrapper_func) _wrap_DecodeObject, NULL},
    { SWIG_prefix "EraseValueByKey", (swig_wrapper_func) _wrap_EraseValueByKey, NULL},
    { SWIG_prefix "delete_OTDBString", (swig_wrapper_func) _wrap_delete_OTDBString, NULL},
    { SWIG_prefix "OTDBString_m_string_set", (swig_wrapper_func) _wrap_OTDBString_m_string_set, NULL},
    { SWIG_prefix "OTDBString_m_string_get", (swig_wrapper_func) _wrap_OTDBString_m_string_get, NULL},
    { SWIG_prefix "OTDBString_ot_dynamic_cast", (swig_wrapper_func) _wrap_OTDBString_ot_dynamic_cast, NULL},
    { SWIG_prefix "OTDBString", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_OTDBString},
    { SWIG_prefix "delete_Blob", (swig_wrapper_func) _wrap_delete_Blob, NULL},
    { SWIG_prefix "Blob_m_memBuffer_set", (swig_wrapper_func) _wrap_Blob_m_memBuffer_set, NULL},
    { SWIG_prefix "Blob_m_memBuffer_get", (swig_wrapper_func) _wrap_Blob_m_memBuffer_get, NULL},
    { SWIG_prefix "Blob_ot_dynamic_cast", (swig_wrapper_func) _wrap_Blob_ot_dynamic_cast, NULL},
    { SWIG_prefix "Blob", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_Blob},
    { SWIG_prefix "delete_StringMap", (swig_wrapper_func) _wrap_delete_StringMap, NULL},
    { SWIG_prefix "StringMap_the_map_set", (swig_wrapper_func) _wrap_StringMap_the_map_set, NULL},
    { SWIG_prefix "StringMap_the_map_get", (swig_wrapper_func) _wrap_StringMap_the_map_get, NULL},
    { SWIG_prefix "StringMap_SetValue", (swig_wrapper_func) _wrap_StringMap_SetValue, NULL},
    { SWIG_prefix "StringMap_GetValue", (swig_wrapper_func) _wrap_StringMap_GetValue, NULL},
    { SWIG_prefix "StringMap_ot_dynamic_cast", (swig_wrapper_func) _wrap_StringMap_ot_dynamic_cast, NULL},
    { SWIG_prefix "StringMap", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_StringMap},
    { SWIG_prefix "delete_Displayable", (swig_wrapper_func) _wrap_delete_Displayable, NULL},
    { SWIG_prefix "Displayable_gui_label_set", (swig_wrapper_func) _wrap_Displayable_gui_label_set, NULL},
    { SWIG_prefix "Displayable_gui_label_get", (swig_wrapper_func) _wrap_Displayable_gui_label_get, NULL},
    { SWIG_prefix "Displayable_ot_dynamic_cast", (swig_wrapper_func) _wrap_Displayable_ot_dynamic_cast, NULL},
    { SWIG_prefix "Displayable", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_Displayable},
    { SWIG_prefix "delete_MarketData", (swig_wrapper_func) _wrap_delete_MarketData, NULL},
    { SWIG_prefix "MarketData_gui_label_set", (swig_wrapper_func) _wrap_MarketData_gui_label_set, NULL},
    { SWIG_prefix "MarketData_gui_label_get", (swig_wrapper_func) _wrap_MarketData_gui_label_get, NULL},
    { SWIG_prefix "MarketData_server_id_set", (swig_wrapper_func) _wrap_MarketData_server_id_set, NULL},
    { SWIG_prefix "MarketData_server_id_get", (swig_wrapper_func) _wrap_MarketData_server_id_get, NULL},
    { SWIG_prefix "MarketData_market_id_set", (swig_wrapper_func) _wrap_MarketData_market_id_set, NULL},
    { SWIG_prefix "MarketData_market_id_get", (swig_wrapper_func) _wrap_MarketData_market_id_get, NULL},
    { SWIG_prefix "MarketData_asset_type_id_set", (swig_wrapper_func) _wrap_MarketData_asset_type_id_set, NULL},
    { SWIG_prefix "MarketData_asset_type_id_get", (swig_wrapper_func) _wrap_MarketData_asset_type_id_get, NULL},
    { SWIG_prefix "MarketData_currency_type_id_set", (swig_wrapper_func) _wrap_MarketData_currency_type_id_set, NULL},
    { SWIG_prefix "MarketData_currency_type_id_get", (swig_wrapper_func) _wrap_MarketData_currency_type_id_get, NULL},
    { SWIG_prefix "MarketData_scale_set", (swig_wrapper_func) _wrap_MarketData_scale_set, NULL},
    { SWIG_prefix "MarketData_scale_get", (swig_wrapper_func) _wrap_MarketData_scale_get, NULL},
    { SWIG_prefix "MarketData_total_assets_set", (swig_wrapper_func) _wrap_MarketData_total_assets_set, NULL},
    { SWIG_prefix "MarketData_total_assets_get", (swig_wrapper_func) _wrap_MarketData_total_assets_get, NULL},
    { SWIG_prefix "MarketData_number_bids_set", (swig_wrapper_func) _wrap_MarketData_number_bids_set, NULL},
    { SWIG_prefix "MarketData_number_bids_get", (swig_wrapper_func) _wrap_MarketData_number_bids_get, NULL},
    { SWIG_prefix "MarketData_number_asks_set", (swig_wrapper_func) _wrap_MarketData_number_asks_set, NULL},
    { SWIG_prefix "MarketData_number_asks_get", (swig_wrapper_func) _wrap_MarketData_number_asks_get, NULL},
    { SWIG_prefix "MarketData_last_sale_price_set", (swig_wrapper_func) _wrap_MarketData_last_sale_price_set, NULL},
    { SWIG_prefix "MarketData_last_sale_price_get", (swig_wrapper_func) _wrap_MarketData_last_sale_price_get, NULL},
    { SWIG_prefix "MarketData_current_bid_set", (swig_wrapper_func) _wrap_MarketData_current_bid_set, NULL},
    { SWIG_prefix "MarketData_current_bid_get", (swig_wrapper_func) _wrap_MarketData_current_bid_get, NULL},
    { SWIG_prefix "MarketData_current_ask_set", (swig_wrapper_func) _wrap_MarketData_current_ask_set, NULL},
    { SWIG_prefix "MarketData_current_ask_get", (swig_wrapper_func) _wrap_MarketData_current_ask_get, NULL},
    { SWIG_prefix "MarketData_volume_trades_set", (swig_wrapper_func) _wrap_MarketData_volume_trades_set, NULL},
    { SWIG_prefix "MarketData_volume_trades_get", (swig_wrapper_func) _wrap_MarketData_volume_trades_get, NULL},
    { SWIG_prefix "MarketData_volume_assets_set", (swig_wrapper_func) _wrap_MarketData_volume_assets_set, NULL},
    { SWIG_prefix "MarketData_volume_assets_get", (swig_wrapper_func) _wrap_MarketData_volume_assets_get, NULL},
    { SWIG_prefix "MarketData_volume_currency_set", (swig_wrapper_func) _wrap_MarketData_volume_currency_set, NULL},
    { SWIG_prefix "MarketData_volume_currency_get", (swig_wrapper_func) _wrap_MarketData_volume_currency_get, NULL},
    { SWIG_prefix "MarketData_recent_highest_bid_set", (swig_wrapper_func) _wrap_MarketData_recent_highest_bid_set, NULL},
    { SWIG_prefix "MarketData_recent_highest_bid_get", (swig_wrapper_func) _wrap_MarketData_recent_highest_bid_get, NULL},
    { SWIG_prefix "MarketData_recent_lowest_ask_set", (swig_wrapper_func) _wrap_MarketData_recent_lowest_ask_set, NULL},
    { SWIG_prefix "MarketData_recent_lowest_ask_get", (swig_wrapper_func) _wrap_MarketData_recent_lowest_ask_get, NULL},
    { SWIG_prefix "MarketData_ot_dynamic_cast", (swig_wrapper_func) _wrap_MarketData_ot_dynamic_cast, NULL},
    { SWIG_prefix "MarketData", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_MarketData},
    { SWIG_prefix "delete_MarketList", (swig_wrapper_func) _wrap_delete_MarketList, NULL},
    { SWIG_prefix "MarketList_GetMarketDataCount", (swig_wrapper_func) _wrap_MarketList_GetMarketDataCount, NULL},
    { SWIG_prefix "MarketList_GetMarketData", (swig_wrapper_func) _wrap_MarketList_GetMarketData, NULL},
    { SWIG_prefix "MarketList_RemoveMarketData", (swig_wrapper_func) _wrap_MarketList_RemoveMarketData, NULL},
    { SWIG_prefix "MarketList_AddMarketData", (swig_wrapper_func) _wrap_MarketList_AddMarketData, NULL},
    { SWIG_prefix "MarketList_ot_dynamic_cast", (swig_wrapper_func) _wrap_MarketList_ot_dynamic_cast, NULL},
    { SWIG_prefix "MarketList", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_MarketList},
    { SWIG_prefix "delete_OfferDataMarket", (swig_wrapper_func) _wrap_delete_OfferDataMarket, NULL},
    { SWIG_prefix "OfferDataMarket_gui_label_set", (swig_wrapper_func) _wrap_OfferDataMarket_gui_label_set, NULL},
    { SWIG_prefix "OfferDataMarket_gui_label_get", (swig_wrapper_func) _wrap_OfferDataMarket_gui_label_get, NULL},
    { SWIG_prefix "OfferDataMarket_transaction_id_set", (swig_wrapper_func) _wrap_OfferDataMarket_transaction_id_set, NULL},
    { SWIG_prefix "OfferDataMarket_transaction_id_get", (swig_wrapper_func) _wrap_OfferDataMarket_transaction_id_get, NULL},
    { SWIG_prefix "OfferDataMarket_price_per_scale_set", (swig_wrapper_func) _wrap_OfferDataMarket_price_per_scale_set, NULL},
    { SWIG_prefix "OfferDataMarket_price_per_scale_get", (swig_wrapper_func) _wrap_OfferDataMarket_price_per_scale_get, NULL},
    { SWIG_prefix "OfferDataMarket_available_assets_set", (swig_wrapper_func) _wrap_OfferDataMarket_available_assets_set, NULL},
    { SWIG_prefix "OfferDataMarket_available_assets_get", (swig_wrapper_func) _wrap_OfferDataMarket_available_assets_get, NULL},
    { SWIG_prefix "OfferDataMarket_minimum_increment_set", (swig_wrapper_func) _wrap_OfferDataMarket_minimum_increment_set, NULL},
    { SWIG_prefix "OfferDataMarket_minimum_increment_get", (swig_wrapper_func) _wrap_OfferDataMarket_minimum_increment_get, NULL},
    { SWIG_prefix "OfferDataMarket_ot_dynamic_cast", (swig_wrapper_func) _wrap_OfferDataMarket_ot_dynamic_cast, NULL},
    { SWIG_prefix "OfferDataMarket", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_OfferDataMarket},
    { SWIG_prefix "delete_BidData", (swig_wrapper_func) _wrap_delete_BidData, NULL},
    { SWIG_prefix "BidData_gui_label_set", (swig_wrapper_func) _wrap_BidData_gui_label_set, NULL},
    { SWIG_prefix "BidData_gui_label_get", (swig_wrapper_func) _wrap_BidData_gui_label_get, NULL},
    { SWIG_prefix "BidData_transaction_id_set", (swig_wrapper_func) _wrap_BidData_transaction_id_set, NULL},
    { SWIG_prefix "BidData_transaction_id_get", (swig_wrapper_func) _wrap_BidData_transaction_id_get, NULL},
    { SWIG_prefix "BidData_price_per_scale_set", (swig_wrapper_func) _wrap_BidData_price_per_scale_set, NULL},
    { SWIG_prefix "BidData_price_per_scale_get", (swig_wrapper_func) _wrap_BidData_price_per_scale_get, NULL},
    { SWIG_prefix "BidData_available_assets_set", (swig_wrapper_func) _wrap_BidData_available_assets_set, NULL},
    { SWIG_prefix "BidData_available_assets_get", (swig_wrapper_func) _wrap_BidData_available_assets_get, NULL},
    { SWIG_prefix "BidData_minimum_increment_set", (swig_wrapper_func) _wrap_BidData_minimum_increment_set, NULL},
    { SWIG_prefix "BidData_minimum_increment_get", (swig_wrapper_func) _wrap_BidData_minimum_increment_get, NULL},
    { SWIG_prefix "BidData_ot_dynamic_cast", (swig_wrapper_func) _wrap_BidData_ot_dynamic_cast, NULL},
    { SWIG_prefix "BidData", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_BidData},
    { SWIG_prefix "delete_AskData", (swig_wrapper_func) _wrap_delete_AskData, NULL},
    { SWIG_prefix "AskData_gui_label_set", (swig_wrapper_func) _wrap_AskData_gui_label_set, NULL},
    { SWIG_prefix "AskData_gui_label_get", (swig_wrapper_func) _wrap_AskData_gui_label_get, NULL},
    { SWIG_prefix "AskData_transaction_id_set", (swig_wrapper_func) _wrap_AskData_transaction_id_set, NULL},
    { SWIG_prefix "AskData_transaction_id_get", (swig_wrapper_func) _wrap_AskData_transaction_id_get, NULL},
    { SWIG_prefix "AskData_price_per_scale_set", (swig_wrapper_func) _wrap_AskData_price_per_scale_set, NULL},
    { SWIG_prefix "AskData_price_per_scale_get", (swig_wrapper_func) _wrap_AskData_price_per_scale_get, NULL},
    { SWIG_prefix "AskData_available_assets_set", (swig_wrapper_func) _wrap_AskData_available_assets_set, NULL},
    { SWIG_prefix "AskData_available_assets_get", (swig_wrapper_func) _wrap_AskData_available_assets_get, NULL},
    { SWIG_prefix "AskData_minimum_increment_set", (swig_wrapper_func) _wrap_AskData_minimum_increment_set, NULL},
    { SWIG_prefix "AskData_minimum_increment_get", (swig_wrapper_func) _wrap_AskData_minimum_increment_get, NULL},
    { SWIG_prefix "AskData_ot_dynamic_cast", (swig_wrapper_func) _wrap_AskData_ot_dynamic_cast, NULL},
    { SWIG_prefix "AskData", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_AskData},
    { SWIG_prefix "delete_OfferListMarket", (swig_wrapper_func) _wrap_delete_OfferListMarket, NULL},
    { SWIG_prefix "OfferListMarket_GetBidDataCount", (swig_wrapper_func) _wrap_OfferListMarket_GetBidDataCount, NULL},
    { SWIG_prefix "OfferListMarket_GetBidData", (swig_wrapper_func) _wrap_OfferListMarket_GetBidData, NULL},
    { SWIG_prefix "OfferListMarket_RemoveBidData", (swig_wrapper_func) _wrap_OfferListMarket_RemoveBidData, NULL},
    { SWIG_prefix "OfferListMarket_AddBidData", (swig_wrapper_func) _wrap_OfferListMarket_AddBidData, NULL},
    { SWIG_prefix "OfferListMarket_GetAskDataCount", (swig_wrapper_func) _wrap_OfferListMarket_GetAskDataCount, NULL},
    { SWIG_prefix "OfferListMarket_GetAskData", (swig_wrapper_func) _wrap_OfferListMarket_GetAskData, NULL},
    { SWIG_prefix "OfferListMarket_RemoveAskData", (swig_wrapper_func) _wrap_OfferListMarket_RemoveAskData, NULL},
    { SWIG_prefix "OfferListMarket_AddAskData", (swig_wrapper_func) _wrap_OfferListMarket_AddAskData, NULL},
    { SWIG_prefix "OfferListMarket_ot_dynamic_cast", (swig_wrapper_func) _wrap_OfferListMarket_ot_dynamic_cast, NULL},
    { SWIG_prefix "OfferListMarket", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_OfferListMarket},
    { SWIG_prefix "delete_TradeDataMarket", (swig_wrapper_func) _wrap_delete_TradeDataMarket, NULL},
    { SWIG_prefix "TradeDataMarket_gui_label_set", (swig_wrapper_func) _wrap_TradeDataMarket_gui_label_set, NULL},
    { SWIG_prefix "TradeDataMarket_gui_label_get", (swig_wrapper_func) _wrap_TradeDataMarket_gui_label_get, NULL},
    { SWIG_prefix "TradeDataMarket_transaction_id_set", (swig_wrapper_func) _wrap_TradeDataMarket_transaction_id_set, NULL},
    { SWIG_prefix "TradeDataMarket_transaction_id_get", (swig_wrapper_func) _wrap_TradeDataMarket_transaction_id_get, NULL},
    { SWIG_prefix "TradeDataMarket_date_set", (swig_wrapper_func) _wrap_TradeDataMarket_date_set, NULL},
    { SWIG_prefix "TradeDataMarket_date_get", (swig_wrapper_func) _wrap_TradeDataMarket_date_get, NULL},
    { SWIG_prefix "TradeDataMarket_price_set", (swig_wrapper_func) _wrap_TradeDataMarket_price_set, NULL},
    { SWIG_prefix "TradeDataMarket_price_get", (swig_wrapper_func) _wrap_TradeDataMarket_price_get, NULL},
    { SWIG_prefix "TradeDataMarket_amount_sold_set", (swig_wrapper_func) _wrap_TradeDataMarket_amount_sold_set, NULL},
    { SWIG_prefix "TradeDataMarket_amount_sold_get", (swig_wrapper_func) _wrap_TradeDataMarket_amount_sold_get, NULL},
    { SWIG_prefix "TradeDataMarket_ot_dynamic_cast", (swig_wrapper_func) _wrap_TradeDataMarket_ot_dynamic_cast, NULL},
    { SWIG_prefix "TradeDataMarket", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_TradeDataMarket},
    { SWIG_prefix "delete_TradeListMarket", (swig_wrapper_func) _wrap_delete_TradeListMarket, NULL},
    { SWIG_prefix "TradeListMarket_GetTradeDataMarketCount", (swig_wrapper_func) _wrap_TradeListMarket_GetTradeDataMarketCount, NULL},
    { SWIG_prefix "TradeListMarket_GetTradeDataMarket", (swig_wrapper_func) _wrap_TradeListMarket_GetTradeDataMarket, NULL},
    { SWIG_prefix "TradeListMarket_RemoveTradeDataMarket", (swig_wrapper_func) _wrap_TradeListMarket_RemoveTradeDataMarket, NULL},
    { SWIG_prefix "TradeListMarket_AddTradeDataMarket", (swig_wrapper_func) _wrap_TradeListMarket_AddTradeDataMarket, NULL},
    { SWIG_prefix "TradeListMarket_ot_dynamic_cast", (swig_wrapper_func) _wrap_TradeListMarket_ot_dynamic_cast, NULL},
    { SWIG_prefix "TradeListMarket", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_TradeListMarket},
    { SWIG_prefix "delete_OfferDataNym", (swig_wrapper_func) _wrap_delete_OfferDataNym, NULL},
    { SWIG_prefix "OfferDataNym_gui_label_set", (swig_wrapper_func) _wrap_OfferDataNym_gui_label_set, NULL},
    { SWIG_prefix "OfferDataNym_gui_label_get", (swig_wrapper_func) _wrap_OfferDataNym_gui_label_get, NULL},
    { SWIG_prefix "OfferDataNym_valid_from_set", (swig_wrapper_func) _wrap_OfferDataNym_valid_from_set, NULL},
    { SWIG_prefix "OfferDataNym_valid_from_get", (swig_wrapper_func) _wrap_OfferDataNym_valid_from_get, NULL},
    { SWIG_prefix "OfferDataNym_valid_to_set", (swig_wrapper_func) _wrap_OfferDataNym_valid_to_set, NULL},
    { SWIG_prefix "OfferDataNym_valid_to_get", (swig_wrapper_func) _wrap_OfferDataNym_valid_to_get, NULL},
    { SWIG_prefix "OfferDataNym_server_id_set", (swig_wrapper_func) _wrap_OfferDataNym_server_id_set, NULL},
    { SWIG_prefix "OfferDataNym_server_id_get", (swig_wrapper_func) _wrap_OfferDataNym_server_id_get, NULL},
    { SWIG_prefix "OfferDataNym_asset_type_id_set", (swig_wrapper_func) _wrap_OfferDataNym_asset_type_id_set, NULL},
    { SWIG_prefix "OfferDataNym_asset_type_id_get", (swig_wrapper_func) _wrap_OfferDataNym_asset_type_id_get, NULL},
    { SWIG_prefix "OfferDataNym_asset_acct_id_set", (swig_wrapper_func) _wrap_OfferDataNym_asset_acct_id_set, NULL},
    { SWIG_prefix "OfferDataNym_asset_acct_id_get", (swig_wrapper_func) _wrap_OfferDataNym_asset_acct_id_get, NULL},
    { SWIG_prefix "OfferDataNym_currency_type_id_set", (swig_wrapper_func) _wrap_OfferDataNym_currency_type_id_set, NULL},
    { SWIG_prefix "OfferDataNym_currency_type_id_get", (swig_wrapper_func) _wrap_OfferDataNym_currency_type_id_get, NULL},
    { SWIG_prefix "OfferDataNym_currency_acct_id_set", (swig_wrapper_func) _wrap_OfferDataNym_currency_acct_id_set, NULL},
    { SWIG_prefix "OfferDataNym_currency_acct_id_get", (swig_wrapper_func) _wrap_OfferDataNym_currency_acct_id_get, NULL},
    { SWIG_prefix "OfferDataNym_selling_set", (swig_wrapper_func) _wrap_OfferDataNym_selling_set, NULL},
    { SWIG_prefix "OfferDataNym_selling_get", (swig_wrapper_func) _wrap_OfferDataNym_selling_get, NULL},
    { SWIG_prefix "OfferDataNym_scale_set", (swig_wrapper_func) _wrap_OfferDataNym_scale_set, NULL},
    { SWIG_prefix "OfferDataNym_scale_get", (swig_wrapper_func) _wrap_OfferDataNym_scale_get, NULL},
    { SWIG_prefix "OfferDataNym_price_per_scale_set", (swig_wrapper_func) _wrap_OfferDataNym_price_per_scale_set, NULL},
    { SWIG_prefix "OfferDataNym_price_per_scale_get", (swig_wrapper_func) _wrap_OfferDataNym_price_per_scale_get, NULL},
    { SWIG_prefix "OfferDataNym_transaction_id_set", (swig_wrapper_func) _wrap_OfferDataNym_transaction_id_set, NULL},
    { SWIG_prefix "OfferDataNym_transaction_id_get", (swig_wrapper_func) _wrap_OfferDataNym_transaction_id_get, NULL},
    { SWIG_prefix "OfferDataNym_total_assets_set", (swig_wrapper_func) _wrap_OfferDataNym_total_assets_set, NULL},
    { SWIG_prefix "OfferDataNym_total_assets_get", (swig_wrapper_func) _wrap_OfferDataNym_total_assets_get, NULL},
    { SWIG_prefix "OfferDataNym_finished_so_far_set", (swig_wrapper_func) _wrap_OfferDataNym_finished_so_far_set, NULL},
    { SWIG_prefix "OfferDataNym_finished_so_far_get", (swig_wrapper_func) _wrap_OfferDataNym_finished_so_far_get, NULL},
    { SWIG_prefix "OfferDataNym_minimum_increment_set", (swig_wrapper_func) _wrap_OfferDataNym_minimum_increment_set, NULL},
    { SWIG_prefix "OfferDataNym_minimum_increment_get", (swig_wrapper_func) _wrap_OfferDataNym_minimum_increment_get, NULL},
    { SWIG_prefix "OfferDataNym_stop_sign_set", (swig_wrapper_func) _wrap_OfferDataNym_stop_sign_set, NULL},
    { SWIG_prefix "OfferDataNym_stop_sign_get", (swig_wrapper_func) _wrap_OfferDataNym_stop_sign_get, NULL},
    { SWIG_prefix "OfferDataNym_stop_price_set", (swig_wrapper_func) _wrap_OfferDataNym_stop_price_set, NULL},
    { SWIG_prefix "OfferDataNym_stop_price_get", (swig_wrapper_func) _wrap_OfferDataNym_stop_price_get, NULL},
    { SWIG_prefix "OfferDataNym_ot_dynamic_cast", (swig_wrapper_func) _wrap_OfferDataNym_ot_dynamic_cast, NULL},
    { SWIG_prefix "OfferDataNym", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_OfferDataNym},
    { SWIG_prefix "delete_OfferListNym", (swig_wrapper_func) _wrap_delete_OfferListNym, NULL},
    { SWIG_prefix "OfferListNym_GetOfferDataNymCount", (swig_wrapper_func) _wrap_OfferListNym_GetOfferDataNymCount, NULL},
    { SWIG_prefix "OfferListNym_GetOfferDataNym", (swig_wrapper_func) _wrap_OfferListNym_GetOfferDataNym, NULL},
    { SWIG_prefix "OfferListNym_RemoveOfferDataNym", (swig_wrapper_func) _wrap_OfferListNym_RemoveOfferDataNym, NULL},
    { SWIG_prefix "OfferListNym_AddOfferDataNym", (swig_wrapper_func) _wrap_OfferListNym_AddOfferDataNym, NULL},
    { SWIG_prefix "OfferListNym_ot_dynamic_cast", (swig_wrapper_func) _wrap_OfferListNym_ot_dynamic_cast, NULL},
    { SWIG_prefix "OfferListNym", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_OfferListNym},
    { SWIG_prefix "delete_TradeDataNym", (swig_wrapper_func) _wrap_delete_TradeDataNym, NULL},
    { SWIG_prefix "TradeDataNym_gui_label_set", (swig_wrapper_func) _wrap_TradeDataNym_gui_label_set, NULL},
    { SWIG_prefix "TradeDataNym_gui_label_get", (swig_wrapper_func) _wrap_TradeDataNym_gui_label_get, NULL},
    { SWIG_prefix "TradeDataNym_transaction_id_set", (swig_wrapper_func) _wrap_TradeDataNym_transaction_id_set, NULL},
    { SWIG_prefix "TradeDataNym_transaction_id_get", (swig_wrapper_func) _wrap_TradeDataNym_transaction_id_get, NULL},
    { SWIG_prefix "TradeDataNym_completed_count_set", (swig_wrapper_func) _wrap_TradeDataNym_completed_count_set, NULL},
    { SWIG_prefix "TradeDataNym_completed_count_get", (swig_wrapper_func) _wrap_TradeDataNym_completed_count_get, NULL},
    { SWIG_prefix "TradeDataNym_date_set", (swig_wrapper_func) _wrap_TradeDataNym_date_set, NULL},
    { SWIG_prefix "TradeDataNym_date_get", (swig_wrapper_func) _wrap_TradeDataNym_date_get, NULL},
    { SWIG_prefix "TradeDataNym_price_set", (swig_wrapper_func) _wrap_TradeDataNym_price_set, NULL},
    { SWIG_prefix "TradeDataNym_price_get", (swig_wrapper_func) _wrap_TradeDataNym_price_get, NULL},
    { SWIG_prefix "TradeDataNym_amount_sold_set", (swig_wrapper_func) _wrap_TradeDataNym_amount_sold_set, NULL},
    { SWIG_prefix "TradeDataNym_amount_sold_get", (swig_wrapper_func) _wrap_TradeDataNym_amount_sold_get, NULL},
    { SWIG_prefix "TradeDataNym_ot_dynamic_cast", (swig_wrapper_func) _wrap_TradeDataNym_ot_dynamic_cast, NULL},
    { SWIG_prefix "TradeDataNym", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_TradeDataNym},
    { SWIG_prefix "delete_TradeListNym", (swig_wrapper_func) _wrap_delete_TradeListNym, NULL},
    { SWIG_prefix "TradeListNym_GetTradeDataNymCount", (swig_wrapper_func) _wrap_TradeListNym_GetTradeDataNymCount, NULL},
    { SWIG_prefix "TradeListNym_GetTradeDataNym", (swig_wrapper_func) _wrap_TradeListNym_GetTradeDataNym, NULL},
    { SWIG_prefix "TradeListNym_RemoveTradeDataNym", (swig_wrapper_func) _wrap_TradeListNym_RemoveTradeDataNym, NULL},
    { SWIG_prefix "TradeListNym_AddTradeDataNym", (swig_wrapper_func) _wrap_TradeListNym_AddTradeDataNym, NULL},
    { SWIG_prefix "TradeListNym_ot_dynamic_cast", (swig_wrapper_func) _wrap_TradeListNym_ot_dynamic_cast, NULL},
    { SWIG_prefix "TradeListNym", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_TradeListNym},
    { SWIG_prefix "delete_Acct", (swig_wrapper_func) _wrap_delete_Acct, NULL},
    { SWIG_prefix "Acct_gui_label_set", (swig_wrapper_func) _wrap_Acct_gui_label_set, NULL},
    { SWIG_prefix "Acct_gui_label_get", (swig_wrapper_func) _wrap_Acct_gui_label_get, NULL},
    { SWIG_prefix "Acct_acct_id_set", (swig_wrapper_func) _wrap_Acct_acct_id_set, NULL},
    { SWIG_prefix "Acct_acct_id_get", (swig_wrapper_func) _wrap_Acct_acct_id_get, NULL},
    { SWIG_prefix "Acct_server_id_set", (swig_wrapper_func) _wrap_Acct_server_id_set, NULL},
    { SWIG_prefix "Acct_server_id_get", (swig_wrapper_func) _wrap_Acct_server_id_get, NULL},
    { SWIG_prefix "Acct_ot_dynamic_cast", (swig_wrapper_func) _wrap_Acct_ot_dynamic_cast, NULL},
    { SWIG_prefix "Acct", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_Acct},
    { SWIG_prefix "delete_BitcoinAcct", (swig_wrapper_func) _wrap_delete_BitcoinAcct, NULL},
    { SWIG_prefix "BitcoinAcct_gui_label_set", (swig_wrapper_func) _wrap_BitcoinAcct_gui_label_set, NULL},
    { SWIG_prefix "BitcoinAcct_gui_label_get", (swig_wrapper_func) _wrap_BitcoinAcct_gui_label_get, NULL},
    { SWIG_prefix "BitcoinAcct_acct_id_set", (swig_wrapper_func) _wrap_BitcoinAcct_acct_id_set, NULL},
    { SWIG_prefix "BitcoinAcct_acct_id_get", (swig_wrapper_func) _wrap_BitcoinAcct_acct_id_get, NULL},
    { SWIG_prefix "BitcoinAcct_server_id_set", (swig_wrapper_func) _wrap_BitcoinAcct_server_id_set, NULL},
    { SWIG_prefix "BitcoinAcct_server_id_get", (swig_wrapper_func) _wrap_BitcoinAcct_server_id_get, NULL},
    { SWIG_prefix "BitcoinAcct_bitcoin_acct_name_set", (swig_wrapper_func) _wrap_BitcoinAcct_bitcoin_acct_name_set, NULL},
    { SWIG_prefix "BitcoinAcct_bitcoin_acct_name_get", (swig_wrapper_func) _wrap_BitcoinAcct_bitcoin_acct_name_get, NULL},
    { SWIG_prefix "BitcoinAcct_ot_dynamic_cast", (swig_wrapper_func) _wrap_BitcoinAcct_ot_dynamic_cast, NULL},
    { SWIG_prefix "BitcoinAcct", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_BitcoinAcct},
    { SWIG_prefix "delete_ServerInfo", (swig_wrapper_func) _wrap_delete_ServerInfo, NULL},
    { SWIG_prefix "ServerInfo_gui_label_set", (swig_wrapper_func) _wrap_ServerInfo_gui_label_set, NULL},
    { SWIG_prefix "ServerInfo_gui_label_get", (swig_wrapper_func) _wrap_ServerInfo_gui_label_get, NULL},
    { SWIG_prefix "ServerInfo_server_id_set", (swig_wrapper_func) _wrap_ServerInfo_server_id_set, NULL},
    { SWIG_prefix "ServerInfo_server_id_get", (swig_wrapper_func) _wrap_ServerInfo_server_id_get, NULL},
    { SWIG_prefix "ServerInfo_server_type_set", (swig_wrapper_func) _wrap_ServerInfo_server_type_set, NULL},
    { SWIG_prefix "ServerInfo_server_type_get", (swig_wrapper_func) _wrap_ServerInfo_server_type_get, NULL},
    { SWIG_prefix "ServerInfo_ot_dynamic_cast", (swig_wrapper_func) _wrap_ServerInfo_ot_dynamic_cast, NULL},
    { SWIG_prefix "ServerInfo", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_ServerInfo},
    { SWIG_prefix "delete_Server", (swig_wrapper_func) _wrap_delete_Server, NULL},
    { SWIG_prefix "Server_gui_label_set", (swig_wrapper_func) _wrap_Server_gui_label_set, NULL},
    { SWIG_prefix "Server_gui_label_get", (swig_wrapper_func) _wrap_Server_gui_label_get, NULL},
    { SWIG_prefix "Server_server_id_set", (swig_wrapper_func) _wrap_Server_server_id_set, NULL},
    { SWIG_prefix "Server_server_id_get", (swig_wrapper_func) _wrap_Server_server_id_get, NULL},
    { SWIG_prefix "Server_server_type_set", (swig_wrapper_func) _wrap_Server_server_type_set, NULL},
    { SWIG_prefix "Server_server_type_get", (swig_wrapper_func) _wrap_Server_server_type_get, NULL},
    { SWIG_prefix "Server_server_host_set", (swig_wrapper_func) _wrap_Server_server_host_set, NULL},
    { SWIG_prefix "Server_server_host_get", (swig_wrapper_func) _wrap_Server_server_host_get, NULL},
    { SWIG_prefix "Server_server_port_set", (swig_wrapper_func) _wrap_Server_server_port_set, NULL},
    { SWIG_prefix "Server_server_port_get", (swig_wrapper_func) _wrap_Server_server_port_get, NULL},
    { SWIG_prefix "Server_ot_dynamic_cast", (swig_wrapper_func) _wrap_Server_ot_dynamic_cast, NULL},
    { SWIG_prefix "Server", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_Server},
    { SWIG_prefix "delete_BitcoinServer", (swig_wrapper_func) _wrap_delete_BitcoinServer, NULL},
    { SWIG_prefix "BitcoinServer_gui_label_set", (swig_wrapper_func) _wrap_BitcoinServer_gui_label_set, NULL},
    { SWIG_prefix "BitcoinServer_gui_label_get", (swig_wrapper_func) _wrap_BitcoinServer_gui_label_get, NULL},
    { SWIG_prefix "BitcoinServer_server_id_set", (swig_wrapper_func) _wrap_BitcoinServer_server_id_set, NULL},
    { SWIG_prefix "BitcoinServer_server_id_get", (swig_wrapper_func) _wrap_BitcoinServer_server_id_get, NULL},
    { SWIG_prefix "BitcoinServer_server_type_set", (swig_wrapper_func) _wrap_BitcoinServer_server_type_set, NULL},
    { SWIG_prefix "BitcoinServer_server_type_get", (swig_wrapper_func) _wrap_BitcoinServer_server_type_get, NULL},
    { SWIG_prefix "BitcoinServer_server_host_set", (swig_wrapper_func) _wrap_BitcoinServer_server_host_set, NULL},
    { SWIG_prefix "BitcoinServer_server_host_get", (swig_wrapper_func) _wrap_BitcoinServer_server_host_get, NULL},
    { SWIG_prefix "BitcoinServer_server_port_set", (swig_wrapper_func) _wrap_BitcoinServer_server_port_set, NULL},
    { SWIG_prefix "BitcoinServer_server_port_get", (swig_wrapper_func) _wrap_BitcoinServer_server_port_get, NULL},
    { SWIG_prefix "BitcoinServer_bitcoin_username_set", (swig_wrapper_func) _wrap_BitcoinServer_bitcoin_username_set, NULL},
    { SWIG_prefix "BitcoinServer_bitcoin_username_get", (swig_wrapper_func) _wrap_BitcoinServer_bitcoin_username_get, NULL},
    { SWIG_prefix "BitcoinServer_bitcoin_password_set", (swig_wrapper_func) _wrap_BitcoinServer_bitcoin_password_set, NULL},
    { SWIG_prefix "BitcoinServer_bitcoin_password_get", (swig_wrapper_func) _wrap_BitcoinServer_bitcoin_password_get, NULL},
    { SWIG_prefix "BitcoinServer_ot_dynamic_cast", (swig_wrapper_func) _wrap_BitcoinServer_ot_dynamic_cast, NULL},
    { SWIG_prefix "BitcoinServer", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_BitcoinServer},
    { SWIG_prefix "delete_RippleServer", (swig_wrapper_func) _wrap_delete_RippleServer, NULL},
    { SWIG_prefix "RippleServer_gui_label_set", (swig_wrapper_func) _wrap_RippleServer_gui_label_set, NULL},
    { SWIG_prefix "RippleServer_gui_label_get", (swig_wrapper_func) _wrap_RippleServer_gui_label_get, NULL},
    { SWIG_prefix "RippleServer_server_id_set", (swig_wrapper_func) _wrap_RippleServer_server_id_set, NULL},
    { SWIG_prefix "RippleServer_server_id_get", (swig_wrapper_func) _wrap_RippleServer_server_id_get, NULL},
    { SWIG_prefix "RippleServer_server_type_set", (swig_wrapper_func) _wrap_RippleServer_server_type_set, NULL},
    { SWIG_prefix "RippleServer_server_type_get", (swig_wrapper_func) _wrap_RippleServer_server_type_get, NULL},
    { SWIG_prefix "RippleServer_server_host_set", (swig_wrapper_func) _wrap_RippleServer_server_host_set, NULL},
    { SWIG_prefix "RippleServer_server_host_get", (swig_wrapper_func) _wrap_RippleServer_server_host_get, NULL},
    { SWIG_prefix "RippleServer_server_port_set", (swig_wrapper_func) _wrap_RippleServer_server_port_set, NULL},
    { SWIG_prefix "RippleServer_server_port_get", (swig_wrapper_func) _wrap_RippleServer_server_port_get, NULL},
    { SWIG_prefix "RippleServer_ripple_username_set", (swig_wrapper_func) _wrap_RippleServer_ripple_username_set, NULL},
    { SWIG_prefix "RippleServer_ripple_username_get", (swig_wrapper_func) _wrap_RippleServer_ripple_username_get, NULL},
    { SWIG_prefix "RippleServer_ripple_password_set", (swig_wrapper_func) _wrap_RippleServer_ripple_password_set, NULL},
    { SWIG_prefix "RippleServer_ripple_password_get", (swig_wrapper_func) _wrap_RippleServer_ripple_password_get, NULL},
    { SWIG_prefix "RippleServer_namefield_id_set", (swig_wrapper_func) _wrap_RippleServer_namefield_id_set, NULL},
    { SWIG_prefix "RippleServer_namefield_id_get", (swig_wrapper_func) _wrap_RippleServer_namefield_id_get, NULL},
    { SWIG_prefix "RippleServer_passfield_id_set", (swig_wrapper_func) _wrap_RippleServer_passfield_id_set, NULL},
    { SWIG_prefix "RippleServer_passfield_id_get", (swig_wrapper_func) _wrap_RippleServer_passfield_id_get, NULL},
    { SWIG_prefix "RippleServer_ot_dynamic_cast", (swig_wrapper_func) _wrap_RippleServer_ot_dynamic_cast, NULL},
    { SWIG_prefix "RippleServer", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_RippleServer},
    { SWIG_prefix "delete_LoomServer", (swig_wrapper_func) _wrap_delete_LoomServer, NULL},
    { SWIG_prefix "LoomServer_gui_label_set", (swig_wrapper_func) _wrap_LoomServer_gui_label_set, NULL},
    { SWIG_prefix "LoomServer_gui_label_get", (swig_wrapper_func) _wrap_LoomServer_gui_label_get, NULL},
    { SWIG_prefix "LoomServer_server_id_set", (swig_wrapper_func) _wrap_LoomServer_server_id_set, NULL},
    { SWIG_prefix "LoomServer_server_id_get", (swig_wrapper_func) _wrap_LoomServer_server_id_get, NULL},
    { SWIG_prefix "LoomServer_server_type_set", (swig_wrapper_func) _wrap_LoomServer_server_type_set, NULL},
    { SWIG_prefix "LoomServer_server_type_get", (swig_wrapper_func) _wrap_LoomServer_server_type_get, NULL},
    { SWIG_prefix "LoomServer_server_host_set", (swig_wrapper_func) _wrap_LoomServer_server_host_set, NULL},
    { SWIG_prefix "LoomServer_server_host_get", (swig_wrapper_func) _wrap_LoomServer_server_host_get, NULL},
    { SWIG_prefix "LoomServer_server_port_set", (swig_wrapper_func) _wrap_LoomServer_server_port_set, NULL},
    { SWIG_prefix "LoomServer_server_port_get", (swig_wrapper_func) _wrap_LoomServer_server_port_get, NULL},
    { SWIG_prefix "LoomServer_loom_username_set", (swig_wrapper_func) _wrap_LoomServer_loom_username_set, NULL},
    { SWIG_prefix "LoomServer_loom_username_get", (swig_wrapper_func) _wrap_LoomServer_loom_username_get, NULL},
    { SWIG_prefix "LoomServer_namefield_id_set", (swig_wrapper_func) _wrap_LoomServer_namefield_id_set, NULL},
    { SWIG_prefix "LoomServer_namefield_id_get", (swig_wrapper_func) _wrap_LoomServer_namefield_id_get, NULL},
    { SWIG_prefix "LoomServer_ot_dynamic_cast", (swig_wrapper_func) _wrap_LoomServer_ot_dynamic_cast, NULL},
    { SWIG_prefix "LoomServer", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_LoomServer},
    { SWIG_prefix "delete_ContactNym", (swig_wrapper_func) _wrap_delete_ContactNym, NULL},
    { SWIG_prefix "ContactNym_gui_label_set", (swig_wrapper_func) _wrap_ContactNym_gui_label_set, NULL},
    { SWIG_prefix "ContactNym_gui_label_get", (swig_wrapper_func) _wrap_ContactNym_gui_label_get, NULL},
    { SWIG_prefix "ContactNym_nym_type_set", (swig_wrapper_func) _wrap_ContactNym_nym_type_set, NULL},
    { SWIG_prefix "ContactNym_nym_type_get", (swig_wrapper_func) _wrap_ContactNym_nym_type_get, NULL},
    { SWIG_prefix "ContactNym_nym_id_set", (swig_wrapper_func) _wrap_ContactNym_nym_id_set, NULL},
    { SWIG_prefix "ContactNym_nym_id_get", (swig_wrapper_func) _wrap_ContactNym_nym_id_get, NULL},
    { SWIG_prefix "ContactNym_public_key_set", (swig_wrapper_func) _wrap_ContactNym_public_key_set, NULL},
    { SWIG_prefix "ContactNym_public_key_get", (swig_wrapper_func) _wrap_ContactNym_public_key_get, NULL},
    { SWIG_prefix "ContactNym_memo_set", (swig_wrapper_func) _wrap_ContactNym_memo_set, NULL},
    { SWIG_prefix "ContactNym_memo_get", (swig_wrapper_func) _wrap_ContactNym_memo_get, NULL},
    { SWIG_prefix "ContactNym_GetServerInfoCount", (swig_wrapper_func) _wrap_ContactNym_GetServerInfoCount, NULL},
    { SWIG_prefix "ContactNym_GetServerInfo", (swig_wrapper_func) _wrap_ContactNym_GetServerInfo, NULL},
    { SWIG_prefix "ContactNym_RemoveServerInfo", (swig_wrapper_func) _wrap_ContactNym_RemoveServerInfo, NULL},
    { SWIG_prefix "ContactNym_AddServerInfo", (swig_wrapper_func) _wrap_ContactNym_AddServerInfo, NULL},
    { SWIG_prefix "ContactNym_ot_dynamic_cast", (swig_wrapper_func) _wrap_ContactNym_ot_dynamic_cast, NULL},
    { SWIG_prefix "ContactNym", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_ContactNym},
    { SWIG_prefix "delete_WalletData", (swig_wrapper_func) _wrap_delete_WalletData, NULL},
    { SWIG_prefix "WalletData_GetBitcoinServerCount", (swig_wrapper_func) _wrap_WalletData_GetBitcoinServerCount, NULL},
    { SWIG_prefix "WalletData_GetBitcoinServer", (swig_wrapper_func) _wrap_WalletData_GetBitcoinServer, NULL},
    { SWIG_prefix "WalletData_RemoveBitcoinServer", (swig_wrapper_func) _wrap_WalletData_RemoveBitcoinServer, NULL},
    { SWIG_prefix "WalletData_AddBitcoinServer", (swig_wrapper_func) _wrap_WalletData_AddBitcoinServer, NULL},
    { SWIG_prefix "WalletData_GetBitcoinAcctCount", (swig_wrapper_func) _wrap_WalletData_GetBitcoinAcctCount, NULL},
    { SWIG_prefix "WalletData_GetBitcoinAcct", (swig_wrapper_func) _wrap_WalletData_GetBitcoinAcct, NULL},
    { SWIG_prefix "WalletData_RemoveBitcoinAcct", (swig_wrapper_func) _wrap_WalletData_RemoveBitcoinAcct, NULL},
    { SWIG_prefix "WalletData_AddBitcoinAcct", (swig_wrapper_func) _wrap_WalletData_AddBitcoinAcct, NULL},
    { SWIG_prefix "WalletData_GetRippleServerCount", (swig_wrapper_func) _wrap_WalletData_GetRippleServerCount, NULL},
    { SWIG_prefix "WalletData_GetRippleServer", (swig_wrapper_func) _wrap_WalletData_GetRippleServer, NULL},
    { SWIG_prefix "WalletData_RemoveRippleServer", (swig_wrapper_func) _wrap_WalletData_RemoveRippleServer, NULL},
    { SWIG_prefix "WalletData_AddRippleServer", (swig_wrapper_func) _wrap_WalletData_AddRippleServer, NULL},
    { SWIG_prefix "WalletData_GetLoomServerCount", (swig_wrapper_func) _wrap_WalletData_GetLoomServerCount, NULL},
    { SWIG_prefix "WalletData_GetLoomServer", (swig_wrapper_func) _wrap_WalletData_GetLoomServer, NULL},
    { SWIG_prefix "WalletData_RemoveLoomServer", (swig_wrapper_func) _wrap_WalletData_RemoveLoomServer, NULL},
    { SWIG_prefix "WalletData_AddLoomServer", (swig_wrapper_func) _wrap_WalletData_AddLoomServer, NULL},
    { SWIG_prefix "WalletData_ot_dynamic_cast", (swig_wrapper_func) _wrap_WalletData_ot_dynamic_cast, NULL},
    { SWIG_prefix "WalletData", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_WalletData},
    { SWIG_prefix "delete_ContactAcct", (swig_wrapper_func) _wrap_delete_ContactAcct, NULL},
    { SWIG_prefix "ContactAcct_gui_label_set", (swig_wrapper_func) _wrap_ContactAcct_gui_label_set, NULL},
    { SWIG_prefix "ContactAcct_gui_label_get", (swig_wrapper_func) _wrap_ContactAcct_gui_label_get, NULL},
    { SWIG_prefix "ContactAcct_server_type_set", (swig_wrapper_func) _wrap_ContactAcct_server_type_set, NULL},
    { SWIG_prefix "ContactAcct_server_type_get", (swig_wrapper_func) _wrap_ContactAcct_server_type_get, NULL},
    { SWIG_prefix "ContactAcct_server_id_set", (swig_wrapper_func) _wrap_ContactAcct_server_id_set, NULL},
    { SWIG_prefix "ContactAcct_server_id_get", (swig_wrapper_func) _wrap_ContactAcct_server_id_get, NULL},
    { SWIG_prefix "ContactAcct_asset_type_id_set", (swig_wrapper_func) _wrap_ContactAcct_asset_type_id_set, NULL},
    { SWIG_prefix "ContactAcct_asset_type_id_get", (swig_wrapper_func) _wrap_ContactAcct_asset_type_id_get, NULL},
    { SWIG_prefix "ContactAcct_acct_id_set", (swig_wrapper_func) _wrap_ContactAcct_acct_id_set, NULL},
    { SWIG_prefix "ContactAcct_acct_id_get", (swig_wrapper_func) _wrap_ContactAcct_acct_id_get, NULL},
    { SWIG_prefix "ContactAcct_nym_id_set", (swig_wrapper_func) _wrap_ContactAcct_nym_id_set, NULL},
    { SWIG_prefix "ContactAcct_nym_id_get", (swig_wrapper_func) _wrap_ContactAcct_nym_id_get, NULL},
    { SWIG_prefix "ContactAcct_memo_set", (swig_wrapper_func) _wrap_ContactAcct_memo_set, NULL},
    { SWIG_prefix "ContactAcct_memo_get", (swig_wrapper_func) _wrap_ContactAcct_memo_get, NULL},
    { SWIG_prefix "ContactAcct_public_key_set", (swig_wrapper_func) _wrap_ContactAcct_public_key_set, NULL},
    { SWIG_prefix "ContactAcct_public_key_get", (swig_wrapper_func) _wrap_ContactAcct_public_key_get, NULL},
    { SWIG_prefix "ContactAcct_ot_dynamic_cast", (swig_wrapper_func) _wrap_ContactAcct_ot_dynamic_cast, NULL},
    { SWIG_prefix "ContactAcct", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_ContactAcct},
    { SWIG_prefix "delete_Contact", (swig_wrapper_func) _wrap_delete_Contact, NULL},
    { SWIG_prefix "Contact_gui_label_set", (swig_wrapper_func) _wrap_Contact_gui_label_set, NULL},
    { SWIG_prefix "Contact_gui_label_get", (swig_wrapper_func) _wrap_Contact_gui_label_get, NULL},
    { SWIG_prefix "Contact_contact_id_set", (swig_wrapper_func) _wrap_Contact_contact_id_set, NULL},
    { SWIG_prefix "Contact_contact_id_get", (swig_wrapper_func) _wrap_Contact_contact_id_get, NULL},
    { SWIG_prefix "Contact_email_set", (swig_wrapper_func) _wrap_Contact_email_set, NULL},
    { SWIG_prefix "Contact_email_get", (swig_wrapper_func) _wrap_Contact_email_get, NULL},
    { SWIG_prefix "Contact_memo_set", (swig_wrapper_func) _wrap_Contact_memo_set, NULL},
    { SWIG_prefix "Contact_memo_get", (swig_wrapper_func) _wrap_Contact_memo_get, NULL},
    { SWIG_prefix "Contact_public_key_set", (swig_wrapper_func) _wrap_Contact_public_key_set, NULL},
    { SWIG_prefix "Contact_public_key_get", (swig_wrapper_func) _wrap_Contact_public_key_get, NULL},
    { SWIG_prefix "Contact_GetContactNymCount", (swig_wrapper_func) _wrap_Contact_GetContactNymCount, NULL},
    { SWIG_prefix "Contact_GetContactNym", (swig_wrapper_func) _wrap_Contact_GetContactNym, NULL},
    { SWIG_prefix "Contact_RemoveContactNym", (swig_wrapper_func) _wrap_Contact_RemoveContactNym, NULL},
    { SWIG_prefix "Contact_AddContactNym", (swig_wrapper_func) _wrap_Contact_AddContactNym, NULL},
    { SWIG_prefix "Contact_GetContactAcctCount", (swig_wrapper_func) _wrap_Contact_GetContactAcctCount, NULL},
    { SWIG_prefix "Contact_GetContactAcct", (swig_wrapper_func) _wrap_Contact_GetContactAcct, NULL},
    { SWIG_prefix "Contact_RemoveContactAcct", (swig_wrapper_func) _wrap_Contact_RemoveContactAcct, NULL},
    { SWIG_prefix "Contact_AddContactAcct", (swig_wrapper_func) _wrap_Contact_AddContactAcct, NULL},
    { SWIG_prefix "Contact_ot_dynamic_cast", (swig_wrapper_func) _wrap_Contact_ot_dynamic_cast, NULL},
    { SWIG_prefix "Contact", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_Contact},
    { SWIG_prefix "delete_AddressBook", (swig_wrapper_func) _wrap_delete_AddressBook, NULL},
    { SWIG_prefix "AddressBook_GetContactCount", (swig_wrapper_func) _wrap_AddressBook_GetContactCount, NULL},
    { SWIG_prefix "AddressBook_GetContact", (swig_wrapper_func) _wrap_AddressBook_GetContact, NULL},
    { SWIG_prefix "AddressBook_RemoveContact", (swig_wrapper_func) _wrap_AddressBook_RemoveContact, NULL},
    { SWIG_prefix "AddressBook_AddContact", (swig_wrapper_func) _wrap_AddressBook_AddContact, NULL},
    { SWIG_prefix "AddressBook_ot_dynamic_cast", (swig_wrapper_func) _wrap_AddressBook_ot_dynamic_cast, NULL},
    { SWIG_prefix "AddressBook", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_OTDB_AddressBook},
    {0, 0, 0}
};

static swig_var_info swig_variables[] = {
    {0,0,0,0}
};

static swig_const_info swig_constants[] = {
    {0,0,0,0,0,0}
};

/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_OTDB__BitcoinAcctTo_p_OTDB__Acct(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Acct *)  ((OTDB::BitcoinAcct *) x));
}
static void *_p_OTDB__BitcoinServerTo_p_OTDB__Server(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Server *)  ((OTDB::BitcoinServer *) x));
}
static void *_p_OTDB__RippleServerTo_p_OTDB__Server(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Server *)  ((OTDB::RippleServer *) x));
}
static void *_p_OTDB__LoomServerTo_p_OTDB__Server(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Server *)  ((OTDB::LoomServer *) x));
}
static void *_p_OTDB__LoomServerTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *) (OTDB::ServerInfo *)(OTDB::Server *) ((OTDB::LoomServer *) x));
}
static void *_p_OTDB__RippleServerTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *) (OTDB::ServerInfo *)(OTDB::Server *) ((OTDB::RippleServer *) x));
}
static void *_p_OTDB__ContactNymTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *)  ((OTDB::ContactNym *) x));
}
static void *_p_OTDB__TradeDataMarketTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *)  ((OTDB::TradeDataMarket *) x));
}
static void *_p_OTDB__OfferDataMarketTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *)  ((OTDB::OfferDataMarket *) x));
}
static void *_p_OTDB__BitcoinServerTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *) (OTDB::ServerInfo *)(OTDB::Server *) ((OTDB::BitcoinServer *) x));
}
static void *_p_OTDB__ServerTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *) (OTDB::ServerInfo *) ((OTDB::Server *) x));
}
static void *_p_OTDB__AcctTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *)  ((OTDB::Acct *) x));
}
static void *_p_OTDB__ContactAcctTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *)  ((OTDB::ContactAcct *) x));
}
static void *_p_OTDB__BitcoinAcctTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *) (OTDB::Acct *) ((OTDB::BitcoinAcct *) x));
}
static void *_p_OTDB__MarketDataTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *)  ((OTDB::MarketData *) x));
}
static void *_p_OTDB__ServerInfoTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *)  ((OTDB::ServerInfo *) x));
}
static void *_p_OTDB__ContactTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *)  ((OTDB::Contact *) x));
}
static void *_p_OTDB__BidDataTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *) (OTDB::OfferDataMarket *) ((OTDB::BidData *) x));
}
static void *_p_OTDB__AskDataTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *) (OTDB::OfferDataMarket *) ((OTDB::AskData *) x));
}
static void *_p_OTDB__TradeDataNymTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *)  ((OTDB::TradeDataNym *) x));
}
static void *_p_OTDB__OfferDataNymTo_p_OTDB__Displayable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Displayable *)  ((OTDB::OfferDataNym *) x));
}
static void *_p_OTDB__AskDataTo_p_OTDB__OfferDataMarket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::OfferDataMarket *)  ((OTDB::AskData *) x));
}
static void *_p_OTDB__BidDataTo_p_OTDB__OfferDataMarket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::OfferDataMarket *)  ((OTDB::BidData *) x));
}
static void *_p_OTDB__ServerTo_p_OTDB__ServerInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::ServerInfo *)  ((OTDB::Server *) x));
}
static void *_p_OTDB__BitcoinServerTo_p_OTDB__ServerInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::ServerInfo *) (OTDB::Server *) ((OTDB::BitcoinServer *) x));
}
static void *_p_OTDB__RippleServerTo_p_OTDB__ServerInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::ServerInfo *) (OTDB::Server *) ((OTDB::RippleServer *) x));
}
static void *_p_OTDB__LoomServerTo_p_OTDB__ServerInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::ServerInfo *) (OTDB::Server *) ((OTDB::LoomServer *) x));
}
static void *_p_OTDB__MarketListTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *)  ((OTDB::MarketList *) x));
}
static void *_p_OTDB__OfferListNymTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *)  ((OTDB::OfferListNym *) x));
}
static void *_p_OTDB__TradeListNymTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *)  ((OTDB::TradeListNym *) x));
}
static void *_p_OTDB__RippleServerTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *)(OTDB::ServerInfo *)(OTDB::Server *) ((OTDB::RippleServer *) x));
}
static void *_p_OTDB__LoomServerTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *)(OTDB::ServerInfo *)(OTDB::Server *) ((OTDB::LoomServer *) x));
}
static void *_p_OTDB__ContactNymTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *) ((OTDB::ContactNym *) x));
}
static void *_p_OTDB__TradeDataMarketTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *) ((OTDB::TradeDataMarket *) x));
}
static void *_p_OTDB__OfferDataMarketTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *) ((OTDB::OfferDataMarket *) x));
}
static void *_p_OTDB__StringMapTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *)  ((OTDB::StringMap *) x));
}
static void *_p_OTDB__ServerTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *)(OTDB::ServerInfo *) ((OTDB::Server *) x));
}
static void *_p_OTDB__BitcoinServerTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *)(OTDB::ServerInfo *)(OTDB::Server *) ((OTDB::BitcoinServer *) x));
}
static void *_p_OTDB__TradeListMarketTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *)  ((OTDB::TradeListMarket *) x));
}
static void *_p_OTDB__OfferListMarketTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *)  ((OTDB::OfferListMarket *) x));
}
static void *_p_OTDB__AcctTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *) ((OTDB::Acct *) x));
}
static void *_p_OTDB__DisplayableTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *)  ((OTDB::Displayable *) x));
}
static void *_p_OTDB__WalletDataTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *)  ((OTDB::WalletData *) x));
}
static void *_p_OTDB__ContactAcctTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *) ((OTDB::ContactAcct *) x));
}
static void *_p_OTDB__BlobTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *)  ((OTDB::Blob *) x));
}
static void *_p_OTDB__BitcoinAcctTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *)(OTDB::Acct *) ((OTDB::BitcoinAcct *) x));
}
static void *_p_OTDB__OTDBStringTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *)  ((OTDB::OTDBString *) x));
}
static void *_p_OTDB__MarketDataTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *) ((OTDB::MarketData *) x));
}
static void *_p_OTDB__ServerInfoTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *) ((OTDB::ServerInfo *) x));
}
static void *_p_OTDB__ContactTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *) ((OTDB::Contact *) x));
}
static void *_p_OTDB__AddressBookTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *)  ((OTDB::AddressBook *) x));
}
static void *_p_OTDB__BidDataTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *)(OTDB::OfferDataMarket *) ((OTDB::BidData *) x));
}
static void *_p_OTDB__AskDataTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *)(OTDB::OfferDataMarket *) ((OTDB::AskData *) x));
}
static void *_p_OTDB__OfferDataNymTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *) ((OTDB::OfferDataNym *) x));
}
static void *_p_OTDB__TradeDataNymTo_p_OTDB__Storable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((OTDB::Storable *) (OTDB::Displayable *) ((OTDB::TradeDataNym *) x));
}
static swig_type_info _swigt__p_OTCallback = {"_p_OTCallback", "OTCallback *", 0, 0, (void*)&_wrap_class_OTCallback, 0};
static swig_type_info _swigt__p_OTCaller = {"_p_OTCaller", "OTCaller *", 0, 0, (void*)&_wrap_class_OTCaller, 0};
static swig_type_info _swigt__p_OTDB__Acct = {"_p_OTDB__Acct", "OTDB::Acct *", 0, 0, (void*)&_wrap_class_OTDB_Acct, 0};
static swig_type_info _swigt__p_OTDB__AddressBook = {"_p_OTDB__AddressBook", "OTDB::AddressBook *", 0, 0, (void*)&_wrap_class_OTDB_AddressBook, 0};
static swig_type_info _swigt__p_OTDB__AskData = {"_p_OTDB__AskData", "OTDB::AskData *", 0, 0, (void*)&_wrap_class_OTDB_AskData, 0};
static swig_type_info _swigt__p_OTDB__BidData = {"_p_OTDB__BidData", "OTDB::BidData *", 0, 0, (void*)&_wrap_class_OTDB_BidData, 0};
static swig_type_info _swigt__p_OTDB__BitcoinAcct = {"_p_OTDB__BitcoinAcct", "OTDB::BitcoinAcct *", 0, 0, (void*)&_wrap_class_OTDB_BitcoinAcct, 0};
static swig_type_info _swigt__p_OTDB__BitcoinServer = {"_p_OTDB__BitcoinServer", "OTDB::BitcoinServer *", 0, 0, (void*)&_wrap_class_OTDB_BitcoinServer, 0};
static swig_type_info _swigt__p_OTDB__Blob = {"_p_OTDB__Blob", "OTDB::Blob *", 0, 0, (void*)&_wrap_class_OTDB_Blob, 0};
static swig_type_info _swigt__p_OTDB__Contact = {"_p_OTDB__Contact", "OTDB::Contact *", 0, 0, (void*)&_wrap_class_OTDB_Contact, 0};
static swig_type_info _swigt__p_OTDB__ContactAcct = {"_p_OTDB__ContactAcct", "OTDB::ContactAcct *", 0, 0, (void*)&_wrap_class_OTDB_ContactAcct, 0};
static swig_type_info _swigt__p_OTDB__ContactNym = {"_p_OTDB__ContactNym", "OTDB::ContactNym *", 0, 0, (void*)&_wrap_class_OTDB_ContactNym, 0};
static swig_type_info _swigt__p_OTDB__Displayable = {"_p_OTDB__Displayable", "OTDB::Displayable *", 0, 0, (void*)&_wrap_class_OTDB_Displayable, 0};
static swig_type_info _swigt__p_OTDB__LoomServer = {"_p_OTDB__LoomServer", "OTDB::LoomServer *", 0, 0, (void*)&_wrap_class_OTDB_LoomServer, 0};
static swig_type_info _swigt__p_OTDB__MarketData = {"_p_OTDB__MarketData", "OTDB::MarketData *", 0, 0, (void*)&_wrap_class_OTDB_MarketData, 0};
static swig_type_info _swigt__p_OTDB__MarketList = {"_p_OTDB__MarketList", "OTDB::MarketList *", 0, 0, (void*)&_wrap_class_OTDB_MarketList, 0};
static swig_type_info _swigt__p_OTDB__OTDBString = {"_p_OTDB__OTDBString", "OTDB::OTDBString *", 0, 0, (void*)&_wrap_class_OTDB_OTDBString, 0};
static swig_type_info _swigt__p_OTDB__OfferDataMarket = {"_p_OTDB__OfferDataMarket", "OTDB::OfferDataMarket *", 0, 0, (void*)&_wrap_class_OTDB_OfferDataMarket, 0};
static swig_type_info _swigt__p_OTDB__OfferDataNym = {"_p_OTDB__OfferDataNym", "OTDB::OfferDataNym *", 0, 0, (void*)&_wrap_class_OTDB_OfferDataNym, 0};
static swig_type_info _swigt__p_OTDB__OfferListMarket = {"_p_OTDB__OfferListMarket", "OTDB::OfferListMarket *", 0, 0, (void*)&_wrap_class_OTDB_OfferListMarket, 0};
static swig_type_info _swigt__p_OTDB__OfferListNym = {"_p_OTDB__OfferListNym", "OTDB::OfferListNym *", 0, 0, (void*)&_wrap_class_OTDB_OfferListNym, 0};
static swig_type_info _swigt__p_OTDB__RippleServer = {"_p_OTDB__RippleServer", "OTDB::RippleServer *", 0, 0, (void*)&_wrap_class_OTDB_RippleServer, 0};
static swig_type_info _swigt__p_OTDB__Server = {"_p_OTDB__Server", "OTDB::Server *", 0, 0, (void*)&_wrap_class_OTDB_Server, 0};
static swig_type_info _swigt__p_OTDB__ServerInfo = {"_p_OTDB__ServerInfo", "OTDB::ServerInfo *", 0, 0, (void*)&_wrap_class_OTDB_ServerInfo, 0};
static swig_type_info _swigt__p_OTDB__Storable = {"_p_OTDB__Storable", "OTDB::Storable *", 0, 0, (void*)&_wrap_class_OTDB_Storable, 0};
static swig_type_info _swigt__p_OTDB__Storage = {"_p_OTDB__Storage", "OTDB::Storage *", 0, 0, (void*)&_wrap_class_OTDB_Storage, 0};
static swig_type_info _swigt__p_OTDB__StringMap = {"_p_OTDB__StringMap", "OTDB::StringMap *", 0, 0, (void*)&_wrap_class_OTDB_StringMap, 0};
static swig_type_info _swigt__p_OTDB__TradeDataMarket = {"_p_OTDB__TradeDataMarket", "OTDB::TradeDataMarket *", 0, 0, (void*)&_wrap_class_OTDB_TradeDataMarket, 0};
static swig_type_info _swigt__p_OTDB__TradeDataNym = {"_p_OTDB__TradeDataNym", "OTDB::TradeDataNym *", 0, 0, (void*)&_wrap_class_OTDB_TradeDataNym, 0};
static swig_type_info _swigt__p_OTDB__TradeListMarket = {"_p_OTDB__TradeListMarket", "OTDB::TradeListMarket *", 0, 0, (void*)&_wrap_class_OTDB_TradeListMarket, 0};
static swig_type_info _swigt__p_OTDB__TradeListNym = {"_p_OTDB__TradeListNym", "OTDB::TradeListNym *", 0, 0, (void*)&_wrap_class_OTDB_TradeListNym, 0};
static swig_type_info _swigt__p_OTDB__WalletData = {"_p_OTDB__WalletData", "OTDB::WalletData *", 0, 0, (void*)&_wrap_class_OTDB_WalletData, 0};
static swig_type_info _swigt__p_OTPacker = {"_p_OTPacker", "OTPacker *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OTPassword = {"_p_OTPassword", "OTPassword *", 0, 0, (void*)&_wrap_class_OTPassword, 0};
static swig_type_info _swigt__p_OTPasswordData = {"_p_OTPasswordData", "OTPasswordData *", 0, 0, (void*)&_wrap_class_OTPasswordData, 0};
static swig_type_info _swigt__p_OTString = {"_p_OTString", "OTString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int32_t = {"_p_int32_t", "int32_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_std__string_std__string_t = {"_p_std__mapT_std__string_std__string_t", "std::map< std::string,std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_unsigned_char_t = {"_p_std__vectorT_unsigned_char_t", "std::vector< unsigned char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint32_t = {"_p_uint32_t", "uint32_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint8_t = {"_p_uint8_t", "uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_OTCallback,
  &_swigt__p_OTCaller,
  &_swigt__p_OTDB__Acct,
  &_swigt__p_OTDB__AddressBook,
  &_swigt__p_OTDB__AskData,
  &_swigt__p_OTDB__BidData,
  &_swigt__p_OTDB__BitcoinAcct,
  &_swigt__p_OTDB__BitcoinServer,
  &_swigt__p_OTDB__Blob,
  &_swigt__p_OTDB__Contact,
  &_swigt__p_OTDB__ContactAcct,
  &_swigt__p_OTDB__ContactNym,
  &_swigt__p_OTDB__Displayable,
  &_swigt__p_OTDB__LoomServer,
  &_swigt__p_OTDB__MarketData,
  &_swigt__p_OTDB__MarketList,
  &_swigt__p_OTDB__OTDBString,
  &_swigt__p_OTDB__OfferDataMarket,
  &_swigt__p_OTDB__OfferDataNym,
  &_swigt__p_OTDB__OfferListMarket,
  &_swigt__p_OTDB__OfferListNym,
  &_swigt__p_OTDB__RippleServer,
  &_swigt__p_OTDB__Server,
  &_swigt__p_OTDB__ServerInfo,
  &_swigt__p_OTDB__Storable,
  &_swigt__p_OTDB__Storage,
  &_swigt__p_OTDB__StringMap,
  &_swigt__p_OTDB__TradeDataMarket,
  &_swigt__p_OTDB__TradeDataNym,
  &_swigt__p_OTDB__TradeListMarket,
  &_swigt__p_OTDB__TradeListNym,
  &_swigt__p_OTDB__WalletData,
  &_swigt__p_OTPacker,
  &_swigt__p_OTPassword,
  &_swigt__p_OTPasswordData,
  &_swigt__p_OTString,
  &_swigt__p_char,
  &_swigt__p_int32_t,
  &_swigt__p_std__mapT_std__string_std__string_t,
  &_swigt__p_std__vectorT_unsigned_char_t,
  &_swigt__p_uint32_t,
  &_swigt__p_uint8_t,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_OTCallback[] = {  {&_swigt__p_OTCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTCaller[] = {  {&_swigt__p_OTCaller, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__Acct[] = {  {&_swigt__p_OTDB__BitcoinAcct, _p_OTDB__BitcoinAcctTo_p_OTDB__Acct, 0, 0},  {&_swigt__p_OTDB__Acct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__AddressBook[] = {  {&_swigt__p_OTDB__AddressBook, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__AskData[] = {  {&_swigt__p_OTDB__AskData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__BidData[] = {  {&_swigt__p_OTDB__BidData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__BitcoinAcct[] = {  {&_swigt__p_OTDB__BitcoinAcct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__BitcoinServer[] = {  {&_swigt__p_OTDB__BitcoinServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__Blob[] = {  {&_swigt__p_OTDB__Blob, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__Contact[] = {  {&_swigt__p_OTDB__Contact, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__ContactAcct[] = {  {&_swigt__p_OTDB__ContactAcct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__ContactNym[] = {  {&_swigt__p_OTDB__ContactNym, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__Displayable[] = {  {&_swigt__p_OTDB__ContactNym, _p_OTDB__ContactNymTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__LoomServer, _p_OTDB__LoomServerTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__RippleServer, _p_OTDB__RippleServerTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__Server, _p_OTDB__ServerTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__TradeDataMarket, _p_OTDB__TradeDataMarketTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__OfferDataMarket, _p_OTDB__OfferDataMarketTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__BitcoinServer, _p_OTDB__BitcoinServerTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__ContactAcct, _p_OTDB__ContactAcctTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__Displayable, 0, 0, 0},  {&_swigt__p_OTDB__BitcoinAcct, _p_OTDB__BitcoinAcctTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__MarketData, _p_OTDB__MarketDataTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__ServerInfo, _p_OTDB__ServerInfoTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__Contact, _p_OTDB__ContactTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__BidData, _p_OTDB__BidDataTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__AskData, _p_OTDB__AskDataTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__Acct, _p_OTDB__AcctTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__TradeDataNym, _p_OTDB__TradeDataNymTo_p_OTDB__Displayable, 0, 0},  {&_swigt__p_OTDB__OfferDataNym, _p_OTDB__OfferDataNymTo_p_OTDB__Displayable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__LoomServer[] = {  {&_swigt__p_OTDB__LoomServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__MarketData[] = {  {&_swigt__p_OTDB__MarketData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__MarketList[] = {  {&_swigt__p_OTDB__MarketList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__OTDBString[] = {  {&_swigt__p_OTDB__OTDBString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__OfferDataMarket[] = {  {&_swigt__p_OTDB__AskData, _p_OTDB__AskDataTo_p_OTDB__OfferDataMarket, 0, 0},  {&_swigt__p_OTDB__OfferDataMarket, 0, 0, 0},  {&_swigt__p_OTDB__BidData, _p_OTDB__BidDataTo_p_OTDB__OfferDataMarket, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__OfferDataNym[] = {  {&_swigt__p_OTDB__OfferDataNym, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__OfferListMarket[] = {  {&_swigt__p_OTDB__OfferListMarket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__OfferListNym[] = {  {&_swigt__p_OTDB__OfferListNym, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__RippleServer[] = {  {&_swigt__p_OTDB__RippleServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__Server[] = {  {&_swigt__p_OTDB__BitcoinServer, _p_OTDB__BitcoinServerTo_p_OTDB__Server, 0, 0},  {&_swigt__p_OTDB__Server, 0, 0, 0},  {&_swigt__p_OTDB__RippleServer, _p_OTDB__RippleServerTo_p_OTDB__Server, 0, 0},  {&_swigt__p_OTDB__LoomServer, _p_OTDB__LoomServerTo_p_OTDB__Server, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__ServerInfo[] = {  {&_swigt__p_OTDB__BitcoinServer, _p_OTDB__BitcoinServerTo_p_OTDB__ServerInfo, 0, 0},  {&_swigt__p_OTDB__Server, _p_OTDB__ServerTo_p_OTDB__ServerInfo, 0, 0},  {&_swigt__p_OTDB__RippleServer, _p_OTDB__RippleServerTo_p_OTDB__ServerInfo, 0, 0},  {&_swigt__p_OTDB__LoomServer, _p_OTDB__LoomServerTo_p_OTDB__ServerInfo, 0, 0},  {&_swigt__p_OTDB__ServerInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__Storable[] = {  {&_swigt__p_OTDB__MarketList, _p_OTDB__MarketListTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__ContactNym, _p_OTDB__ContactNymTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__LoomServer, _p_OTDB__LoomServerTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__RippleServer, _p_OTDB__RippleServerTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__Server, _p_OTDB__ServerTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__OfferListNym, _p_OTDB__OfferListNymTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__TradeListNym, _p_OTDB__TradeListNymTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__TradeDataMarket, _p_OTDB__TradeDataMarketTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__OfferDataMarket, _p_OTDB__OfferDataMarketTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__Blob, _p_OTDB__BlobTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__StringMap, _p_OTDB__StringMapTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__BitcoinServer, _p_OTDB__BitcoinServerTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__OfferListMarket, _p_OTDB__OfferListMarketTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__TradeListMarket, _p_OTDB__TradeListMarketTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__Displayable, _p_OTDB__DisplayableTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__ContactAcct, _p_OTDB__ContactAcctTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__WalletData, _p_OTDB__WalletDataTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__Storable, 0, 0, 0},  {&_swigt__p_OTDB__BitcoinAcct, _p_OTDB__BitcoinAcctTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__OTDBString, _p_OTDB__OTDBStringTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__MarketData, _p_OTDB__MarketDataTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__ServerInfo, _p_OTDB__ServerInfoTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__Contact, _p_OTDB__ContactTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__AddressBook, _p_OTDB__AddressBookTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__BidData, _p_OTDB__BidDataTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__AskData, _p_OTDB__AskDataTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__Acct, _p_OTDB__AcctTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__TradeDataNym, _p_OTDB__TradeDataNymTo_p_OTDB__Storable, 0, 0},  {&_swigt__p_OTDB__OfferDataNym, _p_OTDB__OfferDataNymTo_p_OTDB__Storable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__Storage[] = {  {&_swigt__p_OTDB__Storage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__StringMap[] = {  {&_swigt__p_OTDB__StringMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__TradeDataMarket[] = {  {&_swigt__p_OTDB__TradeDataMarket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__TradeDataNym[] = {  {&_swigt__p_OTDB__TradeDataNym, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__TradeListMarket[] = {  {&_swigt__p_OTDB__TradeListMarket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__TradeListNym[] = {  {&_swigt__p_OTDB__TradeListNym, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTDB__WalletData[] = {  {&_swigt__p_OTDB__WalletData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTPacker[] = {  {&_swigt__p_OTPacker, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTPassword[] = {  {&_swigt__p_OTPassword, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTPasswordData[] = {  {&_swigt__p_OTPasswordData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OTString[] = {  {&_swigt__p_OTString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int32_t[] = {  {&_swigt__p_int32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_std__string_std__string_t[] = {  {&_swigt__p_std__mapT_std__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_unsigned_char_t[] = {  {&_swigt__p_std__vectorT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint32_t[] = {  {&_swigt__p_uint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint8_t[] = {  {&_swigt__p_uint8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_OTCallback,
  _swigc__p_OTCaller,
  _swigc__p_OTDB__Acct,
  _swigc__p_OTDB__AddressBook,
  _swigc__p_OTDB__AskData,
  _swigc__p_OTDB__BidData,
  _swigc__p_OTDB__BitcoinAcct,
  _swigc__p_OTDB__BitcoinServer,
  _swigc__p_OTDB__Blob,
  _swigc__p_OTDB__Contact,
  _swigc__p_OTDB__ContactAcct,
  _swigc__p_OTDB__ContactNym,
  _swigc__p_OTDB__Displayable,
  _swigc__p_OTDB__LoomServer,
  _swigc__p_OTDB__MarketData,
  _swigc__p_OTDB__MarketList,
  _swigc__p_OTDB__OTDBString,
  _swigc__p_OTDB__OfferDataMarket,
  _swigc__p_OTDB__OfferDataNym,
  _swigc__p_OTDB__OfferListMarket,
  _swigc__p_OTDB__OfferListNym,
  _swigc__p_OTDB__RippleServer,
  _swigc__p_OTDB__Server,
  _swigc__p_OTDB__ServerInfo,
  _swigc__p_OTDB__Storable,
  _swigc__p_OTDB__Storage,
  _swigc__p_OTDB__StringMap,
  _swigc__p_OTDB__TradeDataMarket,
  _swigc__p_OTDB__TradeDataNym,
  _swigc__p_OTDB__TradeListMarket,
  _swigc__p_OTDB__TradeListNym,
  _swigc__p_OTDB__WalletData,
  _swigc__p_OTPacker,
  _swigc__p_OTPassword,
  _swigc__p_OTPasswordData,
  _swigc__p_OTString,
  _swigc__p_char,
  _swigc__p_int32_t,
  _swigc__p_std__mapT_std__string_std__string_t,
  _swigc__p_std__vectorT_unsigned_char_t,
  _swigc__p_uint32_t,
  _swigc__p_uint8_t,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif


#ifdef __cplusplus
extern "C" {
#endif
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  
  SWIGINTERN void
  SWIG_Tcl_InstallConstants(Tcl_Interp *interp, swig_const_info constants[]) {
    size_t i;
    Tcl_Obj *obj;
    
    if (!swigconstTableinit) {
      Tcl_InitHashTable(&swigconstTable, TCL_STRING_KEYS);
      swigconstTableinit = 1;
    }
    for (i = 0; constants[i].type; i++) {
      switch(constants[i].type) {
      case SWIG_TCL_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_TCL_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        SWIG_Tcl_SetConstantObj(interp, constants[i].name, obj);
      }
    }
  }
  
  /* Create fast method lookup tables */
  
  SWIGINTERN void
  SWIG_Tcl_InstallMethodLookupTables(void) {
    size_t i;
    
    for (i = 0; i < swig_module.size; ++i) {
      swig_type_info *type = swig_module.type_initial[i];
      if (type->clientdata) {
        swig_class* klass = (swig_class*) type->clientdata;
        swig_method* meth;
        Tcl_InitHashTable(&(klass->hashtable), TCL_STRING_KEYS);
        for (meth = klass->methods; meth && meth->name; ++meth) {
          int newEntry;
          Tcl_HashEntry* hashentry = Tcl_CreateHashEntry(&(klass->hashtable), meth->name, &newEntry);
          Tcl_SetHashValue(hashentry, (ClientData)meth->method);
        }
      }
    }
  }
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

SWIGEXPORT int SWIG_init(Tcl_Interp *interp) {
  size_t i;
  if (interp == 0) return TCL_ERROR;
#ifdef USE_TCL_STUBS
  /* (char*) cast is required to avoid compiler warning/error for Tcl < 8.4. */
  if (Tcl_InitStubs(interp, (char*)SWIG_TCL_STUBS_VERSION, 0) == NULL) {
    return TCL_ERROR;
  }
#endif  
#ifdef USE_TK_STUBS
  /* (char*) cast is required to avoid compiler warning/error. */
  if (Tk_InitStubs(interp, (char*)SWIG_TCL_STUBS_VERSION, 0) == NULL) {
    return TCL_ERROR;
  }
#endif
  
  Tcl_PkgProvide(interp, (char*)SWIG_name, (char*)SWIG_version);
  
#ifdef SWIG_namespace
  Tcl_Eval(interp, "namespace eval " SWIG_namespace " { }");
#endif
  
  SWIG_InitializeModule((void *) interp);
  SWIG_PropagateClientData();
  
  for (i = 0; swig_commands[i].name; i++) {
    Tcl_CreateObjCommand(interp, (char *) swig_commands[i].name, (swig_wrapper_func) swig_commands[i].wrapper,
      swig_commands[i].clientdata, NULL);
  }
  for (i = 0; swig_variables[i].name; i++) {
    Tcl_SetVar(interp, (char *) swig_variables[i].name, (char *) "", TCL_GLOBAL_ONLY);
    Tcl_TraceVar(interp, (char *) swig_variables[i].name, TCL_TRACE_READS | TCL_GLOBAL_ONLY, 
      (Tcl_VarTraceProc *) swig_variables[i].get, (ClientData) swig_variables[i].addr);
    Tcl_TraceVar(interp, (char *) swig_variables[i].name, TCL_TRACE_WRITES | TCL_GLOBAL_ONLY, 
      (Tcl_VarTraceProc *) swig_variables[i].set, (ClientData) swig_variables[i].addr);
  }
  
  SWIG_Tcl_InstallConstants(interp, swig_constants);
  SWIG_Tcl_InstallMethodLookupTables();
  
  
  SWIG_Tcl_SetConstantObj(interp, "OTPASSWORD_BLOCKSIZE", SWIG_From_int(static_cast< int >(128)));
  SWIG_Tcl_SetConstantObj(interp, "OTPASSWORD_MEMSIZE", SWIG_From_int(static_cast< int >(129)));
  SWIG_Tcl_SetConstantObj(interp, "OT_LARGE_BLOCKSIZE", SWIG_From_int(static_cast< int >(32767)));
  SWIG_Tcl_SetConstantObj(interp, "OT_LARGE_MEMSIZE", SWIG_From_int(static_cast< int >(32768)));
  SWIG_Tcl_SetConstantObj(interp, "OT_DEFAULT_BLOCKSIZE", SWIG_From_int(static_cast< int >(128)));
  SWIG_Tcl_SetConstantObj(interp, "OT_DEFAULT_MEMSIZE", SWIG_From_int(static_cast< int >(129)));
  SWIG_Tcl_SetConstantObj(interp, "OTPassword_DEFAULT_SIZE", SWIG_From_int(static_cast< int >(OTPassword::DEFAULT_SIZE)));
  SWIG_Tcl_SetConstantObj(interp, "OTPassword_LARGER_SIZE", SWIG_From_int(static_cast< int >(OTPassword::LARGER_SIZE)));
  SWIG_Tcl_SetConstantObj(interp, "PACK_MESSAGE_PACK", SWIG_From_int(static_cast< int >(OTDB::PACK_MESSAGE_PACK)));
  SWIG_Tcl_SetConstantObj(interp, "PACK_PROTOCOL_BUFFERS", SWIG_From_int(static_cast< int >(OTDB::PACK_PROTOCOL_BUFFERS)));
  SWIG_Tcl_SetConstantObj(interp, "PACK_TYPE_ERROR", SWIG_From_int(static_cast< int >(OTDB::PACK_TYPE_ERROR)));
  SWIG_Tcl_SetConstantObj(interp, "STORE_FILESYSTEM", SWIG_From_int(static_cast< int >(OTDB::STORE_FILESYSTEM)));
  SWIG_Tcl_SetConstantObj(interp, "STORE_TYPE_SUBCLASS", SWIG_From_int(static_cast< int >(OTDB::STORE_TYPE_SUBCLASS)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_STRING", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_STRING)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_BLOB", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_BLOB)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_STRING_MAP", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_STRING_MAP)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_WALLET_DATA", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_WALLET_DATA)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_BITCOIN_ACCT", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_BITCOIN_ACCT)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_BITCOIN_SERVER", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_BITCOIN_SERVER)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_RIPPLE_SERVER", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_RIPPLE_SERVER)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_LOOM_SERVER", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_LOOM_SERVER)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_SERVER_INFO", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_SERVER_INFO)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_CONTACT_NYM", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_CONTACT_NYM)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_CONTACT_ACCT", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_CONTACT_ACCT)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_CONTACT", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_CONTACT)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_ADDRESS_BOOK", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_ADDRESS_BOOK)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_MARKET_DATA", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_MARKET_DATA)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_MARKET_LIST", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_MARKET_LIST)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_BID_DATA", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_BID_DATA)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_ASK_DATA", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_ASK_DATA)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_OFFER_LIST_MARKET", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_OFFER_LIST_MARKET)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_TRADE_DATA_MARKET", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_TRADE_DATA_MARKET)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_TRADE_LIST_MARKET", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_TRADE_LIST_MARKET)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_OFFER_DATA_NYM", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_OFFER_DATA_NYM)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_OFFER_LIST_NYM", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_OFFER_LIST_NYM)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_TRADE_DATA_NYM", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_TRADE_DATA_NYM)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_TRADE_LIST_NYM", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_TRADE_LIST_NYM)));
  SWIG_Tcl_SetConstantObj(interp, "STORED_OBJ_ERROR", SWIG_From_int(static_cast< int >(OTDB::STORED_OBJ_ERROR)));
  return TCL_OK;
}
SWIGEXPORT int Otapi_SafeInit(Tcl_Interp *interp) {
  return SWIG_init(interp);
}

