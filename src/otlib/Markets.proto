

package OTDB;


// ----------------------------------------------------


message MarketData_InternalPB {
  optional string gui_label = 1;
  
  optional string server_id = 2;	
  optional string market_id = 3;	
  
  optional string asset_type_id = 4;	// Perhaps this is the gold market.
  optional string currency_type_id = 5;	// Perhaps the gold is trading for dollars.
										// Based on that example, gold is the asset type, and dollars are the currency.
  optional string scale = 6;			// the Market scale. (A trade in any particular asset is measured in X units of SCALE.)
										// IOW, if the scale is 5000 on the gold market, that means "3 units" is 15000 gold (on that market.)
  optional string total_assets = 7;		// total amount of assets available on market for purchase.

  optional string number_bids = 8;		// number of bids that are currently on the market.
  optional string number_asks = 9;		// number of asks that are currently on the market.

  optional string last_sale_price = 10;	// The price at which the most recent trade occurred on this market.
  optional string current_bid = 11;		// The highest bid currently on the market.
  optional string current_ask = 12;		// The lowest ask price currently available on the market.
  
  optional string volume_trades = 13;	// 24-hour period, number of trades.

  optional string volume_assets = 14;	// 24-hour volume, amount of assets traded.
  optional string volume_currency = 15;	// 24-hour volume, amount of currency paid for assets traded.
  
  optional string recent_highest_bid = 16;	// in a 24hour period, the highest bid to hit the market.
  optional string recent_lowest_ask = 17;	// in a 24hour period, the lowest ask to hit the market.
}

// ----------------------------------------------------


message MarketList_InternalPB {
  repeated  MarketData_InternalPB  market_data = 1;
}


// ******************************************************

message OfferDataMarket_InternalPB {
	optional string gui_label = 1;
	optional string transaction_id = 2;
	optional string price_per_scale = 3;

	// This is public data, so we only show the amount available.
//	optional string total_assets;
//	optional string finished_so_far;
	optional string available_assets = 4;

	// Each sale or purchase against (total_assets - finished_so_far) must be in minimum increments.
	// Minimum Increment must be evenly divisible by scale. 
	// (This effectively becomes a "FILL OR KILL" order if set to the same value as total_assets. Also, MUST be 1
	// or greater. CANNOT be zero. Enforce this at class level. You cannot sell something in minimum increments of 0.)
	optional string minimum_increment = 5; 	
}

//
// MARKET DEPTH (for a given market)
//		1. Bids (Price per scale, amount for sale/purchase, minimum_increment)
//		2. Asks (Price per scale, amount for sale/purchase, minimum_increment)
//

message OfferListMarket_InternalPB {
	repeated OfferDataMarket_InternalPB  bids = 1;
	repeated OfferDataMarket_InternalPB  asks = 2;
}

// ******************************************************

message TradeDataMarket_InternalPB {
	optional string gui_label = 1;
	optional string transaction_id = 2;	// (transaction number for this trade.)
	optional string date = 3;			// (The date of this trade's execution)
	optional string price = 4;			// (The price this trade executed at.)
	optional string amount_sold = 5;	// (Amount of asset sold for that price.)	
}


// ----------------------------------------------------

message TradeListMarket_InternalPB {
	repeated TradeDataMarket_InternalPB  trades = 1;
}

// ******************************************************

message OfferDataNym_InternalPB {
	optional string gui_label = 1;
	
	optional string valid_from = 2;
	optional string valid_to = 3;

	optional string server_id = 4;
	optional string asset_type_id = 5;		// the asset type on offer.
	optional string asset_acct_id = 6;		// the account where asset is.
	optional string currency_type_id = 7;	// the currency being used to purchase the asset.
	optional string currency_acct_id = 8;	// the account where currency is.

	optional bool selling = 9;		// true for ask, false for bid.

	optional string scale = 10;	// 1oz market? 100oz market? 10,000oz market? This determines size and granularity.
	optional string price_per_scale = 11;

	optional string transaction_id = 12;

	optional string total_assets = 13;
	optional string finished_so_far = 14;


	// Each sale or purchase against (total_assets - finished_so_far) must be in minimum increments.
	// Minimum Increment must be evenly divisible by scale. 
	// (This effectively becomes a "FILL OR KILL" order if set to the same value as total_assets. Also, MUST be 1
	// or greater. CANNOT be zero. Enforce this at class level. You cannot sell something in minimum increments of 0.)

	optional string minimum_increment = 15;  	

	optional string stop_sign = 16;		// If this is a stop order, this will contain '<' or '>'.
	optional string stop_price = 17;	// The price at which the stop order activates (less than X or greater than X, based on sign.)
}

// ----------------------------------------------------

message OfferListNym_InternalPB {
	repeated OfferDataNym_InternalPB  offers = 1;
}


// ******************************************************

message TradeDataNym_InternalPB {
	optional string gui_label = 1;
	optional string completed_count = 2;// (How many trades have processed for the associated offer? We keep count for each trade.)
	optional string date = 3;			// (The date of this trade's execution)
	optional string price = 4;			// (The price this trade executed at.)
	optional string amount_sold = 5;	// (Amount of asset sold for that price.)	
	optional string transaction_id = 6;	// (transaction number for this trade.)
}

// ----------------------------------------------------

message TradeListNym_InternalPB {
	repeated TradeDataNym_InternalPB  trades = 1;
}

// ******************************************************









