// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Moneychanger.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace OTDB {

namespace {

const ::google::protobuf::Descriptor* ServerInfo_InternalPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerInfo_InternalPB_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContactNym_InternalPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContactNym_InternalPB_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContactAcct_InternalPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContactAcct_InternalPB_reflection_ = NULL;
const ::google::protobuf::Descriptor* Contact_InternalPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Contact_InternalPB_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddressBook_InternalPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddressBook_InternalPB_reflection_ = NULL;
const ::google::protobuf::Descriptor* WalletData_InternalPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WalletData_InternalPB_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Moneychanger_2eproto() {
  protobuf_AddDesc_Moneychanger_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Moneychanger.proto");
  GOOGLE_CHECK(file != NULL);
  ServerInfo_InternalPB_descriptor_ = file->message_type(0);
  static const int ServerInfo_InternalPB_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo_InternalPB, server_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo_InternalPB, server_id_),
  };
  ServerInfo_InternalPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerInfo_InternalPB_descriptor_,
      ServerInfo_InternalPB::default_instance_,
      ServerInfo_InternalPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo_InternalPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo_InternalPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerInfo_InternalPB));
  ContactNym_InternalPB_descriptor_ = file->message_type(1);
  static const int ContactNym_InternalPB_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactNym_InternalPB, gui_label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactNym_InternalPB, nym_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactNym_InternalPB, nym_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactNym_InternalPB, public_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactNym_InternalPB, memo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactNym_InternalPB, servers_),
  };
  ContactNym_InternalPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContactNym_InternalPB_descriptor_,
      ContactNym_InternalPB::default_instance_,
      ContactNym_InternalPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactNym_InternalPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactNym_InternalPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContactNym_InternalPB));
  ContactAcct_InternalPB_descriptor_ = file->message_type(2);
  static const int ContactAcct_InternalPB_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAcct_InternalPB, gui_label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAcct_InternalPB, server_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAcct_InternalPB, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAcct_InternalPB, asset_type_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAcct_InternalPB, acct_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAcct_InternalPB, nym_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAcct_InternalPB, memo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAcct_InternalPB, public_key_),
  };
  ContactAcct_InternalPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContactAcct_InternalPB_descriptor_,
      ContactAcct_InternalPB::default_instance_,
      ContactAcct_InternalPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAcct_InternalPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAcct_InternalPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContactAcct_InternalPB));
  Contact_InternalPB_descriptor_ = file->message_type(3);
  static const int Contact_InternalPB_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact_InternalPB, gui_label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact_InternalPB, contact_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact_InternalPB, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact_InternalPB, memo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact_InternalPB, public_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact_InternalPB, nyms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact_InternalPB, accounts_),
  };
  Contact_InternalPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Contact_InternalPB_descriptor_,
      Contact_InternalPB::default_instance_,
      Contact_InternalPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact_InternalPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact_InternalPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Contact_InternalPB));
  AddressBook_InternalPB_descriptor_ = file->message_type(4);
  static const int AddressBook_InternalPB_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressBook_InternalPB, contacts_),
  };
  AddressBook_InternalPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddressBook_InternalPB_descriptor_,
      AddressBook_InternalPB::default_instance_,
      AddressBook_InternalPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressBook_InternalPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressBook_InternalPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddressBook_InternalPB));
  WalletData_InternalPB_descriptor_ = file->message_type(5);
  static const int WalletData_InternalPB_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletData_InternalPB, bitcoin_server_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletData_InternalPB, bitcoin_acct_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletData_InternalPB, ripple_server_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletData_InternalPB, loom_server_),
  };
  WalletData_InternalPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WalletData_InternalPB_descriptor_,
      WalletData_InternalPB::default_instance_,
      WalletData_InternalPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletData_InternalPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletData_InternalPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WalletData_InternalPB));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Moneychanger_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerInfo_InternalPB_descriptor_, &ServerInfo_InternalPB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContactNym_InternalPB_descriptor_, &ContactNym_InternalPB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContactAcct_InternalPB_descriptor_, &ContactAcct_InternalPB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Contact_InternalPB_descriptor_, &Contact_InternalPB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddressBook_InternalPB_descriptor_, &AddressBook_InternalPB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WalletData_InternalPB_descriptor_, &WalletData_InternalPB::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Moneychanger_2eproto() {
  delete ServerInfo_InternalPB::default_instance_;
  delete ServerInfo_InternalPB_reflection_;
  delete ContactNym_InternalPB::default_instance_;
  delete ContactNym_InternalPB_reflection_;
  delete ContactAcct_InternalPB::default_instance_;
  delete ContactAcct_InternalPB_reflection_;
  delete Contact_InternalPB::default_instance_;
  delete Contact_InternalPB_reflection_;
  delete AddressBook_InternalPB::default_instance_;
  delete AddressBook_InternalPB_reflection_;
  delete WalletData_InternalPB::default_instance_;
  delete WalletData_InternalPB_reflection_;
}

void protobuf_AddDesc_Moneychanger_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::OTDB::protobuf_AddDesc_Generics_2eproto();
  ::OTDB::protobuf_AddDesc_Bitcoin_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022Moneychanger.proto\022\004OTDB\032\016Generics.pro"
    "to\032\rBitcoin.proto\"\?\n\025ServerInfo_Internal"
    "PB\022\023\n\013server_type\030\001 \001(\t\022\021\n\tserver_id\030\002 \001"
    "(\t\"\234\001\n\025ContactNym_InternalPB\022\021\n\tgui_labe"
    "l\030\001 \001(\t\022\020\n\010nym_type\030\002 \001(\t\022\016\n\006nym_id\030\003 \001("
    "\t\022\022\n\npublic_key\030\004 \001(\t\022\014\n\004memo\030\005 \001(\t\022,\n\007s"
    "ervers\030\006 \003(\0132\033.OTDB.ServerInfo_InternalP"
    "B\"\255\001\n\026ContactAcct_InternalPB\022\021\n\tgui_labe"
    "l\030\001 \001(\t\022\023\n\013server_type\030\002 \001(\t\022\021\n\tserver_i"
    "d\030\003 \001(\t\022\025\n\rasset_type_id\030\004 \001(\t\022\017\n\007acct_i"
    "d\030\005 \001(\t\022\016\n\006nym_id\030\006 \001(\t\022\014\n\004memo\030\007 \001(\t\022\022\n"
    "\npublic_key\030\010 \001(\t\"\307\001\n\022Contact_InternalPB"
    "\022\021\n\tgui_label\030\001 \001(\t\022\022\n\ncontact_id\030\002 \001(\t\022"
    "\r\n\005email\030\003 \001(\t\022\014\n\004memo\030\004 \001(\t\022\022\n\npublic_k"
    "ey\030\005 \001(\t\022)\n\004nyms\030\006 \003(\0132\033.OTDB.ContactNym"
    "_InternalPB\022.\n\010accounts\030\007 \003(\0132\034.OTDB.Con"
    "tactAcct_InternalPB\"D\n\026AddressBook_Inter"
    "nalPB\022*\n\010contacts\030\001 \003(\0132\030.OTDB.Contact_I"
    "nternalPB\"\353\001\n\025WalletData_InternalPB\0226\n\016b"
    "itcoin_server\030\001 \003(\0132\036.OTDB.BitcoinServer"
    "_InternalPB\0222\n\014bitcoin_acct\030\002 \003(\0132\034.OTDB"
    ".BitcoinAcct_InternalPB\0224\n\rripple_server"
    "\030\003 \003(\0132\035.OTDB.RippleServer_InternalPB\0220\n"
    "\013loom_server\030\004 \003(\0132\033.OTDB.LoomServer_Int"
    "ernalPB", 967);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Moneychanger.proto", &protobuf_RegisterTypes);
  ServerInfo_InternalPB::default_instance_ = new ServerInfo_InternalPB();
  ContactNym_InternalPB::default_instance_ = new ContactNym_InternalPB();
  ContactAcct_InternalPB::default_instance_ = new ContactAcct_InternalPB();
  Contact_InternalPB::default_instance_ = new Contact_InternalPB();
  AddressBook_InternalPB::default_instance_ = new AddressBook_InternalPB();
  WalletData_InternalPB::default_instance_ = new WalletData_InternalPB();
  ServerInfo_InternalPB::default_instance_->InitAsDefaultInstance();
  ContactNym_InternalPB::default_instance_->InitAsDefaultInstance();
  ContactAcct_InternalPB::default_instance_->InitAsDefaultInstance();
  Contact_InternalPB::default_instance_->InitAsDefaultInstance();
  AddressBook_InternalPB::default_instance_->InitAsDefaultInstance();
  WalletData_InternalPB::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Moneychanger_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Moneychanger_2eproto {
  StaticDescriptorInitializer_Moneychanger_2eproto() {
    protobuf_AddDesc_Moneychanger_2eproto();
  }
} static_descriptor_initializer_Moneychanger_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int ServerInfo_InternalPB::kServerTypeFieldNumber;
const int ServerInfo_InternalPB::kServerIdFieldNumber;
#endif  // !_MSC_VER

ServerInfo_InternalPB::ServerInfo_InternalPB()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ServerInfo_InternalPB::InitAsDefaultInstance() {
}

ServerInfo_InternalPB::ServerInfo_InternalPB(const ServerInfo_InternalPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ServerInfo_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  server_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  server_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerInfo_InternalPB::~ServerInfo_InternalPB() {
  SharedDtor();
}

void ServerInfo_InternalPB::SharedDtor() {
  if (server_type_ != &::google::protobuf::internal::kEmptyString) {
    delete server_type_;
  }
  if (server_id_ != &::google::protobuf::internal::kEmptyString) {
    delete server_id_;
  }
  if (this != default_instance_) {
  }
}

void ServerInfo_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerInfo_InternalPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerInfo_InternalPB_descriptor_;
}

const ServerInfo_InternalPB& ServerInfo_InternalPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Moneychanger_2eproto();  return *default_instance_;
}

ServerInfo_InternalPB* ServerInfo_InternalPB::default_instance_ = NULL;

ServerInfo_InternalPB* ServerInfo_InternalPB::New() const {
  return new ServerInfo_InternalPB;
}

void ServerInfo_InternalPB::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_server_type()) {
      if (server_type_ != &::google::protobuf::internal::kEmptyString) {
        server_type_->clear();
      }
    }
    if (has_server_id()) {
      if (server_id_ != &::google::protobuf::internal::kEmptyString) {
        server_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerInfo_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string server_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->server_type().data(), this->server_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_server_id;
        break;
      }
      
      // optional string server_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->server_id().data(), this->server_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ServerInfo_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string server_type = 1;
  if (has_server_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_type().data(), this->server_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->server_type(), output);
  }
  
  // optional string server_id = 2;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_id().data(), this->server_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->server_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ServerInfo_InternalPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string server_type = 1;
  if (has_server_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_type().data(), this->server_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_type(), target);
  }
  
  // optional string server_id = 2;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_id().data(), this->server_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ServerInfo_InternalPB::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string server_type = 1;
    if (has_server_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_type());
    }
    
    // optional string server_id = 2;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerInfo_InternalPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerInfo_InternalPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerInfo_InternalPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerInfo_InternalPB::MergeFrom(const ServerInfo_InternalPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_type()) {
      set_server_type(from.server_type());
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerInfo_InternalPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfo_InternalPB::CopyFrom(const ServerInfo_InternalPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfo_InternalPB::IsInitialized() const {
  
  return true;
}

void ServerInfo_InternalPB::Swap(ServerInfo_InternalPB* other) {
  if (other != this) {
    std::swap(server_type_, other->server_type_);
    std::swap(server_id_, other->server_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerInfo_InternalPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerInfo_InternalPB_descriptor_;
  metadata.reflection = ServerInfo_InternalPB_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ContactNym_InternalPB::kGuiLabelFieldNumber;
const int ContactNym_InternalPB::kNymTypeFieldNumber;
const int ContactNym_InternalPB::kNymIdFieldNumber;
const int ContactNym_InternalPB::kPublicKeyFieldNumber;
const int ContactNym_InternalPB::kMemoFieldNumber;
const int ContactNym_InternalPB::kServersFieldNumber;
#endif  // !_MSC_VER

ContactNym_InternalPB::ContactNym_InternalPB()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ContactNym_InternalPB::InitAsDefaultInstance() {
}

ContactNym_InternalPB::ContactNym_InternalPB(const ContactNym_InternalPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ContactNym_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  gui_label_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nym_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nym_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  public_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  memo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContactNym_InternalPB::~ContactNym_InternalPB() {
  SharedDtor();
}

void ContactNym_InternalPB::SharedDtor() {
  if (gui_label_ != &::google::protobuf::internal::kEmptyString) {
    delete gui_label_;
  }
  if (nym_type_ != &::google::protobuf::internal::kEmptyString) {
    delete nym_type_;
  }
  if (nym_id_ != &::google::protobuf::internal::kEmptyString) {
    delete nym_id_;
  }
  if (public_key_ != &::google::protobuf::internal::kEmptyString) {
    delete public_key_;
  }
  if (memo_ != &::google::protobuf::internal::kEmptyString) {
    delete memo_;
  }
  if (this != default_instance_) {
  }
}

void ContactNym_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContactNym_InternalPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContactNym_InternalPB_descriptor_;
}

const ContactNym_InternalPB& ContactNym_InternalPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Moneychanger_2eproto();  return *default_instance_;
}

ContactNym_InternalPB* ContactNym_InternalPB::default_instance_ = NULL;

ContactNym_InternalPB* ContactNym_InternalPB::New() const {
  return new ContactNym_InternalPB;
}

void ContactNym_InternalPB::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_gui_label()) {
      if (gui_label_ != &::google::protobuf::internal::kEmptyString) {
        gui_label_->clear();
      }
    }
    if (has_nym_type()) {
      if (nym_type_ != &::google::protobuf::internal::kEmptyString) {
        nym_type_->clear();
      }
    }
    if (has_nym_id()) {
      if (nym_id_ != &::google::protobuf::internal::kEmptyString) {
        nym_id_->clear();
      }
    }
    if (has_public_key()) {
      if (public_key_ != &::google::protobuf::internal::kEmptyString) {
        public_key_->clear();
      }
    }
    if (has_memo()) {
      if (memo_ != &::google::protobuf::internal::kEmptyString) {
        memo_->clear();
      }
    }
  }
  servers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContactNym_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gui_label = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gui_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->gui_label().data(), this->gui_label().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_nym_type;
        break;
      }
      
      // optional string nym_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nym_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nym_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nym_type().data(), this->nym_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_nym_id;
        break;
      }
      
      // optional string nym_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nym_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nym_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nym_id().data(), this->nym_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_public_key;
        break;
      }
      
      // optional string public_key = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_public_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->public_key().data(), this->public_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_memo;
        break;
      }
      
      // optional string memo = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_memo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->memo().data(), this->memo().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_servers;
        break;
      }
      
      // repeated .OTDB.ServerInfo_InternalPB servers = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_servers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_servers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_servers;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ContactNym_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string gui_label = 1;
  if (has_gui_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gui_label().data(), this->gui_label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->gui_label(), output);
  }
  
  // optional string nym_type = 2;
  if (has_nym_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nym_type().data(), this->nym_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->nym_type(), output);
  }
  
  // optional string nym_id = 3;
  if (has_nym_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nym_id().data(), this->nym_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->nym_id(), output);
  }
  
  // optional string public_key = 4;
  if (has_public_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->public_key().data(), this->public_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->public_key(), output);
  }
  
  // optional string memo = 5;
  if (has_memo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->memo().data(), this->memo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->memo(), output);
  }
  
  // repeated .OTDB.ServerInfo_InternalPB servers = 6;
  for (int i = 0; i < this->servers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->servers(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ContactNym_InternalPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string gui_label = 1;
  if (has_gui_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gui_label().data(), this->gui_label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gui_label(), target);
  }
  
  // optional string nym_type = 2;
  if (has_nym_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nym_type().data(), this->nym_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nym_type(), target);
  }
  
  // optional string nym_id = 3;
  if (has_nym_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nym_id().data(), this->nym_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nym_id(), target);
  }
  
  // optional string public_key = 4;
  if (has_public_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->public_key().data(), this->public_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->public_key(), target);
  }
  
  // optional string memo = 5;
  if (has_memo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->memo().data(), this->memo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->memo(), target);
  }
  
  // repeated .OTDB.ServerInfo_InternalPB servers = 6;
  for (int i = 0; i < this->servers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->servers(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ContactNym_InternalPB::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string gui_label = 1;
    if (has_gui_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gui_label());
    }
    
    // optional string nym_type = 2;
    if (has_nym_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nym_type());
    }
    
    // optional string nym_id = 3;
    if (has_nym_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nym_id());
    }
    
    // optional string public_key = 4;
    if (has_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->public_key());
    }
    
    // optional string memo = 5;
    if (has_memo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->memo());
    }
    
  }
  // repeated .OTDB.ServerInfo_InternalPB servers = 6;
  total_size += 1 * this->servers_size();
  for (int i = 0; i < this->servers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->servers(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContactNym_InternalPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContactNym_InternalPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContactNym_InternalPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContactNym_InternalPB::MergeFrom(const ContactNym_InternalPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  servers_.MergeFrom(from.servers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gui_label()) {
      set_gui_label(from.gui_label());
    }
    if (from.has_nym_type()) {
      set_nym_type(from.nym_type());
    }
    if (from.has_nym_id()) {
      set_nym_id(from.nym_id());
    }
    if (from.has_public_key()) {
      set_public_key(from.public_key());
    }
    if (from.has_memo()) {
      set_memo(from.memo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContactNym_InternalPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactNym_InternalPB::CopyFrom(const ContactNym_InternalPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactNym_InternalPB::IsInitialized() const {
  
  return true;
}

void ContactNym_InternalPB::Swap(ContactNym_InternalPB* other) {
  if (other != this) {
    std::swap(gui_label_, other->gui_label_);
    std::swap(nym_type_, other->nym_type_);
    std::swap(nym_id_, other->nym_id_);
    std::swap(public_key_, other->public_key_);
    std::swap(memo_, other->memo_);
    servers_.Swap(&other->servers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ContactNym_InternalPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContactNym_InternalPB_descriptor_;
  metadata.reflection = ContactNym_InternalPB_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ContactAcct_InternalPB::kGuiLabelFieldNumber;
const int ContactAcct_InternalPB::kServerTypeFieldNumber;
const int ContactAcct_InternalPB::kServerIdFieldNumber;
const int ContactAcct_InternalPB::kAssetTypeIdFieldNumber;
const int ContactAcct_InternalPB::kAcctIdFieldNumber;
const int ContactAcct_InternalPB::kNymIdFieldNumber;
const int ContactAcct_InternalPB::kMemoFieldNumber;
const int ContactAcct_InternalPB::kPublicKeyFieldNumber;
#endif  // !_MSC_VER

ContactAcct_InternalPB::ContactAcct_InternalPB()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ContactAcct_InternalPB::InitAsDefaultInstance() {
}

ContactAcct_InternalPB::ContactAcct_InternalPB(const ContactAcct_InternalPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ContactAcct_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  gui_label_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  server_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  server_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  asset_type_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  acct_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nym_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  memo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  public_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContactAcct_InternalPB::~ContactAcct_InternalPB() {
  SharedDtor();
}

void ContactAcct_InternalPB::SharedDtor() {
  if (gui_label_ != &::google::protobuf::internal::kEmptyString) {
    delete gui_label_;
  }
  if (server_type_ != &::google::protobuf::internal::kEmptyString) {
    delete server_type_;
  }
  if (server_id_ != &::google::protobuf::internal::kEmptyString) {
    delete server_id_;
  }
  if (asset_type_id_ != &::google::protobuf::internal::kEmptyString) {
    delete asset_type_id_;
  }
  if (acct_id_ != &::google::protobuf::internal::kEmptyString) {
    delete acct_id_;
  }
  if (nym_id_ != &::google::protobuf::internal::kEmptyString) {
    delete nym_id_;
  }
  if (memo_ != &::google::protobuf::internal::kEmptyString) {
    delete memo_;
  }
  if (public_key_ != &::google::protobuf::internal::kEmptyString) {
    delete public_key_;
  }
  if (this != default_instance_) {
  }
}

void ContactAcct_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContactAcct_InternalPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContactAcct_InternalPB_descriptor_;
}

const ContactAcct_InternalPB& ContactAcct_InternalPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Moneychanger_2eproto();  return *default_instance_;
}

ContactAcct_InternalPB* ContactAcct_InternalPB::default_instance_ = NULL;

ContactAcct_InternalPB* ContactAcct_InternalPB::New() const {
  return new ContactAcct_InternalPB;
}

void ContactAcct_InternalPB::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_gui_label()) {
      if (gui_label_ != &::google::protobuf::internal::kEmptyString) {
        gui_label_->clear();
      }
    }
    if (has_server_type()) {
      if (server_type_ != &::google::protobuf::internal::kEmptyString) {
        server_type_->clear();
      }
    }
    if (has_server_id()) {
      if (server_id_ != &::google::protobuf::internal::kEmptyString) {
        server_id_->clear();
      }
    }
    if (has_asset_type_id()) {
      if (asset_type_id_ != &::google::protobuf::internal::kEmptyString) {
        asset_type_id_->clear();
      }
    }
    if (has_acct_id()) {
      if (acct_id_ != &::google::protobuf::internal::kEmptyString) {
        acct_id_->clear();
      }
    }
    if (has_nym_id()) {
      if (nym_id_ != &::google::protobuf::internal::kEmptyString) {
        nym_id_->clear();
      }
    }
    if (has_memo()) {
      if (memo_ != &::google::protobuf::internal::kEmptyString) {
        memo_->clear();
      }
    }
    if (has_public_key()) {
      if (public_key_ != &::google::protobuf::internal::kEmptyString) {
        public_key_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContactAcct_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gui_label = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gui_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->gui_label().data(), this->gui_label().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_server_type;
        break;
      }
      
      // optional string server_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->server_type().data(), this->server_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_server_id;
        break;
      }
      
      // optional string server_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->server_id().data(), this->server_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_asset_type_id;
        break;
      }
      
      // optional string asset_type_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_asset_type_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_asset_type_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->asset_type_id().data(), this->asset_type_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_acct_id;
        break;
      }
      
      // optional string acct_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_acct_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acct_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->acct_id().data(), this->acct_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_nym_id;
        break;
      }
      
      // optional string nym_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nym_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nym_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nym_id().data(), this->nym_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_memo;
        break;
      }
      
      // optional string memo = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_memo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->memo().data(), this->memo().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_public_key;
        break;
      }
      
      // optional string public_key = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_public_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->public_key().data(), this->public_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ContactAcct_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string gui_label = 1;
  if (has_gui_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gui_label().data(), this->gui_label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->gui_label(), output);
  }
  
  // optional string server_type = 2;
  if (has_server_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_type().data(), this->server_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->server_type(), output);
  }
  
  // optional string server_id = 3;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_id().data(), this->server_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->server_id(), output);
  }
  
  // optional string asset_type_id = 4;
  if (has_asset_type_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->asset_type_id().data(), this->asset_type_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->asset_type_id(), output);
  }
  
  // optional string acct_id = 5;
  if (has_acct_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acct_id().data(), this->acct_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->acct_id(), output);
  }
  
  // optional string nym_id = 6;
  if (has_nym_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nym_id().data(), this->nym_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->nym_id(), output);
  }
  
  // optional string memo = 7;
  if (has_memo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->memo().data(), this->memo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->memo(), output);
  }
  
  // optional string public_key = 8;
  if (has_public_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->public_key().data(), this->public_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->public_key(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ContactAcct_InternalPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string gui_label = 1;
  if (has_gui_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gui_label().data(), this->gui_label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gui_label(), target);
  }
  
  // optional string server_type = 2;
  if (has_server_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_type().data(), this->server_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_type(), target);
  }
  
  // optional string server_id = 3;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_id().data(), this->server_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->server_id(), target);
  }
  
  // optional string asset_type_id = 4;
  if (has_asset_type_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->asset_type_id().data(), this->asset_type_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->asset_type_id(), target);
  }
  
  // optional string acct_id = 5;
  if (has_acct_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acct_id().data(), this->acct_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->acct_id(), target);
  }
  
  // optional string nym_id = 6;
  if (has_nym_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nym_id().data(), this->nym_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->nym_id(), target);
  }
  
  // optional string memo = 7;
  if (has_memo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->memo().data(), this->memo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->memo(), target);
  }
  
  // optional string public_key = 8;
  if (has_public_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->public_key().data(), this->public_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->public_key(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ContactAcct_InternalPB::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string gui_label = 1;
    if (has_gui_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gui_label());
    }
    
    // optional string server_type = 2;
    if (has_server_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_type());
    }
    
    // optional string server_id = 3;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_id());
    }
    
    // optional string asset_type_id = 4;
    if (has_asset_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->asset_type_id());
    }
    
    // optional string acct_id = 5;
    if (has_acct_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acct_id());
    }
    
    // optional string nym_id = 6;
    if (has_nym_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nym_id());
    }
    
    // optional string memo = 7;
    if (has_memo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->memo());
    }
    
    // optional string public_key = 8;
    if (has_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->public_key());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContactAcct_InternalPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContactAcct_InternalPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContactAcct_InternalPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContactAcct_InternalPB::MergeFrom(const ContactAcct_InternalPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gui_label()) {
      set_gui_label(from.gui_label());
    }
    if (from.has_server_type()) {
      set_server_type(from.server_type());
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_asset_type_id()) {
      set_asset_type_id(from.asset_type_id());
    }
    if (from.has_acct_id()) {
      set_acct_id(from.acct_id());
    }
    if (from.has_nym_id()) {
      set_nym_id(from.nym_id());
    }
    if (from.has_memo()) {
      set_memo(from.memo());
    }
    if (from.has_public_key()) {
      set_public_key(from.public_key());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContactAcct_InternalPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactAcct_InternalPB::CopyFrom(const ContactAcct_InternalPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactAcct_InternalPB::IsInitialized() const {
  
  return true;
}

void ContactAcct_InternalPB::Swap(ContactAcct_InternalPB* other) {
  if (other != this) {
    std::swap(gui_label_, other->gui_label_);
    std::swap(server_type_, other->server_type_);
    std::swap(server_id_, other->server_id_);
    std::swap(asset_type_id_, other->asset_type_id_);
    std::swap(acct_id_, other->acct_id_);
    std::swap(nym_id_, other->nym_id_);
    std::swap(memo_, other->memo_);
    std::swap(public_key_, other->public_key_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ContactAcct_InternalPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContactAcct_InternalPB_descriptor_;
  metadata.reflection = ContactAcct_InternalPB_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Contact_InternalPB::kGuiLabelFieldNumber;
const int Contact_InternalPB::kContactIdFieldNumber;
const int Contact_InternalPB::kEmailFieldNumber;
const int Contact_InternalPB::kMemoFieldNumber;
const int Contact_InternalPB::kPublicKeyFieldNumber;
const int Contact_InternalPB::kNymsFieldNumber;
const int Contact_InternalPB::kAccountsFieldNumber;
#endif  // !_MSC_VER

Contact_InternalPB::Contact_InternalPB()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Contact_InternalPB::InitAsDefaultInstance() {
}

Contact_InternalPB::Contact_InternalPB(const Contact_InternalPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Contact_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  gui_label_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  contact_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  memo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  public_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Contact_InternalPB::~Contact_InternalPB() {
  SharedDtor();
}

void Contact_InternalPB::SharedDtor() {
  if (gui_label_ != &::google::protobuf::internal::kEmptyString) {
    delete gui_label_;
  }
  if (contact_id_ != &::google::protobuf::internal::kEmptyString) {
    delete contact_id_;
  }
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    delete email_;
  }
  if (memo_ != &::google::protobuf::internal::kEmptyString) {
    delete memo_;
  }
  if (public_key_ != &::google::protobuf::internal::kEmptyString) {
    delete public_key_;
  }
  if (this != default_instance_) {
  }
}

void Contact_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Contact_InternalPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Contact_InternalPB_descriptor_;
}

const Contact_InternalPB& Contact_InternalPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Moneychanger_2eproto();  return *default_instance_;
}

Contact_InternalPB* Contact_InternalPB::default_instance_ = NULL;

Contact_InternalPB* Contact_InternalPB::New() const {
  return new Contact_InternalPB;
}

void Contact_InternalPB::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_gui_label()) {
      if (gui_label_ != &::google::protobuf::internal::kEmptyString) {
        gui_label_->clear();
      }
    }
    if (has_contact_id()) {
      if (contact_id_ != &::google::protobuf::internal::kEmptyString) {
        contact_id_->clear();
      }
    }
    if (has_email()) {
      if (email_ != &::google::protobuf::internal::kEmptyString) {
        email_->clear();
      }
    }
    if (has_memo()) {
      if (memo_ != &::google::protobuf::internal::kEmptyString) {
        memo_->clear();
      }
    }
    if (has_public_key()) {
      if (public_key_ != &::google::protobuf::internal::kEmptyString) {
        public_key_->clear();
      }
    }
  }
  nyms_.Clear();
  accounts_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Contact_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gui_label = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gui_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->gui_label().data(), this->gui_label().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_contact_id;
        break;
      }
      
      // optional string contact_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_contact_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->contact_id().data(), this->contact_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_email;
        break;
      }
      
      // optional string email = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_memo;
        break;
      }
      
      // optional string memo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_memo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->memo().data(), this->memo().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_public_key;
        break;
      }
      
      // optional string public_key = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_public_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->public_key().data(), this->public_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_nyms;
        break;
      }
      
      // repeated .OTDB.ContactNym_InternalPB nyms = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nyms:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nyms()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_nyms;
        if (input->ExpectTag(58)) goto parse_accounts;
        break;
      }
      
      // repeated .OTDB.ContactAcct_InternalPB accounts = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_accounts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_accounts()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_accounts;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Contact_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string gui_label = 1;
  if (has_gui_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gui_label().data(), this->gui_label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->gui_label(), output);
  }
  
  // optional string contact_id = 2;
  if (has_contact_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->contact_id().data(), this->contact_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->contact_id(), output);
  }
  
  // optional string email = 3;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->email(), output);
  }
  
  // optional string memo = 4;
  if (has_memo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->memo().data(), this->memo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->memo(), output);
  }
  
  // optional string public_key = 5;
  if (has_public_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->public_key().data(), this->public_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->public_key(), output);
  }
  
  // repeated .OTDB.ContactNym_InternalPB nyms = 6;
  for (int i = 0; i < this->nyms_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->nyms(i), output);
  }
  
  // repeated .OTDB.ContactAcct_InternalPB accounts = 7;
  for (int i = 0; i < this->accounts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->accounts(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Contact_InternalPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string gui_label = 1;
  if (has_gui_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gui_label().data(), this->gui_label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gui_label(), target);
  }
  
  // optional string contact_id = 2;
  if (has_contact_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->contact_id().data(), this->contact_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contact_id(), target);
  }
  
  // optional string email = 3;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }
  
  // optional string memo = 4;
  if (has_memo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->memo().data(), this->memo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->memo(), target);
  }
  
  // optional string public_key = 5;
  if (has_public_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->public_key().data(), this->public_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->public_key(), target);
  }
  
  // repeated .OTDB.ContactNym_InternalPB nyms = 6;
  for (int i = 0; i < this->nyms_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->nyms(i), target);
  }
  
  // repeated .OTDB.ContactAcct_InternalPB accounts = 7;
  for (int i = 0; i < this->accounts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->accounts(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Contact_InternalPB::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string gui_label = 1;
    if (has_gui_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gui_label());
    }
    
    // optional string contact_id = 2;
    if (has_contact_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->contact_id());
    }
    
    // optional string email = 3;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }
    
    // optional string memo = 4;
    if (has_memo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->memo());
    }
    
    // optional string public_key = 5;
    if (has_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->public_key());
    }
    
  }
  // repeated .OTDB.ContactNym_InternalPB nyms = 6;
  total_size += 1 * this->nyms_size();
  for (int i = 0; i < this->nyms_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nyms(i));
  }
  
  // repeated .OTDB.ContactAcct_InternalPB accounts = 7;
  total_size += 1 * this->accounts_size();
  for (int i = 0; i < this->accounts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->accounts(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Contact_InternalPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Contact_InternalPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Contact_InternalPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Contact_InternalPB::MergeFrom(const Contact_InternalPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  nyms_.MergeFrom(from.nyms_);
  accounts_.MergeFrom(from.accounts_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gui_label()) {
      set_gui_label(from.gui_label());
    }
    if (from.has_contact_id()) {
      set_contact_id(from.contact_id());
    }
    if (from.has_email()) {
      set_email(from.email());
    }
    if (from.has_memo()) {
      set_memo(from.memo());
    }
    if (from.has_public_key()) {
      set_public_key(from.public_key());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Contact_InternalPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contact_InternalPB::CopyFrom(const Contact_InternalPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contact_InternalPB::IsInitialized() const {
  
  return true;
}

void Contact_InternalPB::Swap(Contact_InternalPB* other) {
  if (other != this) {
    std::swap(gui_label_, other->gui_label_);
    std::swap(contact_id_, other->contact_id_);
    std::swap(email_, other->email_);
    std::swap(memo_, other->memo_);
    std::swap(public_key_, other->public_key_);
    nyms_.Swap(&other->nyms_);
    accounts_.Swap(&other->accounts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Contact_InternalPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Contact_InternalPB_descriptor_;
  metadata.reflection = Contact_InternalPB_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddressBook_InternalPB::kContactsFieldNumber;
#endif  // !_MSC_VER

AddressBook_InternalPB::AddressBook_InternalPB()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AddressBook_InternalPB::InitAsDefaultInstance() {
}

AddressBook_InternalPB::AddressBook_InternalPB(const AddressBook_InternalPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AddressBook_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddressBook_InternalPB::~AddressBook_InternalPB() {
  SharedDtor();
}

void AddressBook_InternalPB::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddressBook_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddressBook_InternalPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddressBook_InternalPB_descriptor_;
}

const AddressBook_InternalPB& AddressBook_InternalPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Moneychanger_2eproto();  return *default_instance_;
}

AddressBook_InternalPB* AddressBook_InternalPB::default_instance_ = NULL;

AddressBook_InternalPB* AddressBook_InternalPB::New() const {
  return new AddressBook_InternalPB;
}

void AddressBook_InternalPB::Clear() {
  contacts_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddressBook_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .OTDB.Contact_InternalPB contacts = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_contacts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_contacts()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_contacts;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AddressBook_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .OTDB.Contact_InternalPB contacts = 1;
  for (int i = 0; i < this->contacts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->contacts(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AddressBook_InternalPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .OTDB.Contact_InternalPB contacts = 1;
  for (int i = 0; i < this->contacts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->contacts(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AddressBook_InternalPB::ByteSize() const {
  int total_size = 0;
  
  // repeated .OTDB.Contact_InternalPB contacts = 1;
  total_size += 1 * this->contacts_size();
  for (int i = 0; i < this->contacts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->contacts(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddressBook_InternalPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddressBook_InternalPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddressBook_InternalPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddressBook_InternalPB::MergeFrom(const AddressBook_InternalPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  contacts_.MergeFrom(from.contacts_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddressBook_InternalPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddressBook_InternalPB::CopyFrom(const AddressBook_InternalPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddressBook_InternalPB::IsInitialized() const {
  
  return true;
}

void AddressBook_InternalPB::Swap(AddressBook_InternalPB* other) {
  if (other != this) {
    contacts_.Swap(&other->contacts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddressBook_InternalPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddressBook_InternalPB_descriptor_;
  metadata.reflection = AddressBook_InternalPB_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WalletData_InternalPB::kBitcoinServerFieldNumber;
const int WalletData_InternalPB::kBitcoinAcctFieldNumber;
const int WalletData_InternalPB::kRippleServerFieldNumber;
const int WalletData_InternalPB::kLoomServerFieldNumber;
#endif  // !_MSC_VER

WalletData_InternalPB::WalletData_InternalPB()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WalletData_InternalPB::InitAsDefaultInstance() {
}

WalletData_InternalPB::WalletData_InternalPB(const WalletData_InternalPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WalletData_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WalletData_InternalPB::~WalletData_InternalPB() {
  SharedDtor();
}

void WalletData_InternalPB::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WalletData_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WalletData_InternalPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WalletData_InternalPB_descriptor_;
}

const WalletData_InternalPB& WalletData_InternalPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Moneychanger_2eproto();  return *default_instance_;
}

WalletData_InternalPB* WalletData_InternalPB::default_instance_ = NULL;

WalletData_InternalPB* WalletData_InternalPB::New() const {
  return new WalletData_InternalPB;
}

void WalletData_InternalPB::Clear() {
  bitcoin_server_.Clear();
  bitcoin_acct_.Clear();
  ripple_server_.Clear();
  loom_server_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WalletData_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .OTDB.BitcoinServer_InternalPB bitcoin_server = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bitcoin_server:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bitcoin_server()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_bitcoin_server;
        if (input->ExpectTag(18)) goto parse_bitcoin_acct;
        break;
      }
      
      // repeated .OTDB.BitcoinAcct_InternalPB bitcoin_acct = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bitcoin_acct:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bitcoin_acct()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bitcoin_acct;
        if (input->ExpectTag(26)) goto parse_ripple_server;
        break;
      }
      
      // repeated .OTDB.RippleServer_InternalPB ripple_server = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ripple_server:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ripple_server()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ripple_server;
        if (input->ExpectTag(34)) goto parse_loom_server;
        break;
      }
      
      // repeated .OTDB.LoomServer_InternalPB loom_server = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_loom_server:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_loom_server()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_loom_server;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WalletData_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .OTDB.BitcoinServer_InternalPB bitcoin_server = 1;
  for (int i = 0; i < this->bitcoin_server_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bitcoin_server(i), output);
  }
  
  // repeated .OTDB.BitcoinAcct_InternalPB bitcoin_acct = 2;
  for (int i = 0; i < this->bitcoin_acct_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bitcoin_acct(i), output);
  }
  
  // repeated .OTDB.RippleServer_InternalPB ripple_server = 3;
  for (int i = 0; i < this->ripple_server_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ripple_server(i), output);
  }
  
  // repeated .OTDB.LoomServer_InternalPB loom_server = 4;
  for (int i = 0; i < this->loom_server_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->loom_server(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WalletData_InternalPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .OTDB.BitcoinServer_InternalPB bitcoin_server = 1;
  for (int i = 0; i < this->bitcoin_server_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bitcoin_server(i), target);
  }
  
  // repeated .OTDB.BitcoinAcct_InternalPB bitcoin_acct = 2;
  for (int i = 0; i < this->bitcoin_acct_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bitcoin_acct(i), target);
  }
  
  // repeated .OTDB.RippleServer_InternalPB ripple_server = 3;
  for (int i = 0; i < this->ripple_server_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->ripple_server(i), target);
  }
  
  // repeated .OTDB.LoomServer_InternalPB loom_server = 4;
  for (int i = 0; i < this->loom_server_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->loom_server(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WalletData_InternalPB::ByteSize() const {
  int total_size = 0;
  
  // repeated .OTDB.BitcoinServer_InternalPB bitcoin_server = 1;
  total_size += 1 * this->bitcoin_server_size();
  for (int i = 0; i < this->bitcoin_server_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bitcoin_server(i));
  }
  
  // repeated .OTDB.BitcoinAcct_InternalPB bitcoin_acct = 2;
  total_size += 1 * this->bitcoin_acct_size();
  for (int i = 0; i < this->bitcoin_acct_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bitcoin_acct(i));
  }
  
  // repeated .OTDB.RippleServer_InternalPB ripple_server = 3;
  total_size += 1 * this->ripple_server_size();
  for (int i = 0; i < this->ripple_server_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ripple_server(i));
  }
  
  // repeated .OTDB.LoomServer_InternalPB loom_server = 4;
  total_size += 1 * this->loom_server_size();
  for (int i = 0; i < this->loom_server_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->loom_server(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WalletData_InternalPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WalletData_InternalPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WalletData_InternalPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WalletData_InternalPB::MergeFrom(const WalletData_InternalPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  bitcoin_server_.MergeFrom(from.bitcoin_server_);
  bitcoin_acct_.MergeFrom(from.bitcoin_acct_);
  ripple_server_.MergeFrom(from.ripple_server_);
  loom_server_.MergeFrom(from.loom_server_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WalletData_InternalPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WalletData_InternalPB::CopyFrom(const WalletData_InternalPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WalletData_InternalPB::IsInitialized() const {
  
  return true;
}

void WalletData_InternalPB::Swap(WalletData_InternalPB* other) {
  if (other != this) {
    bitcoin_server_.Swap(&other->bitcoin_server_);
    bitcoin_acct_.Swap(&other->bitcoin_acct_);
    ripple_server_.Swap(&other->ripple_server_);
    loom_server_.Swap(&other->loom_server_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WalletData_InternalPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WalletData_InternalPB_descriptor_;
  metadata.reflection = WalletData_InternalPB_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace OTDB

// @@protoc_insertion_point(global_scope)
